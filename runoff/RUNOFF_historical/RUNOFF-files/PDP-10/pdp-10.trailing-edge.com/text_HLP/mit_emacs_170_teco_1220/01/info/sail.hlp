SAIL is  a high level programming language based  on ALGOL-60.  It is extended
to provide  string  handling,  associative data  (LEAP),  easy access  to  the
TOPS-20 input/output features, and much else.

***************
Note:    You will find in the manuals that there is a distinction between
TENEX and TOPS-10 SAIL.  Since this is TOPS-20, you will not know which to
expect.  The answer is that TOPS-20 is nearly the same as TENEX.  So use 
TENEX SAIL input/output routines!
***************

To compile, load, and run a  Sail program, type the following (@ is the prompt
typed by the system):

	@EXEC myprog		compiles and executes the file in your
				directory area named MYPROG.SAI

In  SAIL, special  handling of  characters not  included in  the ASCII standard
keyboard  set is  needed.  The following  equivalents apply  when comparing the
SAIL manual with what you type on a LOTS keyboard:

	SU-AI character				standard ASCII
	circle times				XOR
	membership (epsilon)			IN
	equivalence				EQV
	_ (in identifiers)			!
	left arrow				:= -or- _


It is possible to get an execution count profile of a SAIL program 
(indicating the number of times each statement was executed), displayed
on a listing which is indented to show the block structure of the
program.  The method is a bit complicated, but the result is so often
an aid in debugging that it's worth it.  The execution counts and the
display of the block structure each have their own merits.

[1]  Compile and execute the program, specifying the /PROFILE switch.
For example:
	@EXEC BLATZ.SAI/PROFILE

The /profile switch causes Sail to write a file of execution counts,
BLATZ.KNT , when it finishes execution.  This file will be used by the
profile program, below.

[2]  Call the PROFIL program as follows:
	@PROFIL			!profiler
	*BLATZ_BLATZ		!two "BLATZ"'s separated by underbar

[3]  Now print the profile file, which has extension ".PFL" as
in "BLATZ.PFL" and is of 120 column width.

[2 Alternative]  Call the PROFIL program, and specify that output should
go directly to the terminal:
	@PROFIL
	*TTY:_BLATZ/T
The /T switch instructs profil to produce a listing formatted for terminal
viewing -- 80 columns wide.

For more information, see page 156, Appendix F, of the SAIL manual.

<STDSAI>
STDSAI is a  program thought to  standarize the use  of capital  letters in the
source listing of a program. Its main apliccation is the publication of source
files.

TO USE IT:

    type STDSAI to the @ prompt.

    the program will ask you the name of the input and output files, and 
    several options. If you don't understand a question, hit return. It 
    will take a default value.

        If you have any comments, complaints, etc., send them to Armando
        Rodriguez at SU-AI.

Here is a Sample Run:

@stdsai
This program standarizes a SAIL Source File.
Comments, questions and bugs should go to Armando Rodriguez at SU-AI.

name of the input file:
-final.sai
name of the outputfile, or <CR> if FINAL.STD is OK
-
does the program have a macro defined for comments?
 'yes' or 'no' (<CR> means NO)
-yes
please type it:
-!
do you want to upshift the first letter of the procedure and macro names?
 'yes' or 'no' (<CR> means YES)
-
if you want to add other words to this condition,
type them one a line. to end, <CR> at a new line.
-cr

-crlf

-readline
-
<CR> if TENEX or TOPS-20 set of reserved words; <@><CR> otherwise
-

End of SAIL execution
