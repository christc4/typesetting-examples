
Introductory Help to TOPS-10 Commands

TOPS-10 is the name of the Timesharing Operating  System  for  use  on
DIGITAL's  KL10  and  KS10  systems.  You communicate with the TOPS-10
operating system using the  TOPS-10  command  language.   The  TOPS-10
operating system is also called the monitor.

Jobs

TOPS-10 is a timesharing system; that is, the system transfers control
rapidly  among a number of jobs, so that all jobs appear to be running
simultaneously.  The term job refers to the entire sequence  of  steps
that  you start from your terminal or card deck.  You start a job from
your terminal by using the LOGIN command, and you use the KJOB command
to end your job.

You can initiate a job at a central computer site  or  from  a  remote
location.

After you initiate a job,  you  can  initiate  a  second  job  without
terminating  the  first.   For example, you can initiate a timesharing
job and, using the SUBMIT command,  submit  a  second  job  for  batch
processing.

When configuring and loading TOPS-10, the  system  administrator  sets
the maximum number of jobs the system can process.


Connecting to the System

Only  authorized  users  have  access   to   TOPS-10.    Your   system
administrator  provides  each  authorized  user  with  a  user name, a
project programmer number (PPN), and a password.  These  identify  all
users  and  their  corresponding  areas  on file structures.  When you
specify a directory area, your  project-programmer  number  identifies
you.   A  comma  separates the project and programmer numbers, and the
entire PPN is enclosed in square brackets.  For example, [27,4072].

The project numbers range from 1 to 377777  (octal).   The  programmer
numbers  range  from  1  to  777777  (octal).  Numbers 1 through 7 are
reserved for DIGITAL, and numbers 400000 through 777777  are  reserved
for special purposes.

Your password is one to thirty-nine characters long and is  used  when
you  log  in  to  the  system  and when you attach to another job.  To
maintain password secrecy, the monitor does not echo your password  on
the  terminal.   When you are using a terminal with local copy, a mask
is  printed  when  you  type  your  password,  making   the   password
unreadable.


Operating System Modes

You can run jobs  on  the  TOPS-10  operating  system  in  two  modes:
interactive mode and batch mode.

Interactive Mode

Jobs that run in interactive mode use a terminal to access the system.
The  language  you  use  to  run  a  job is the command language.  The
commands you type on the terminal are received and  processed  by  the
command language interpreter of the TOPS-10 monitor.  When your job is
in interactive mode, you complete your work at  two  levels:   monitor
and user level.

Batch Mode

Batch jobs communicate with the system in batch mode.  They are  input
to the system from punched cards or from the terminal.  Batch jobs are
handled by the  batch  command  interpreter.   For  information  about
TOPS-10 batch, refer to the TOPS-10/TOPS-20 Batch Reference Manual.


Interactive Levels

When your terminal is in interactive mode, your job is at one  of  two
levels, monitor level or user level.

Monitor Level

When your job is at monitor level,  you  are  communicating  with  the
monitor.   The command language interpreter processes each command you
type.  The monitor prompts you  with  a  period  (.).   Every  monitor
command  should  follow  this  prompt.   You  end a monitor command by
pressing the RETURN key (<RET>).

The format of each command  is  variable  because  many  commands  are
followed by optional switches, arguments, or values.

User Level

When you type the operating system command RUN, followed by a  program
name,  your  job moves from monitor level to user level.  To move back
to monitor level, type CTRL/C.  If the  program  is  not  waiting  for
terminal input, it may be necessary to type CTRL/C twice.

Other commands also bring your job to user level.  When your job is at
user  level,  you  are working with a program other than the operating
system itself.  Each program has its own set of commands and  its  own
command  interpreter.   This  manual  describes  some system programs.
System programs usually prompt with an asterisk (*).

At user  level,  control  characters  and  special  keys  can  have  a
different   effect   than  they  have  at  monitor  level.   Read  the
description of each program to determine the effects  of  the  control
characters and special keys.


Contexts

A core image is what a job's portion of memory contains at  any  given
time.   The  core  image,  as  well as information about the monitor's
state with respect to  your  job,  constitute  a  context.   When  you
initialize  a  program,  your  context usually changes.  For instance,
running the DIRECT program  creates  a  core  image  with  the  DIRECT
program  in  it.  Exiting DIRECT and then running SYSTAT, for example,
destroys what you had in memory (the DIRECT program)  and  loads  data
pertinent to SYSTAT.

Three commands allow you to display information  about  contexts,  and
manipulate  them  in  various ways.  These commands are CONTEXT, PUSH,
and POP.  CONTEXT and PUSH create additional  contexts.   POP  returns
you  to  a superior context.  When you work with multiple contexts, at
least one context  is  preserved  while  you  work  with  the  current
context.

You can work with multiple contexts by creating parallel contexts,  or
creating  inferior  contexts.  The default maximum number of contexts,
including current, parallel, and inferior, is  four.   The  number  of
contexts  in  use  at any moment is shown by the CONTEXT command.  You
can also use the CONTEXT command to  create  parallel  contexts.   You
might  create a parallel context, run a frequently accessed program in
it, and then exit, returning to your previous context.  Both  contexts
now  exist  simultaneously.   When  you need to use the program in the
created context, simply switch to that context.  You will not have  to
wait for it to reinitialize.

The PUSH command allows you to create an inferior context.   When  you
return  to  your  previous  task  in  a superior context, the inferior
context is deleted.  You return to the superior context using the  POP
command.    An  inferior  context  could  be  used  in  the  following
situation:  If you were in the  process  of  completing  a  task,  and
needed  to  see  some HELP text, you could create an inferior context,
read the HELP text you needed, destroy the inferior context and return
to the unchanged superior context.  The system automatically creates a
new context for certain commands.  The  system  manager  can  set  the
system to create a new context when any monitor command is issued.
