
VERSION Command

Function

     The VERSION command prints on your terminal the version number of
     the  program in your core area (that is, the last program you ran
     implicitly or  explicitly).   One  use  of  this  command  is  to
     determine  the  program  that  printed  an  error message on your
     terminal.  If your terminal is still at user level  (that  is,  a
     character other than a period was printed) after the message, you
     can type the following:

     ^C        (two CTRL/Cs if the program is not waiting for input)
     .VERSION

     The monitor returns with the name of the program  in  core  (that
     is, the one presumed to have printed the message) and the version
     number of that program.  After receiving the information, you can
     type  CONTINUE  to  return  your  terminal  to user mode.  If the
     message was a fatal message (that is, a period was printed  after
     the message), you do not have to type CTRL/C because the terminal
     is already at monitor level.  In  most  cases,  you  cannot  type
     CONTINUE after a fatal error message.

     The version number is obtained from .JBVER and .JBHVR in the  job
     data  area  and is printed in standard format.  Similar output is
     automatically generated by the SET WATCH VERSION  command.   (For
     more  help  on  SET  WATCH, see the help file SETWAT.) The output
     from these two commands is in one of the following forms:

          [low + high]        The low and high segments are different.

          [low]               There is only a low segment.

          [low +]             The low and high segments are the same.

          [+]                 A GETSEG monitor call has been performed
                              to  a  high segment that matches the low
                              segment.

          [+ high]            A GETSEG monitor call has been done to a
                              high segment that does not match the low
                              segment.

          [+ high + high]     A SEGOP. monitor call has been  done  to
                              bring  a  high segment into core without
                              destroying the existing high segment.

          [blank]             The high segment has been released.

          [+ FROM file-spec]  The file has been read into memory.

          [+ high NOT SHARABLE FROM file-spec]
                              The  file  read  into  memory   is   not
                              sharable.

     With  the  VERSION  command,  the  low  and  high  segments   are
     represented in the format:

     name version

     With the SET WATCH VERSION command, the low and high segments are
     represented in one of three formats:

          name version      The program is not from SYS:.

          :name version     The output  is  the  result  of  a  SETNAM
                            monitor  call  (for example, at the end of
                            loading).

          S:name version    The program is a program loaded  from  the
                            system  device  (actual  SYS:, not logical
                            device SYS:).

     The name is the name  of  the  program  and  the  version  is  in
     standard format.  When the version number is output, the standard
     format is:

     major-version minor-version(edit)-group who modified program

     The major version is octal; the minor version is alphabetic;  the
     edit  is octal and enclosed in parentheses and the group who last
     modified the program is octal and preceded by a hyphen (0 is  DEC
     development,  1 is all other DEC personnel, and 2-7 is customer).
     There are no spaces separating the items, and if an item is zero,
     it  does not appear in print.  The parentheses and hyphen also do
     not appear in print if  the  corresponding  item  is  zero.   The
     following  are  examples  of  version  numbers output in standard
     format.

          10B(335)-1     major  version  10,  minor  version  B,  edit
                         number  335, group that last modified program
                         1.

          7(5)           major version 7, minor version 0, edit number
                         5, group that last modified program 0.

          54A            major  version  54,  minor  version  A,  edit
                         number 0, group that last modified program 0.

Format

     VERSION

Characteristics

     Leaves your terminal at monitor level.

     Does not destroy your job's core image.

Examples

     1.  Run the TECO program.

         .R TECO<RET>

         Halt the program.

         *^C

         Find version number.

         .VERSION<RET>
         TECO 23B(162) +

         Continue the program and exit.

         .CONTINUE<RET>
         *EX<ESC><ESC>

         .

     2.  Type a file.

         .TYPE WONDER.ALG<RET>
         BEGIN   INTEGER S, C, B, A;
         !  THIS PROGRAM WILL ADD THREE NUMBERS AND;
         !  PRINT THE RESULT; ^C

         Find version number of PIP, which executes TYPE.

         .VERSION<RET>
         PIP 33B(260) +

         Run and halt the SYSTAT program.

         .R SYSTAT<RET>

         STATUS OF     R5743A SYS #40/2 AT 14:45:44 ON 22-APR-75

         UPTIME 7:36:20+7:34:33, ^C
         ^C

         Find the version number of SYSTAT.

         .VERSION<RET>
         SYSTAT 472(156)

         .

