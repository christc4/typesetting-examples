
The Plus (+) Construction

The + construction specifies that the files to the right of  the  plus
sign  are  combined with the first file you specified.  Therefore, all
files you specify become one file in the compilation and not  separate
files.

This construction is useful when the first file is a subroutine of the
other files you specified.

When you use the  +  construction,  the  compiler  produces  a  single
relocatable  binary  file from a collection of input source files.  To
construct a single program from several input files, you can name  one
input  file  FIRST.MAC, another MIDDLE.MAC, and a third LAST.MAC.  You
can then specify the following command line:

     .COMPILE FIRST+MIDDLE+LAST

After this, the compiler produces one binary file named LAST from  the
three source files, FIRST, MIDDLE, and LAST.  This construction allows
you to use one input file as part of several  different  compilations.
For  example,  you  could later use the FIRST.MAC file with SECOND.MAC
and THIRD.MAC to obtain a different binary file.  The  +  construction
permits  you  to  maintain material in a single file that is common to
more than one compilation.

The compiler gives the name of the last input file in  the  string  to
any  output  file  (for example, .REL, .CRF, .LST).  Therefore, in the
previous examples, the output files would be called  LAST  and  THIRD,
respectively.  Note that you can include device names, extensions, and
project-programmer numbers in  any  +  construction.   Therefore,  the
following is a valid command string:

     .COMPILE FIRST.MAC[27,4072]+SECOND.MAC+THIRD.MAC[35,234]
