
FILE Command

Function

     The  FILE   command   remotely   controls   DECtape-to-disk   and
     disk-to-DECtape transfers on operator-handled DECtapes.

                                   NOTE

             The FILE command is  not  part  of  the  standard
             system.   Your site must run OMOUNT explicitly to
             make the FILE command usable.

     There are seven functions that  can  be  performed  by  the  FILE
     command.

          Format         Function

          FILE C         Check
          FILE D         Delete
          FILE F         File
          FILE L         Read
          FILE R         Retrieve
          FILE W         Wait
          FILE Z         Zero

     The C and W functions are the only requests  that  are  performed
     immediately.   Your  terminal  and job are free to proceed before
     the request is completed, except for  batch  jobs,  which  cannot
     continue until execution is complete.

Formats

     1.  FILE C

         Checks the queue of FILE requests to determine if any of your
         requests  are  still  pending.   There  is no argument to the
         command in this format.  Pending requests for your  job  will
         be printed on your terminal.

     2.  FILE D,tape-id,file.ext,file.ext,...

         Deletes the  specified  files  from  DECtape.   This  command
         requires  tape  identification  and  a  list of file names as
         arguments.  The tape-id is a 1- to  6-character  alphanumeric
         name  that identifies the tape.  After the files are deleted,
         an automatic FILE L is performed.

     3.  FILE F,tape-id file-spec,file-spec,...

         Copies the specified files onto the specified DECtape.   This
         command  requires  a  tape  identification  and  list of file
         specifications as arguments.   The  file  specifications  can
         include    an    explicit    file    structure    name    and
         project-programmer number so that you can copy files  from  a
         disk  area  other  than your own.  You do not have to specify
         the device and project-programmer number of  subsequent  file
         specifications  if  they  do  not  change.  That is, you must
         specify the programmer number (for example,  [,104])  if  the
         file  to  be  copied has the same project number as yours and
         you must specify  the  project  number  ([41,])  if  you  are
         copying files from another project.

         The protection of the disk file is checked to see if the file
         can  be  read.   In  addition,  the protection of the DECtape
         directory file (tape-id.DIR) is checked to  see  if  you  can
         update  it.   If  there  is not enough room on the DECtape to
         copy an entire file, that portion  (if  any)  that  has  been
         written  so  far is deleted and an error message is placed in
         the directory file.  When the files  have  been  successfully
         copied, an automatic FILE L is performed.

         When the wildcard construction is used with the  FILE  F  and
         FILE Z commands, your job's entire search list is used.  That
         is, all files matching the construction are transferred  from
         all structures in the search list.

         In  most  cases  you  do  not  need  to  specify  which  file
         structures  the  files  are on because UMOUNT determines this
         (with LOOKUPs) and passes the information  to  OMOUNT.   With
         the  FILE  F and FILE Z functions, if a file structure is not
         specified and the specified file  exists  on  more  than  one
         structure, the first one in your search list is copied.

     4.  FILE L,tape-id

         Reads the directory of a DECtape and writes it into your disk
         area  as  an  ASCII file with the file name tape-id.DIR.  The
         file is placed on  the  first  file  structure  that  can  be
         written on in your search list, as long as that structure has
         an area that matches your project-programmer number.  Tape-id
         is  a  1-  to  6-character  alphanumeric name that is used to
         identify the tape.  You can then print the directory on  your
         terminal  with  the  TYPE command.  The format of the DECtape
         directory is similar to the directory  file  written  by  the
         DIRECTORY command.  If errors occur while the FILE command is
         being processed, the system writes error  messages  into  the
         directory file tape-id.DIR.

     5.  File R,tape-id,dev:file.ext,dev:file.ext...

         Transfers the specified files from your DECtape to the  disk.
         This  command  requires  tape-id  and a list of file names as
         arguments.  If the specified files already exist in the  disk
         area,  they  are  superseded, if their protection code allows
         it.  If the specified files do not exist, they are created on
         the  first file structure in your job's search list for which
         creation is  permitted.   After  files  are  transferred,  an
         automatic FILE L is performed.

         If  you  have  a  search  list   containing   multiple   file
         structures,  the  asterisk  construction  (when used with the
         FILE R command) can cause files to  be  created  rather  than
         superseded.   For the FILE R function, when no file structure
         is specified, the  files  are  copied  onto  the  first  file
         structure  in  your  search  list on which you are allowed to
         create files.   (Refer  to  the  description  of  the  SETSRC
         program.)  When a file structure name is typed or implied, it
         becomes the new default.

     6.  FILE W

         Waits until all of your pending requests are processed before
         allowing   your  job  to  continue.   If  there  are  pending
         requests, the message "WAITING...  TYPE 2 ^C'S  TO  EXIT"  is
         printed  on  your terminal.  Control returns to your job when
         all requests have been processed.  You can type  two  CTRL/Cs
         if you decide not to wait.

         FILE Z,tape-id,dev:file.ext[ppn],dev:file.ext[ppn]...

         Deletes the files in the directory of the DECtape before  the
         files are copied and then performs the same operations as the
         FILE F command.  This command requires tape-id and can have a
         list  of  file  specification arguments.  After the files are
         copied, an automatic FILE L is performed.

         When you use the wildcard construction with the  FILE  F  and
         FILE Z commands, your job's entire search list is used.  That
         is, all files matching the construction are transferred  from
         all structures in the search list.

     The wildcard constructions can be  used,  but  generic  DSK:  can
     define  many  file  structures;  the  specific  file structure is
     chosen as follows:

          When you use the wildcard construction for the file name  or
          extension,  the first structure in your search list that you
          can access is used.

          If you do not use the wildcard  construction  and  the  file
          exists,  the  first  file  structure in the search list that
          contains the specified file is used, unless overridden by  a
          default.   (Refer  to  the  examples.)  If the file does not
          exist, the standard structure is used.

Examples

     In the following examples, your search list is as follows:

     SORT:,DSKA:/NOCREATE,DSKB:,DSKC:

     You are user 10,3421, with UFDs on DSKA:, DSKB:, and  DSKC:,  and
     the  file  EX.1  exists  on each of these three structures.  User
     10,4072 has the file EX.2 in his area on DSKB: and on DSKC:.

     1.  This command requests that the operator mount DECtape 1, that
         the  file  EX.1 in your area be copied onto it, that the file
         EX.2[10,4072]  also  be  copied  onto  the  DECtape,  that  a
         directory  of  the  DECtape be written in your area, and that
         the operator dismount the DECtape.

         The directory is written on the first  structure  encountered
         in  the  search  list  that is both writable and on which you
         have a UFD.  In the preceding example, you do not have a  UFD
         on  the  first  structure  in  your  search list (SORT:), you
         cannot create new files  on  the  second  structure  in  your
         search  list  (DSKA:), and so the directory is written on the
         third structure in your search list (DSKB:).

         The file EX.1 on DSKA: will be copied only onto  the  DECtape
         because  the  copy  on DSKA: was encountered first.  The file
         DSKB:EX.2[10,4072] will be copied onto  the  DECtape  because
         the copy on DSKB: was encountered first.

         .FILE F,TAPE1,EX.1,EX.2[10,4072]<RET>
         REQUEST QUEUED
         1. F JOB30 TTY11 10,3421 TAPE1
         DSKB:,DSKA0:EX.1,DSKB0:EX.2[10,4072]
         1 COMMAND IN QUEUE
         .

     2.  In this example, you specified that DSKC: be copied from both
         areas.  DSKC: was typed only once because a device given in a
         file specification remains  in  effect  for  subsequent  file
         specifications  in the same command, unless another device is
         specified.  When you omit the project number the  default  is
         your  project-programmer number.  Also the project-programmer
         number can be specified either before the file  name  (as  in
         this  example)  or  after  the file name (as in the preceding
         example).

         .FILE F,TAPE2,DSKC:EX.1,[,4072]EX.2<RET>
         REQUEST QUEUED
         2. F JOB30 TTY11 10,3421 TAPE2
         DSKB:DSKC0:EX.1,DSKC0:EX.2[10,4072]
         2 COMMANDS IN QUEUE
         .

         The response from the FILE C command indicates to  you  which
         of  your requests have not yet been processed.  In this case,
         both of your requests are still pending.

         .FILE C<RET>
         1. F JOB30 TTY11 10,3421 TAPE1
         DSKB:,DSKA0:EX.1,DSKB0:EX.2[10,4071]
         2. F JOB30 TTY11 10,3421 TAPE2
         DSKB:,DSKC0:EX.1,DSKC0:EX.2[10,4072]
         2 COMMANDS IN QUEUE
         .

         The FILE R command uses the same algorithm as the FILE F  and
         Z  command  for  determining the device on which to write the
         directory.  The file  EX.1  is  written  on  the  first  file
         structure  in your search list.  The file EX.1 already exists
         on DSKA:, DSKB:, and DSKC:.  DSKA: is NOCREATE, so  the  file
         EX.1  is  written  onto DSKB, superseding the EX.1 already on
         DSKB:.

         .FILE R,TAPE1,EX.1<RET>
         REQUEST QUEUED
         1. R JOB24 TTY11 10,3421 TAPE1
         DSKB:,DSKB:EX.1
         1 COMMAND IN QUEUE
         .

     3.  When the wildcard  construction  is  used,  UMOUNT  uses  the
         entire search list to determine what files to copy for FILE F
         and FILE Z commands, whether or not  you  have  a  UFD  on  a
         particular  structure.  UMOUNT passes the construction, along
         with each structure in the search list, to OMOUNT.

         .FILE F,TAPE3,E?.*<RET>
         REQUEST QUEUED
         2. F JOB24 TTY11 10,3421 TAPE3
         DSKB:,SORT:E?.*,DSKA:E?.*,DSKB:E?.*,DSKC:E?.*
         DSKC:E?.*
         2 COMMANDS IN QUEUE
         .

