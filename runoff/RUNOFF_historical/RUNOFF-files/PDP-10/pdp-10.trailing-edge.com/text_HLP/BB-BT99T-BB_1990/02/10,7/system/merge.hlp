
MERGE Command

Function

     The MERGE command combines  the  low  segment  of  an  executable
     program  in the specified file with the program that is currently
     in memory.  The MERGE command, like the  GET  command,  does  not
     start execution of the program.  MERGE is used to load page fault
     handlers and DDT.

Format

     MERGE dev:file.ext[directory] /switch

     Where:    dev: is the logical or name of  the  device  containing
               the  program  you want to merge into core.  The default
               device is DSK:.

               file.ext is the name of the file containing the program
               you want to merge into core.  You must specify the file
               name.  The file extension defaults to .EXE.

               [directory] is the directory name, required only if the
               core  image  file  is located in a disk area other than
               yours.  The default is  the  directory  area  that  you
               logged in to.

               /switch is the following option:

               /USE:n    Specifies the octal section number, (n), into
                         which  a  program  is  merged.  Valid section
                         numbers are 0-37, octal.

Characteristics

     Places your terminal at user level.

     Requires LOGIN.

     Changes your core image.

Example

     Type two programs.

     .TY FIRST.MAC<RET>
     FIRST:  RESET
             JRST    700000
             END     FIRST

     .TY SECOND.MAC<RET>
              .PSECT FOO,700000
     SECOND:   OUTSTR [ASCIZ/
     EXECUTION AT 700000
     /]
             EXIT
             END

     Compile the programs.

     .COMPILE FIRST.MAC<RET>
     MACRO:   .MAIN

     EXIT

     .COMPILE SECOND.MAC<RET>
     MACRO:   .MAIN

     EXIT

     Run LINK and save the files.

     .R LINK<RET>

     *FIRST/SAVE=FIRST/GO<RET>

     EXIT

     .R LINK<RET>

     *SECOND/SAVE=SECOND/GO<RET>

     EXIT

     Use GET to bring the first program into memory.

     .GET FIRST<RET>
     JOB SETUP

     Use MERGE to bring the second program into memory.

     .MERGE SECOND<RET>
     SECOND MERGED

     Start execution of the programs.

     .START<RET>

     EXECUTION AT 700000

     EXIT

     After a successful execution, examine the memory area.  Note that
     address 777 is occupied.

     .E 777<RET>
     000777/ 000000 000000   .

     Address 1000 does not exist.

     .E 1000<RET>
     ?OUT OF BOUNDS

     Address 700000 is occupied.

     .E 700000<RET>
     700000/ 051140 700002  .

     Address 701000 does not exist.

     .E 701000<RET>
     ?OUT OF BOUNDS
     .
