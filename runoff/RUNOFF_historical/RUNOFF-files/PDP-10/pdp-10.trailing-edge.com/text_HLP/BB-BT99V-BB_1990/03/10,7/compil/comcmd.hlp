
Compile-Class Commands

The six basic COMPILE-class commands are:

     COMPILE
     LOAD
     EXECUTE
     DEBUG
     MAKE
     TECO

Each COMPILE-class command has a help file.

These commands cause the monitor to  run  the  COMPIL  program,  which
deciphers  the  command  and  constructs  new  command strings for the
system program (such as, TECO, PIP, FORTRAN).  Each time you type  the
MAKE  or TECO commands, the command with its arguments is written as a
temporary file in memory or on the disk.  Therefore,  the  system  can
recall the last file specification you typed.  This is an exception to
the requirement that the file name  must  always  be  specified.   For
example if you type:

     .MAKE PROGX.MAC<RET>

You can then later type the following:

     .TECO<RET>

instead of the command line:

     .TECO PROGX.MAC<RET>

assuming that you have not issued a TECO  command  changing  the  file
name in the interim.

The system also writes the COMPILE, LOAD, EXECUTE, and DEBUG commands,
with their arguments, in two places:

     1.  In memory in temporary files written on device  TMP:.   These
         are deleted when you log out or when the system crashes.

     2.  On the disk in a temporary file.

When you use a file specification as the  argument  to  one  of  these
commands, you can use another of these commands with no argument.  The
stored arguments will be used.

Help is also provided for the following constructions:  ampersand (@),
plus (+), equal (=), and angle-bracket (< >).
