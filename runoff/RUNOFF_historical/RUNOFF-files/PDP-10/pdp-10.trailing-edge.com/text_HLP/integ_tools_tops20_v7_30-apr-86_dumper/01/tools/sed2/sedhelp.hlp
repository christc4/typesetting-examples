01 SED
! SED.RNH - Processed by RUNOFF 14:11 April 12, 1984
! Written: 21-Sep-82/SLP
! Updated: 11-May-83/MEH
!
!       27-Dec-82/SLP   Added /SCROLL.
!       11-Apr-83/MEH   Added updates on /TERM and /KEYPAD.
!       11-May-83/MEH   More updates on /TERM and /PROG.
!
 Invokes SED, a full screen-oriented text editor.  The format of the SED
 command is [items enclosed in square brackets are optional]:

      SED [filespec[=][/qualifier(s)]]

 SED is  documented  in  the  SED  tutorial  (SYS$DOC:SED.MAN)  and  SED
 reference (SYS$DOC:SED.DOC) manuals.
02 Overview
 SED is a full screen text editor.  It is easier and more  natural  to
 use than line or character editors like SOS or TECO, and is generally
 faster too.  SED lets your display terminal's screen become a  window
 through  which  you  can  see  and  edit  a text file.  The window is
 updated immediately as you make changes, so you  always  see  exactly
 what your file looks like.

 SED is easy to use.  To enter text into your  file,  just  type.   To
 change  existing text, just type over it.  There are commands to move
 around on the screen, move around in the file, insert or delete lines
 or  spaces,  move  text  from  one place to another, search, edit two
 files at the same time, get  help,  and  other  useful  things.   For
 sophisticated users, SED has a "macro" facility, too.
02 Restrictions
 This VAX version of SED was written and is  still  under  development
 here  at  BYU.   It  is based on the DEC-10 version of SED written by
 Christopher Hall, a DEC employee.  SED was so popular on  our  DEC-10
 that  we decided to make it available on our new VAX system.  Most of
 the commands and features of DEC-10 SED have been  implemented;   the
 rest are coming!

 The current version of SED runs on the following terminal  types:   A
 true DEC VT52, Infoton 200, Ramtek 6211 graphics terminal, DEC VT100,
 Televideo 910, and Visual 200 in VT52+ mode.   However,  SED  can  be
 configured  to  run  on  many  other terminals too.  Please contact a
 Consultant, 424 CB, 378-4941, for more information.

 As previously stated, SED is still under development.  Please  report
 any  bugs in SED to MANAGER via the MAIL command.  The following is a
 list of known deficiencies or problems in VAX SED.  We  plan  to  fix
 all of them (eventually).

 1.  Don't type Control-Ys (the <ROLL-FORWARD-PAGE> command) too fast.
     If  you  type two <ROLL-FORWARD-PAGE> commands in succession such
     that you type the second  <ROLL-FORWARD-PAGE>  before  the  first
     <ROLL-FORWARD-PAGE> finishes, SED will drop to DCL command level.

     This is intentional.  SED is still under development.  We need  a
     way to stop SED when a newly discovered bug puts SED in a loop!

     If you do type Control-Ys too  fast  and  find  yourself  at  DCL
     level, you can still return to SED without losing anything.  Just
     type "CONTINUE" and press return (then  type  a  <REWRITE-SCREEN>
     command).

 2.  Certain commands will clear the pick buffer:  <HELP> and  reading
     an execute command file indirectly (<ENTER>@file.xct<EXECUTE>).

 3.  SED's "looking through a list  of  files"  option,  described  in
     Appendix B of SED.DOC, is not implemented.

 4.  The SED reference manual (SYS$DOC:SED.DOC) describes  the  DEC-10
     version of SED.  It hasn't been edited for the VAX yet.  However,
     you can still use it.  The only noticeable difference between SED
     on  the  DEC-10  and  on the VAX is in the way you specify a file
     name.  All the commands (that are  implemented)  still  work  the
     same.

     The SED tutorial manual (SYS$DOC:SED.MAN) has been edited for the
     VAX.   Where the SED tutorial and reference manuals disagree, the
     tutorial is correct.

02 Parameters
      filespec

 The name of the file you wish to create or edit.

 There are three ways to specify the filespec when you  start  up  the
 SED editor.  At DCL command level type:

    SED filespec=   SED will find or create (if the file doesn't exist
                    yet)  the specified file.  SED's editing window is
                    positioned to the beginning of the file.

    SED filespec    SED will find the specified file.   SED's  editing
                    window is positioned to the beginning of the file.

                    If SED can't find the file,  a  "file  not  found"
                    error  message is displayed.  SED will then return
                    you to the previous  file  you  were  editing  (if
                    there was one).  If you haven't edited a file yet,
                    SED will display a cheery welcoming message.

    SED             SED will return you to the last  file  you  edited
                    with  SED.   SED's editing window is positioned to
                    the same place in the file as where you  left  off
                    last time.

                    If you haven't edited a file yet, SED will display
                    a cheery welcoming message.
02 Commands
 SED has over 50 built-in commands (you can  also  define  your  own).
 They  are summarized below.  The commands are grouped by the function
 they perform.  For complete SED command  descriptions,  see  the  SED
 tutorial  (SYS$DOC:SED.MAN)  and reference (SYS$DOC:SED.DOC) manuals.
 Or try SED's built-in HELP facility.

 COMMANDS to MOVE the CURSOR
 ----------------------------------------------------------------
 CURSOR-UP               Move the cursor up
 CURSOR-DOWN             Move the cursor down
 CURSOR-LEFT             Move the cursor to the left
 CURSOR-RIGHT            Move the cursor to the right
 CURSOR-HOME             Move the cursor to the upper left
 CARRIAGE-RETURN         Move the cursor to start of next line

 TAB                     Move cursor to the next tab stop
 BACKTAB                 Move cursor to the previous tab stop
 UP-TAB                  Up-tab (6 cursor-ups)
 DOWN-TAB                Down-tab (6 cursor-downs)

 LINE                    Move to beginning or end of line
 BEGIN-LINE              Move to beginning of line
 END-LINE                Move to end of line


 COMMANDS to MOVE the WINDOW
 ----------------------------------------------------------------
 ROLL-FORWARD-PAGES      Move window forward some pages
 ROLL-FORWARD-LINES      Move window forward some lines
 ROLL-BACK-PAGES         Move window back some pages
 ROLL-BACK-LINES         Move window back some lines

 SLIDE-LEFT              Move viewing window to the left
 SLIDE-RIGHT             Move viewing window to the right

 PERCENT-GOTO            Move window a percentage into the file


 COMMANDS to INSERT and DELETE
 ----------------------------------------------------------------
 INSERT-SPACES           Add some spaces at the cursor
 DELETE-SPACES           Remove some characters from a line

 INSERT-LINES            Add some blank lines at the cursor
 DELETE-LINES            Remove some lines at the cursor
 ERASE-LINE              Erase from cursor to end of the line

 DELETE-CHARACTER        Delete the character to left of cursor
 ERASE-WORD              Delete previous word

 INSERT-MODE             Insert/replace mode toggle
 ENTER-CONTROL-CHARACTER Make the next character typed a control char
 REAL-TAB                Insert a real tab (Same as <E-C-C>I)

 PICK                    Load buffer with text from the file
 PUT                     Add text to the file from a buffer
 MARK                    Mark position for PICK or DELETE-LINES


 COMMANDS to ENTER or EDIT PARAMETERS
 ----------------------------------------------------------------
 ENTER                   Set up an argument for a command
 RECALL                  Recall latest argument
 RESET                   Cancel argument; rewrite cursor, line,
                         or screen


 COMMANDS to SEARCH and SUBSTITUTE
 ----------------------------------------------------------------
 SEARCH-FORWARD          Search from cursor toward end of file
 SEARCH-BACKWARD         Search from cursor toward start of file
 SUBSTITUTE              Search for a string & substitute another


 COMMANDS to EXIT, SAVE, or SELECT a FILE
 ----------------------------------------------------------------
 EXIT                    Save file and exit
 ABORT                   Exit, forgetting changes
 SAVE-FILE               Save file without exiting
 SET-FILE                Set up a new file for editing


 MISCELLANEOUS COMMANDS
 ----------------------------------------------------------------
 CASE                    Change case of letter at cursor
 EXECUTE                 Set up or execute a sequence of commands
 HELP                    Give help (individual command summaries)
 PUSH                    Spawn a subprocess to execute DCL commands
 REWRITE                 Rewrite screen (Same as <ENTER>^<RESET>)
 SWITCH                  Set/query operating switches
 TAB-SET/CLEAR           Set or clear settable tabs
 WINDOW                  Set or clear split screen windowing
03 Executing_SED_Commands
 About half of SED's commands  are  executed  by  typing  a  CONTROL
 CHARACTER.   The rest are executed by typing a two character ESCAPE
 SEQUENCE or (if your terminal has them) by pressing a FUNCTION KEY.
 Therefore,  what  you  type  may  vary  somewhat  from  terminal to
 terminal.
04 Control_Character_Commands
 Typing a CONTROL CHARACTER means to  momentarily  hold  down  the
 CONTROL  key (usually labelled 'CTRL') while you press one of the
 other keys (usually a letter) on the keyboard.  This  is  similar
 to  the  way  you use the SHIFT key on a typewriter.  You'll find
 the CONTROL key on the left side of the keyboard, near the  SHIFT
 key.   Thirty-two  characters can be typed as control characters:
 A-Z, [, @, _, ], ^, and \.  For alphabetical control  characters,
 no  distinction  is made between upper and lower case:  CONTROL-A
 is the same as CONTROL-a.

 Reguardless of the terminal you use, SED commands invoked by  the
 alphabetical control characters are assigned as shown below.  The
 location and commands assigned to the [, @, _, ], ^  and  \  keys
 vary.

 .___________________________________________________________.
 | ROLL-BACK |  SEARCH   |ROLL-FORWRD|    TAB    |ENTER|PRCNT|
 |PAGES LINES|BKWRD FORWD|LINES PAGES|BKWRD FORWD|C-CH |GOTO |
 |  q     w  |  e     r  |  t     y  |  u     i  |  o  |  p  |
 |_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|
   |INSRT DELET|INSRT DELET|PUT  |        CURSOR         |
   |  SPACES   |   LINES   |     |LEFT  DOWN  UP    RIGHT|
   |  a     s  |  d     f  |  g  |  h     j     k     l  |
   |_____|_____|_____|_____|_____|_____|_____|_____|_____|
     |EXIT |EXE- |ABORT|PICK |SET  |SWTCH|RE-  |
     |     |CUTE |     |     |FILE |     |TURN |
     |  z  |  x  |  c  |  v  |  b  |  n  |  m  |
     |_____|_____|_____|_____|_____|_____|_____|

 Notice how the  commands  are  grouped.   There  is  no  mnemonic
 relationship  (except  by  coincidence)  between  the  name  of a
 command and the key it is on.   Instead,  commands  with  similar
 functions  are placed near each other.  Most SED users agree that
 this system is better  than  a  mnemonic  placement  which  would
 chaotically scatter the commands all over the keyboard.
04 Escape_Sequence_Commands
 Typing an ESCAPE SEQUENCE means to type two  keys  in  succession
 (not  simultaneously).   The  first  key  you  type  is always an
 ESCAPE.  The second key you type is usually a  letter.   If  your
 terminal  doesn't  have  a  lot of function keys, you'll probably
 have to type some SED commands as escape sequences.  (Note:   the
 Visual  200,  DEC  VT52  and  VT100 terminals have function keys.
 Therefore, these  terminals  DO  NOT  use  the  escape  sequences
 described in this section.)

 SED commands invoked by an escape sequence are assigned as  shown
 below.   Note:  it doesn't matter whether the second character of
 the sequence is typed in upper or lower case.

 ._________________________________________________________________.
 |ENTER|REWRT|ERASE|END  |SLIDE|REAL |TAB  |UP   |INSRT|WIN- |PUSH |
 |PARAM|SCREN|WORD |LINE |RIGHT|TAB  |SET/C|TAB  |MODE |DOW  |     |
 | esc |  q  |  w  |  e  |  r  |  t  |  y  |  u  |  i  |  o  |  p  |
 |_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|
         |RECAL|SAVE |DELET|     |     |CURSR|DOWN |ERASE|SLIDE|
         |     |FILE |CHAR |     |     |HOME |TAB  |LINE |LEFT |
         |  a  |  s  |  d  |  f  |  g  |  h  |  j  |  k  |  l  |
         |_____|_____|_____|_____|_____|_____|_____|_____|_____|_______.
           |RESET|LINE |CASE |     |BEGIN|IN-  |MARK |     |     |HELP |
           |     |     |     |     |LINE |VERT |     |  <  |  >  |  ?  |
           |  z  |  x  |  c  |  v  |  b  |  n  |  m  |  ,  |  .  |  /  |
           |_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|

 Unlike the CONTROL CHARACTER commands, notice that there  is  (as
 much  as possible) a mnemonic relationship between the name of an
 ESCAPE SEQUENCE command and the key to which it is assigned.
04 Function_Key_Commands
 Typing a FUNCTION KEY means to press a  specially  labelled  key.
 Function  keys  are  provided  for  convenience.  Pressing one is
 equivalent to typing a control character or an escape sequence.

 All terminals minimally have

      DELETE    Also labelled:  DEL, RUBOUT, RUB or RO
                Equivalent to:  (no equivalent)
                SED command:    DELETE-CHARACTER

      ESCAPE    Also labelled:  ESC, ALTMODE, ALT, SELECT, SEL
                Equivalent to:  CONTROL-[
                SED command:    ENTER-PARAMETER (press twice)
                                HELP (press four times)

      LINE FEED Also labelled:  LF
                Equivalent to:  CONTROL-J
                SED command:    CURSOR-DOWN

      RETURN    Also labelled:  CR, RET, or NEW LINE
                Equivalent to:  CONTROL-M
                SED command:    RETURN

 Most terminals will also have

      BACKSPACE Also labelled:  BS, BACK
                Equivalent to:  CONTROL-H
                SED command:    CURSOR-LEFT

      TAB       Also labelled:  (no other label)
                Equivalent to:  CONTROL-I
                SED command:    TAB-FORWARD

 Many terminals have additional function keys.  Cursor mover  keys
 are  labelled  with  directional arrows.  Other function keys are
 usually labelled F1, F2, F3, etc.;  or  perhaps  PF1,  PF2,  PF3,
 etc.   They  are  commonly  placed across the top and/or down the
 side of the keyboard.  On  some  terminals,  the  numeric  keypad
 doubles as an extra set of function keys.

 When pressed, these  additional  function  keys  send  a  control
 character  or  an  escape sequence.  Unfortunately, the code sent
 varies from one terminal model to another.  So does the  location
 and  number of function keys.  Therefore, the SED command invoked
 by pressing a function key depends on which  terminal  model  you
 are using.

 The only terminals with "additional" function keys  used  by  the
 current  version  of  SED  are:   Visual 200, DEC VT52 and VT100.
 Therefore, these  terminals  DO  NOT  use  the  escape  sequences
 defined in the previous section, "ESCAPE SEQUENCE COMMANDS."
02 Qualifiers
 Qualifiers (switches) tailor SED's operation to  your  liking.   They
 can  be  given as part of the file name in the DCL level SED command,
 in your SED.INI file, or via the  <SWITCH>  and  <SET-FILE>  commands
 while within SED.

 You only have to type enough of the qualifier name to make it  unique
 ("/T" is good enough for TABS).

 You can set more than one switch by separating them with slashes, for
 example /TABS=6/CASE/BACK

 Each qualifier and its default setting is listed below.

 /Qualifier              Default
 ----------              -------
 /AGAIN[=n]
 /ALT[=n]
 /[NO]APPND              /NOAPPND
 /[NO]BACKUP             /BACKUP
 /[NO]BEEP               /NOBEEP
 /[NO]CASE               /NOCASE
 /[NO]COMMENT=ab,cd     /NOCOMMENT
 /[NO]CREATE             /NOCREATE
 /[NO]DELIM[=abc]        /NODELIM
 /[NO]DTABS              /NODTABS
 /GOTO=n                 /GOTO=0
 /[NO]HELP               /HELP
 /[NO]ICR                /NOICR
 /[NO]ID                 /NOID
 /[NO]IMODE              /NOIMODE
 /[NO]INVRT              /INVRT
 /[NO]ISAVE[=n]          /NOISAVE (/ISAVE=0)
 /[NO]ITABS              /ITABS
 /[NO]JOURN              /NOJOURN
 /[NO]KEYPAD             /KEYPAD
 /LENG=n                 /LENG=24
 /LMAR=n                 /LMAR=1
 /[NO]MESSAGE            /MESSAGE
 /OUT=filespec
 /[NO]PAGE               /NOPAGE
 /[NO]PROG=filespec      /NOPROG
 /[NO]QUICK              /NOQUICK
 /[NO]RAISE              /RAISE
 /[NO]RCUR               /NORCUR
 /[NO]READ               /WRITE  (/NOREAD)
 /[NO]RECOV              /NORECOV
 /[NO]RESET              /RESET
 /[NO]RMAR=n             /RMAR=80
 /[NO]ROLL               /ROLL
 /[NO]SAVE[=n]           /NOSAVE (/SAVE=0)
 /[NO]SCROLL             /NOSCROLL
 /[NO]SHOW               /NOSHOW
 /[NO]SLIDE[=n]          /SLIDE=8
 /[NO]TABS[=n]           /TABS=8
 /[NO]TSET=n
 /[NO]UPPER              /NOUPPER
 /WIDTH=n                /WIDTH=80
 /[NO]WRITE              /WRITE  (/NOREAD)
 /X[=name]=txt
 /TERM=type


/AGAIN

   /AGAIN
   /AGAIN=n

 /AGAIN may be given in a <SET-FILE>  command.   If  you  are  editing
 FILE.FOO,  typing  <ENTER>/AG<SET-FILE>  acts  the  same  as  if  the
 parameter were "FILE.FOO".  This qualifier is useful when you want to
 make  the current and alternate file be the same file -- allowing you
 to toggle back and forth between two places in the same file.  Do not
 use explicit filespecs with /AGAIN.

 /AGAIN=n acts the same as /AGAIN/GOTO=n -- the numeric argument is  a
 percentage of the way into the file.


/ALT

   /ALT
   /ALT=n

 /ALT may be given on the DCL level SED command.  It swaps the current
 and alternate files you were editing last time.

 /ALT=n acts the same as /ALT/GOTO=n  -  the  numeric  argument  is  a
 percentage of the way into the file.


/APPND

   /APPND
   /NOAPPND  (D)

 Controls whether <PICK> appends to the PICK buffer, or overwrites it.

 /APPND causes <PICK>s to append to the PICK buffer until /NOAPPND  or
 another /APPND is typed.

 /NOAPPND causes <PICK>s to overwrite the PICK buffer.   This  is  the
 default.


/BACKUP

   /BACKUP    (D)
   /NOBACKUP

 Controls whether SED overwrites or creates a new version of the  file
 you are editing.

 /BACKUP causes SED to create a new version of your file each time  it
 is edited.  This is the default.

 /NOBACKUP causes SED to overwrite the file each time  it  is  edited.
 This saves disk space, but you lose the original version of the file.


/BEEP

   /BEEP
   /NOBEEP  (D)

 Controls whether your terminal beeps or displays a message  when  SED
 is in INSERT mode.

 /BEEP causes the terminal to beep once when entering INSERT mode  and
 twice when entering REPLACE mode.

 /NOBEEP causes an "INSERT MODE" message to appear on the bottom  line
 of  the terminal when SED is in INSERT mode.  No message is displayed
 when SED is in REPLACE mode.  This is the default.


/CASE

   /CASE
   /NOCASE  (D)

 Controls whether searches are case-dependent.

 /CASE makes searches case-dependent, i.e., the key "THE" is different
 from the key "the".

 /NOCASE makes searches independent of case, i.e., the key "THE"  will
 match  the first occurrence of "THE", "the", "tHe", etc.  This is the
 default.


/COMMENT

   /COMMENT=c1
   /COMMENT=c1,c2
   /NOCOMMENT       (D)

 /COMMENT defines the characters to be used on comment lines  inserted
 by  SED.   The  only comment lines inserted by SED are the "This file
 is..."  message  (if  the  message  has  not  been  turned  off  with
 /NOMESSAGE)  and  the edit-history lines that are inserted if the /ID
 switch has been set.  C1 defines the string to  be  inserted  at  the
 beginning  of the comment, and C2, if specified, specifies the string
 to be appended to the end  of  the  comment.   If  /NOCOMMENT  is  in
 effect,  SED  will  insert  default characters determined by the file
 type.


/CREATE

   /CREATE
   /NOCREATE  (D)

 Controls whether an equal sign (=) is needed after the name of a file
 you want to create.

 /CREATE frees you from having to type an equal  sign  (=)  after  the
 name  of the file you want to create with SED.  (SED will first still
 try to find the file you specified,  including  trying  default  file
 extensions, before it gives up and creates the new file.)

 /NOCREATE causes SED to create a new file only if the  file  name  is
 followed with an equal sign (=).  This is the default.


/DELIM

   /DELIM=ABC
   /NODELIM     (D)

 Sets or clears a string of extra delimiters to use when in  word-wise
 tab mode.  ABC represent additional delimiters to be used in addition
 to the standard delimiters (tab and space).  SED  will  position  the
 cursor  on  the  position  following any of the specified delimiters.
 Use /NODELIM to clear the set of delimiters.


/DTABS

   /DTABS
   /NODTABS  (D)

 Controls whether TABS in a file are highlighted.

 /DTABS causes tabs to identify themselves.  Each tab  displays  as  a
 highlighted  "I"  followed  by  one  fewer  space  than usual (so the
 columns on the screen are still aligned properly).

 /NODTABS inhibits any special indication of TABs in your file.   This
 is the default.


/GOTO

   /GOTO=n /GOTO=n may be used when running SED or doing a <SET-FILE>.
 The  file  will  be  displayed starting n percent of the way into the
 file.  If your specify /GOTO without an argument, SED  will  use  the
 current percent value (default is n=0).


/HELP

   /HELP    (D)
   /NOHELP

 Controls what key(s) you type to get help about SED commands.

 /HELP enables on-line help when <ENTER><ENTER> is typed, as  well  as
 <HELP>.  This is the default.

 /NOHELP inhibits on-line help when <ENTER><ENTER> is typed.  The only
 way to get help is with <HELP>.


/ICR

   /ICR
   /NOICR  (D)

 Controls what happens when you press <RETURN> in INSERT mode.

 /ICR causes a <RETURN> typed in INSERT  mode  to  insert  a  carriage
 return, linefeed into your text.  If you are in the middle of a line,
 the line is broken into two lines.

 /NOICR causes a <RETURN> typed in INSERT mode just  to  position  the
 cursor  to  the  beginning  of  the  next line.  This is the same way
 <RETURN> works in REPLACE mode.  This is the default.


/ID

   /ID
   /NOID  (D)

 Controls whether an identifying line is added to the beginning  of  a
 file each time it is edited.

 /ID causes an identifying line to be inserted at the beginning  of  a
 file  when it is saved.  The line contains the filespec, the date and
 time, and the name of the user who edited the file.

 /NOID prevents an identifying line from being inserted in  the  file.
 This is the default.


/IMODE

   /IMODE
   /NOIMODE  (D)

 Controls whether SED is in replace or insert  mode.   This  qualifier
 performs the same function as the <INSERT-MODE> command.

 /IMODE puts SED in insert mode.  This qualifier can also be  used  in
 execute buffers ($IM^SW).

 /NOIMODE puts SED in replace mode.  This is the default.


/INVRT

   /INVRT    (D)
   /NOINVRT

 Controls the action of the <CASE> command.

 /INVRT causes <CASE> to invert the case of  a  letter.   "S"  becomes
 "s", "p" becomes "P", etc.  This is the default.

 /NOINVRT causes <CASE> to use the setting of  the  /RAISE  qualifier.
 See /RAISE.


/ISAVE

   /ISAVE=n
   /NOISAVE  or  /ISAVE=0  (D)

 Causes an incremental save of your file every n commands.  Default is
 n=0 (i.e., no incremental saves).

 /ISAVE and /SAVE can be used together.  When the counter  for  either
 one  reaches  its  limit,  the  file  is saved, and both counters are
 reset.


/ITABS

   /ITABS    (D)
   /NOITABS

 Controls whether SED can use tab characters to extend a line.

 /NOITABS - If you type something beyond the end of a  line  SED  will
 insert only spaces so the character is properly positioned.

 /ITABS - If you type something beyond the end of a line, SED will use
 tabs  where  possible  instead of spaces so the character is properly
 positioned.  This is the default.


/JOURN

   /JOURN
   /NOJOURN  (D)

 Controls whether SED makes a journal of your editing session.

 /JOURN starts a journal into which SED logs all the commands and text
 typed  during  an editing session.  The journal file (SEDJRN.TMP) can
 be used to recover your work after a system crash.  See /RECOV.

 /NOJOURN stops journaling, if it was in effect.  This is the default.


/KEYPAD

   /KEYPAD    (D)
   /NOKEYPAD

 This qualifier applies only to VT100 and VT52 terminals.

 /KEYPAD tells SED to put your terminal's keypad in  alternate  keypad
 mode.   This  is  the  default on VT100 terminals.  The keypad to the
 right of the keyboard is then used as a set of function keys,  rather
 than a numeric keypad.

 /NOKEYPAD takes your terminal's keypad out of alternate keypad  mode.
 The keys can then be used as a numeric keypad.


/LENG

   /LENG=n  (D=24, usually)

 Causes SED to think your terminal is n lines long.  Good for limiting
 the  amount  of  information written on a slow terminal.  The default
 for n is the number of lines displayable on  your  terminal,  usually
 24.


/LMAR

   LMAR=n  (D=1)

 /LMAR=n - Sets the left margin to be column n.  Default is 1.


/MESSAGE

   /MESSAGE    (D)
   /NOMESSAGE

 /MESSAGE causes an identifying ";  This  is  file  ..."  line  to  be
 inserted automatically as the first line of a new file.

 /NOMESSAGE suppresses the identifying line (and the cheery "Hi!  This
 is SED..." message normally displayed when there is no file to edit).


/OUT

   /OUT=filespec

 Changes the name of the file being edited (or being set  to,  if  the
 qualifier  is  given  in a <SET-FILE> or DCL level SED command) to be
 FILESPEC.


/PAGE

   /PAGE
   /NOPAGE  (D)

 Controls how the <SWITCH> command displays the current line number.

 /PAGE causes <SWITCH> to output your position as PAGE-LINE  from  the
 start of file.  Pages are delimited by formfeeds (^L).

 /NOPAGE causes <SWITCH> to output your position as the  total  number
 of LINES from the start of file.  This is the default.


/PROG

   /PROG=filespec

 The /PROG qualifier establishes a program, DCL  command,  or  Command
 Procedure to be executed upon exiting from SED.  The qualifier may be
 included as part of the SED command at command level  or  it  may  be
 placed  in  the  SED.INI  file.   The  program to execute can also be
 established while in SED using the  <ENTER>program<SWITCH>  sequence.
 If  the sequence <ENTER><EXIT> is used, the default program to run is
 SYS$BYU:COMPIL.  For more information on COMPIL, type the DCL command
 "HELP COMPIL".

 Some examples of this qualifier appear below:

      /PROG=RUNOFF will cause RUNOFF to be run upon exiting from SED.

      /PROG=$command will  cause  the  DCL  command  "command"  to  be
 executed  upon  exiting.   "Command"  must  not  include any imbedded
 blanks or any trailing  qualifiers.   For  example,  /PROG=$DIRECTORY
 will cause SED to execute the DCL DIRECTORY command upon exiting.

      /PROG=@command_procedure will cause the  DCL  command  procedure
 "command_procedure"  to  be  executed  upon  exiting.   For  example,
 /PROG=@SYS$COM:TMOUNT.COM will cause the TMOUNT command procedure  in
 the system command procedure library to be executed.


/QUICK

   /QUICK
   /NOQUICK  (D)

 Controls the initial display of a file on the screen.

 /QUICK suppresses the initial display of a file  on  your  terminal's
 screen  after  a DCL level SED command or a <SET-FILE> command.  This
 is useful on a slow terminal when you are not interested in  what  is
 on the first page of the file.

 /NOQUICK allows SED to display the first page of the file.   This  is
 the default.


/RAISE

   /RAISE    (D)
   /NORAISE

 Controls how the <CASE> commands works, if /NOINVRT is set.

 /RAISE tells <CASE> to change lower case letters to upper case.

 /NORAISE tells <CASE> to change upper case letters to lower case.


/RCUR

 /RCUR may be used with <SET-FILE>.  It causes the current  filespecs,
 rather  than  the  alternate specs, to be replaced by the given ones.
 Useful for "keeping your finger" in one file  (the  alternate)  while
 looking at several others.


/READ

 /READ makes the file read-only.  /READ is the opposite of /WRITE.


/RECOV

   /RECOV
   /NORECOV  (D)

 Controls whether SED starts a normal editing session, or reconstructs
 a  file  using  the  journal  from  an  inadvertently (as in a system
 crash!) aborted SED session.

 Typing SED/RECOV at DCL  command  level  tells  SED  to  recover  the
 previous editing session using the journal.  See /JOURN.


/RESET

   /RESET    (D)
   /NORESET

 Controls whether the starting nominals for parameters are reset after
 each command.

 /RESET causes the starting nominal parameters to be reset after  each
 command.   Thus,  <ENTER>5<INSERT-LINE><INSERT-LINE>  will  insert  6
 lines.  This is the default.

 /NORESET - do  not  reset  starting  nominal  parameters  after  each
 command.   Thus,  <ENTER>5<INSERT-LINE><INSERT-LINE>  will  insert 10
 lines.


/RMAR

   /RMAR=n  (D=80, usually)

 /RMAR=n - Sets the right margin to be column n.  Default is the width
 of the screen (usually 80).


/ROLL

   /ROLL    (D)
   /NOROLL

 Controls what happens when you type <RETURN> on the last line of  the
 screen.

 /ROLL causes the text on the screen to roll one line if the cursor is
 at the bottom of the screen and you type <RETURN>.

 /NOROLL causes the cursor to move to the top of  the  screen  if  the
 cursor  is  at  the  bottom of the screen and you type <RETURN>.  The
 text on the screen does not roll.


/SAVE

   /SAVE=n
   /NOSAVE  or  /SAVE=0  (D)

 Causes an incremental save of your file every n characters of typein.
 Default is n=0 (i.e., no incremental saves).

 /ISAVE and /SAVE can be used together.  When the counter  for  either
 one  reaches  its  limit,  the  file  is saved, and both counters are
 reset.


/SCROLL

   /SCROLL
   /NOSCROLL  (D)

 Controls what happens when you type <CURSOR-DOWN> on the last line of
 the screen or <CURSOR-UP> on the first line of the screen.

 /SCROLL causes the text on the screen  to  scroll  one  line  if  the
 cursor  is  at  the  bottom  (or  top)  of  the  screen  and you type
 <CURSOR-DOWN> (or <CURSOR-UP>).

 /NOSCROLL causes the cursor to wrap around on the screen  instead  of
 scrolling any text.  For example, a <CURSOR-DOWN> on the last line of
 the screen moves  the  cursor  to  the  first  line  of  the  screen.
 Likewise,  a  <CURSOR-UP>  on  the first line of the screen moves the
 cursor to the last line of the screen.  This is the default.


/SHOW

   /SHOW
   /NOSHOW  (D)

 Controls the display on your screen while <EXECUTE> is working.

 /SHOW causes the effects of an  <EXECUTE>  command  to  be  displayed
 while it is working.

 /NOSHOW updates the screen only when the <EXECUTE> is done.  This  is
 the default.


/SLIDE

   /SLIDE=n  (D=8)
   /NOSLIDE

 Controls the <SLIDE-LEFT> and <SLIDE-RIGHT> commands.

 /SLIDE=n enables the <SLIDE-LEFT> and <SLIDE-RIGHT> commands.  If the
 optional  value n is specified, is sets the default number of columns
 to slide (or to /RESET to).  The starting default for n is 8.

 /NOSLIDE  disables  the  <SLIDE-LEFT>  and  <SLIDE-RIGHT>   commands.
 /SLIDE=0 is equivalent to /NOSLIDE.


/TABS

   /TABS
   /TABS=n  (D=8)
   /TABS=W or /NOTABS
   /TABS=S

 Controls the way <TAB> and <BACKTAB> move.

 /TABS makes <TAB> and <BACKTAB> use the usual tab positions.

 /NOTABS or /TABS=W sets up word-wise TABS.

 /TABS=n sets up tab stops every n positions  (clears  all  previously
 set  tabs  first).  The default is /TABS=8.  For additional tailoring
 of tab stops, use /TSET.

 /TABS=S restores all previously  set  tabs  (including  /TSET  ones).
 (This option is useful after /TABS=W.)


/TERM

   /TERM=type

 /TERM=type allows the user to specify the type of terminal he/she  is
 using.   The qualifier may be specified as part of the SED command at
 DCL command level or it may be included in the SED.INI file.

 If SED cannot determine your terminal type, and /TERM is not  present
 on  the  command  line or in the initialization file, the editor will
 check for the logical name SED_TERMINAL which should  be  equated  to
 your  terminal  type  using  the  abbreviations for various terminals
 listed below.  This logical can also be equated to your terminal type
 in the LOGIN.COM file.

 If after checking for the above settings, SED still cannot  determine
 your  terminal  type,  it  will use the default system log-in setting
 which can be seen by using the DCL command "SHOW TERMINAL."

 The "type" on  the  /TERM  qualifier  can  be  VT100,  VT52,  or  FT1
 (Televideo  910), INF200 (Infoton 200), RAM6211 (Ramtek 6211 graphics
 terminal), Visual 200 configured in VT52+ mode (VIS200).


/TSET

   /TSET=n
   /NOTSET=n

 Sets or clears a tab stop.

 /TSET=n sets a tab stop at column n on the screen.

 /NOTSET=n can be used to clear the tab (if any)  at  column  n  on  the
 screen.


/UPPER

   /UPPER
   /NOUPPER  (D)

 Controls whether lower case typein is converted to upper case.

 /UPPER causes all alphabetic characters to be converted to upper  case.
 This  is  useful  on a terminal whose shift lock shifts all characters,
 like the VT100.

 /NOUPPER leaves characters in whatever case you type them.  This is the
 default.


/WIDTH

   /WIDTH=n  (D=80, usually)

 /WIDTH=n causes SED to think the terminal is n characters  wide.   Good
 for  terminals  which  can  change  their widths, like the VT100.  (The
 VT100 has both 80 and 132 column display modes.)

 The default is the current width of your screen (as shown  by  the  DCL
 command "SHOW TERM/WIDTH"), which is usually 80.


/WRITE

   /WRITE  (D)
   /NOWRITE (same as /READ)

 Controls whether you can change  the  contents  of  the  file  you  are
 looking at.

 /WRITE allows the current file to be altered.  This is the default.

 /NOWRITE (which is the same as /READ) makes commands which  change  the
 file become illegal, so the file cannot be modified accidentally.


/X

   /X=NAME=txt

 /X=NAME=txt is used in SED.INI to set up an execute buffer  named  NAME
 with contents txt.
