
EXECUTE Command

Function

     The EXECUTE command  compiles  the  specified  source  files,  if
     necessary,  loads  the  generated REL files into core, and begins
     execution of the  program.   The  system  determines  the  proper
     language  compiler to use from the source file extensions or from
     switches you specify in the command  string.   (See  the  COMPILE
     command help file, COMPIL.)  If a .REL file already exists with a
     newer date than that of the source  file,  the  system  does  not
     compile  the  file  unless  you  request  this  explicitly with a
     switch.

     This command is equal to issuing the LOAD and START commands.

     Each time you issue a COMPILE, LOAD, EXECUTE, or  DEBUG  command,
     the  system  remembers  the  command  with  its  arguments  in  a
     temporary file on disk or in core.  Therefore, when you issue one
     of  these  commands  without specifying any arguments, the system
     uses the arguments that it saved in the temporary file.  For more
     information, see the help file on COMPILE-class commands, COMCMD.

     The EXECUTE command accepts several command constructions:  the @
     construction  (indirect  commands),  the  +  construction,  the =
     construction, and the < > construction.   For  more  information,
     see the COMPILE-class commands help file, COMCMD.

     This command  runs  the  COMPIL  program,  which  interprets  the
     command  before  running  the  appropriate  language compiler for
     LINK.

Format

     EXECUTE file-spec

     Where:    file-spec is a single file specification or a string of
               file   specifications  separated  by  commas.   A  file
               specification consists of a device name,  a  file  name
               with  or  without  an  extension, and a directory name.
               For more information see the file  specifications  help
               file, FISPEC.

     You can use the following switches to modify the command  string.
     These  switches  can  be  temporary  or permanent switches unless
     otherwise stated.  For more inrofmation see the switch help file,
     SWITCH.

       Switch                         Function

     /ALGOL         Compiles the file with ALGOL.  Assumed  for  files
                    with the extension of .ALG.

     /BINARY        Generates a binary file for  each  file  compiled.
                    The  file  name  for  the  binary file follows the
                    standard conventions for determining the  name  of
                    the  output  file.   (See the COMPILE command help
                    file, CCMND.) The file  name  extension  is  .REL.
                    This is the default action.

     /BLISS         Compiles the  file  with  BLISS-10.   Assumed  for
                    files  with  the  extension of .B10 or .BLI.  This
                    switch is not supported.

     /C68           Runs the appropriate COBOL compiler.
     /C74

     /COBOL         Compiles the file with COBOL.  Assumed  for  files
                    with the extension of .CBL.

     /COMPILE       Forces a compilation of this file even if a binary
                    file  exists  with  a newer date and time than the
                    source file.  You can use this switch to obtain an
                    extra   compilation  (for  example,  to  obtain  a
                    listing)  because  the  system  does  not  perform
                    compilation  if  the binary file is newer than the
                    source file.

     /CREF          Produces a cross-referenced listing  file  on  the
                    disk  for each file compiled, for later processing
                    by the CREF program.  The file  extension  of  the
                    output  file is .CRF.  You can then list the files
                    using  the  CREF  command.   However,  with  COBOL
                    files,  the  system  appends  the cross-referenced
                    listing to the listing file.

     /DDT           Loads the program debugger DDT with the program.

     /DEBUG:(arg, arg,...)
                    Passes the arguments to  FORTRAN.   Refer  to  the
                    TOPS-10/TOPS-20 FORTRAN Language Manual.

     /DLIST         Produces a .LST file in your directory area.   You
                    can  output  the file to the line printer with the
                    PRINT command.

     /F40           Obsolete
     /F10

     /F66           Applies FORTRAN-66 rules for DO loops and EXTERNAL
                    statements.

     /FOROTS        Obsolete
     /FORSE

     /FORTRAN       Compiles  the  file  with  a   FORTRAN   compiler.
                    Assumed  for  files  with the extension of .F4 and
                    .FOR and all files with  nonrecognizable  compiler
                    extensions  if  FORTRAN  is the standard compiler.
                    You need to specify this switch if the file has  a
                    nonrecognizable  compiler extension and FORTRAN is
                    not the standard compiler or is  not  the  current
                    default.   (For  example,  EXE/ALGOL  FIL1,  FIL2,
                    FIL3/FORTRAN).

     /FUDGE:        Creates a temporary file that contains   the names
      file-spec     of the .REL files produced by the  command  string
                    plus  the  library  file name.  When you issue the
                    FUDGE command, PIP reads this  temporary  file  to
                    generate a library .REL file.  (Refer to the FUDGE
                    command description.) The argument to this  switch
                    is:

                    dev:file.ext[proj,prog]

                    Where:  dev:  is the device on which to write  the
                            file.   If you omit the device, the system
                            assumes DSK.

                            file.ext is the name of the library  file.
                            The  file  name  is required.  If you omit
                            the extension, the system assumes .REL.

                            [proj,prog] is the directory in  which  to
                            place the file.  Your directory is assumed
                            if you do not specify a directory.

                    This switch is permanent  in  the  sense  that  it
                    pertains  to  all  .REL  files  generated  by  the
                    command string.

     /GFLOAT        Indicates that double-precision numbers are to  be
                    stored  in  G-floating format.  This format has an
                    extended exponent range.  This option is available
                    on KL-10 proessors only.

     /K?10          Designates the processor where  the  program  will
                    execute once it has been loaded.  The variable (?)
                    can be L or S.  These switches are  necessary  for
                    FORTRAN-10 programs because the compiler generates
                    different code for the processors.  The default is
                    the   processor  on  the  computer  executing  the
                    command.

     /LIBRARY       Loads the files in library search mode.  This mode
                    causes a program file in a special library file to
                    be loaded only if one  or  more  of  its  declared
                    entry   symbols   satisfies  an  undefined  global
                    request in the source file.  The system  libraries
                    are   always  searched.   (See  the  TOPS-10  LINK
                    Reference Manual.)

     /LINK          Obsolete

     /LIST          Generates a listing file for each  file  compiled.
                    The  extension  of  the  output file is .LST.  The
                    system automatically spools it when you  log  out.
                    The complement of this switch is /NOLIST.

     /LMAP          Produces a loader map during the  loading  process
                    containing the local symbols.

     /LOADER        Obsolete

     /MACRO         Assembles the file with MACRO.  Assumed for  files
                    with extensions of .MAC.

     /MACY11        Assembles the file with MACY11.  Assumed for files
                    with  extensions  of  .P11.   This  switch  is not
                    supported.

     /MANTIS        Compiles   the   file   with   MANTIS    debugging
                    information.  This switch affects Fortran-40 files
                    only.  This switch is not supported.

     /MAP           Produces loader maps during the  loading  process.
                    When  this  switch is encountered, a loader map is
                    requested from  the  loader.   After  the  library
                    search of the system libraries, the map is written
                    in your  disk  area  with  either  the  file  name
                    specified  by  you (for example, /MAP:file) or the
                    default file name nnnLNK.MAP.  This switch  is  an
                    exception  to the permanent switch rule in that it
                    causes only one map to be produced even though  it
                    appears as a permanent switch.

     /NEW           Runs the appropriate language  compiler  from  the
                    experimental  system  library  (device  NEW:) area
                    [1,5].  If the compiler does not exist  on  device
                    NEW:,  COMPIL tries to obtain it from device SYS:.
                    (Refer to the Restriction.)

     /NOBINARY      Does not generate binary files.  Unless you  issue
                    this  switch,  the  system generates binary files.
                    This switch, when combined with the /CREF or /LIST
                    switch, is useful when you compile programs solely
                    for the purpose of generating listings.

     /NOCOMPILE     Does not force a  compilation  on  a  source  file
                    whose  date  is  not  as recent as the date on the
                    binary file.  This switch is not the same  as  the
                    /REL  switch,  which  turns  off all compilations,
                    even if the source file is  newer  than  the  .REL
                    file.    Complement   to   the   /COMPILE  switch.
                    /NOCOMPILE is the default action.

     /NODEBUG       Does not pass previously  specified  arguments  to
                    FORTRAN.

     /NOLIST        Does not generate  listing  files.   This  is  the
                    default action.

     /NOMANTIS      Compiles  the  file   without   MANTIS   debugging
                    information.    This   switch  affects  Fortran-40
                    programs only.  This switch is not supported.

     /NOOPTIMIZE    Does not  optimize  the  object  code  of  FORTRAN
                    programs.

     /NOSEARCH      Loads  all  routines  of  the  file  whether   the
                    routines  are  referenced or not.  Because this is
                    the default action, this switch is  used  to  turn
                    off library search mode (/LIBRARY).

     /OLD           Runs the appropriate language  compiler  from  the
                    system library of old programs (device OLD:) which
                    resides on the disk area [1,3].  If  the  compiler
                    does  not  exist  on  device OLD:, COMPIL tries to
                    obtain  it  from  device  SYS:.   (Refer  to   the
                    Restriction.)

     /OPTIMIZE      Optimizes  the  object  code  of  FORTRAN   source
                    programs.

     /PAL10         Assembles the file with PAL10.  Assumed for  files
                    with the .PAL extension.

     /PASCAL        Compiles the file with Pascal.  Assumed for  files
                    with the .PAS extension.

     /REL           Uses the existing .REL files although newer source
                    files might be present.

     /SAVE          Saves the core image of the loaded program.

     /SEARCH        Loads the  files  in  library  search  mode.   The
                    action  is  identical  to  that  of  the  /LIBRARY
                    switch.

     /SELF          Runs the appropriate language compiler from device
                    DSK:   instead  of from the system library (device
                    SYS:).  This  switch  is  useful  if  you  keep  a
                    private  copy of a compiler in your own disk area.
                    (Refer to the Restriction.)

     /SNOBOL        Compiles the file with SNOBOL.  Assumed for  files
                    with  an  extension  of  .SNO.  This switch is not
                    supported.

     /SSAVE         Saves the core image of the loaded  program  in  a
                    sharable executable file.

     /SYS           Runs the appropriate language  compiler  from  the
                    system  library (device SYS:) area [1,4].  This is
                    the default action.

Restriction

     You cannot specify compilers from  different  structures  in  the
     same command string.  For example, the following is invalid:

     .EXECUTE PARTA.FOR/NEW,PARTB.FOR/OLD

     However, the following is valid:

     .COMPILE PARTA.FOR/NEW<RET>
     .COMPILE PARTB.FOR/OLD<RET>
     .EXECUTE/REL PARTA,PARTB

Characteristics

     Requires LOGIN.

     Places your terminal at user level.

     Runs the  appropriate  compiler  or  assembler  and  linking
     loader, destroying your original core image.

     Starts the execution of the compiled and loaded program.

Example

     Type out a test program.

     .TYPE PROG.FOR<RET>

         TYPE 10
      10 FORMAT (' TESTING EXECUTION')
         END

     Execute the program.

     .EXECUTE PROG.FOR<RET>
     FORTRAN:  PROG
     MAIN
     LINK:  LOADING
     [LNKXCT PROG EXECUTION]

     TESTING EXECUTION

     END OF EXECUTION
     CPU TIME:  0.02 ELAPSED TIME:  0.05
     EXIT
     .

     Message shows the time parameters of your job.
