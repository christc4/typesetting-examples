       		IND - a fancy command file program
		==================================

	IND is a program that reads command files, much like the .CMD files
used by the TAKE command. A command file contains a set of commands that you
execute frequently and are sick of typing. Alternatively, it can contain
commands to do something for someone who is not used to using the computer. The
main advantage of IND files is that they can contain commands to programs, as
well as to TOPS20, and they can have loops, and execute certain commands only
under certain conditions. For instance, this command file will help a user
use the FILCOM program to compare two files. It asks them which files they want
compared, and then asks if they want the output printed.

.ASKF FILE1 Name of original file:
.ASKF FILE2 Name of new version of file:
filcom
filcom.out='file1','file2'
^C
.ASK OUTPUT Do you want the differences printed ?
.IFF OUTPUT .GOTO end
.ASK KEEP Do you want the output file kept ?
.IFF KEEP .IFT OUTPUT print filcom.out/delete
.IFT KEEP .IFT OUTPUT print filcom.out
.end:
;
;	Thankyou
;


		This file saves the user having to run the FILCOM program,
and means that their output usually gets deleted unless they specifically ask
to keep it. They will see something on their terminal like:
* Name of original file: FRED.DAT		<= User types filename
* Name of new version of file: FRED.NEW	 <= user types this too
FILCOM
*filcom.out=fred.dat,fred.new		<= System types all this for you
 %Files are different
*^C
* Do you want the differences printed ? Y	<= User says yes
* Do you want the output file kept ?		<= User just types return
@print filcom.out/delete			<=System types this
@

		The command file only asks you to keep the output if you say
you want it printed. It assumes that if you type return, you mean no.

		This just shows the beginning of what you can do with IND.
You can read numbers, strings etc. You can break up sequences of characters
into smaller sequences. Your command file can check the amount of disk space
available before it runs, and much more. See HLP:IND.DOC for a full description.

