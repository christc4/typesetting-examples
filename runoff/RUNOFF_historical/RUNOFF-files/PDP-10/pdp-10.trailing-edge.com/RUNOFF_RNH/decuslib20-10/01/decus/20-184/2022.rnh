.NUMBER
.FILL
.JUSTIFY
.TAB STOPS 9,17,25,33,41,49,57,65,73
.!.TAB STOPS 8,16,24,32,40,48,56,64,72,80
.LEFT MARGIN 1
.PAPER SIZE 58,80
.NO PAGING

2022 is a TOPS-20 command parser for System 1022. Nearly all 1022 command can
be used in 2022. The only commands not implemented are those specific to
TOPS-10 or those used exclusively within PL1022 or report programs. 2022 was
designed to be as identical to 1022 as possible however some differences do
exist. They are:
.ls
.le;1022	_<optional__1022__command>
.b;Use this command to bypass the 2022 command parser and execute any 1022
command.
This may be necessary if you want to execute a 1022 command not implemented
in 2022 (eg: use the @= construct in the middle of a command).
If you simply type "2022>1022#_<return>" then you will enter the 1022
command level - at this level all command parsing is done by 1022. To return
to the 2022 command level use the 1022 "HOST" command.

.le;2022	_<optional__2022__command>
.b;Use this command to enter the 2022 sub-command level. This level contains
a number of commands which control various features of the 2022
 program. "QUIT" will exit this sub-command level.

.ls.dle'('ll')'

.le; TAKE (commands from) _<file>
.br;The file may contain 1022 commands as well as those commands specific to
2022.

.le;SET {NO} ECHO (when taking command files)
.br;Controls the ECHOing of command during a TAKE or when processing commands
from the rescan buffer. The rescan buffer is automatically set up by the EXEC
when you run the 2022 program. For example, if you enter:
.b
.i5;@2022 OPEN FOO.DMS,FIND ALL,TYPE ALL
.b
The entire command line is placed in the rescan buffer by the EXEC program.
2022 will process everything on this line after the "@2022".
The default when 2022 starts up is NO ECHO.

.le;SET {NO} DISPLAY (of commands sent to 1022)
.br;Setting DISPLAY causes 2022 to display the actual command passed to 1022.
The command sent usually is an expanded form of what you typed in. For example
if you entered "2022>INF#B" the command passed would be "INFORM BASE". The
DISPLAY command is normally only used for debugging purposes.
The default when 2022 starts up is NO DISPLAY.

.le;INFORMATION (about program)
.br;Gives information about the status of various switches and features of 2022.

.le;QUIT (current command level)
.br;Ends the "2022>>" sub-command level and returns you to "2022>".

.le;EXIT (and return to monitor)
.br;Ends 2022 and returns you to the EXEC ("@" prompt)

.le;HELP
.br;Types the file HLP:2022.HLP to give help on 2022.

.els

.le;Unlike 1022, 2022 processes commands in the rescan buffer prior to
accepting input from the terminal. For example:
.b
.i10;@2022##OPEN XXXX.DMS,INF STRUCTURE
.i10;@2022##OPEN TTT,FIND ALL,TYPE ALL
.b
Notice that each complete command, except the last, must be separated by a
comma (","). Once all the commands in the rescan buffer are processed 2022
will exit. If an error is found while parsing the commands then processing
of the rescan buffer is aborted.

.le;Since "?", "_<escape>", and _^F are action characters in TOPS-20 they can
only be included in data to be sent to 1022 if you prefix them with a _^V.
Control-V is the standard "accept-next-character-as-is" prefix in TOPS-20.

.le;1022 allows you to enter many commands on a single line so long as each
command is terminated with a period ("."). 2022 does NOT allow this
functionality for most commands.

.le;A "!" in 1022 causes it to ignore text until the end-of-line. 2022, because
it uses TOPS-20's COMND% jsys treats a "!" differently. A "!" will cause 2022
to ignore text until the next "!" or the end-of-line - whichever comes first.
Therefore in 2022 you may want to use use a ";" in place of 1022's "!". If you
want to include a ";" as input for a 1022 command you must prefix it with _^V
otherwise all text from the ";" to end of line will be ignored.

.le;The 1022 "@_<file>" and "@=_<variable-name> constructs take on their
1022 meaning only if
"@" is the FIRST character of a command line. If the "@" is used any other
place then it is interpreted as the standard TOPS-20 "@_<file>" construct.
You must use the "2022>1022" command if you want to use 1022's "@" construct
somewhere else in the line.

.le;The 1022 "SET PROMPT" command does NOT change the
 "2022>" command prompt. There is currently no way to ask 1022 for this
information.

.le;Where a keyword is unambiguous
you don't have to worry about expanding it to the
minimum abbreviation that 1022 will accept since 2022 will do that for you.
For example, if you enter "I B" 2022 will be passed to DBEXEC as "INFORM BASE".
However the minimum abbreviation 1022 will accept is "I BAS" even though
"BASE" is the only INFORM keyword starting with a "B".

.le;When there is only one keyword possible for a command hitting the escape
will get that keyword. For example, in the "IGNORE DAMAGE" command DAMAGE
is the only keyword possible so typing "IGN_<escape>_<escape>" is all that
is needed to complete the command.

.le;The 2022 EDIT, USE and @ commands will all save the file specifications of the
last file used - just like the EXEC's EDIT command does.
 This speeds up the EDIT, USE, EDIT, USE cycle in developing a new DMC.
To re-use the previous file just follow EDIT, USE or @ with the
_<return-key>. If you want to see what the saved file specs are then follow the
command with two _<escapes>.

.els
