.lm0.rm75.para0,2,4.f.j
.title
BLISS-10 HELP FILE V7E(227)
.para.lm9.f.j
BLISS-10 does not use the standard -10 command scanner.  However, command string interpretation
is similar to that of other -10 CUSPS.
.para.nf.nj
_.R BLIS10
.br
*RELFIL,LSTFIL=SCR1,SCR2,...
.PARA.LM9.I-4.f.j
1.##Each file descriptor [RELFIL,LSTFIL,SRC] has the form:
.bl1.nf.nj
DEVICE:FILENAME.EXT[PROJECT,PROGRAMMER]
.para.i-4.f.j
2.##RELFIL receives the machine code generated by the compiler.  If no code is desired, leave this
position empty in the command string.  If FILESPEC= appears, FILESPEC is assumed to be the RELFIL spec
and no listing output is generated.
.para.i-4
3.##LSTFIL receives the program listing produced by the compiler.  If no listing is desired, leave this
position empty in the command string.
.para.i-4
4.##SRC1,SRC2,... are the BLISS-10 source files which when concatenated together form
one or more BLISS-10 modules.
.para.i-4
5.##If "DEVICE" is omitted "DSK" is assumed.
.para.i-4
6.##If "EXT" is omitted, ".REL" is used for the RELFIL, ".LST" is used for the LSTFIL, and
".BLI," ".B10", and the null extension in that order are tried for the source file until either
a file is found or all three defaults have failed.
.para.i-4
7.##If [PROJECT,PROGRAMMER] is omitted for any file, the user project, programmer number is
supplied for that file.  If [PROJECT, PROGRAMMER] appears at the beginning of a file descriptor, it becomes
the default for all the following descriptors which do not have a specific [PROJECT, PROGRAMMER].
.para.i-4
8.##Switches:##(-) implies that#-(switch name) will result in the opposite of the
switch action.  * indicates that the switch is assumed on by default.
.para.lm23.ts23.i-9
^&NAME\&	^&ACTION\&
.bl1.i-9
*A(-)	Use English language diagnostics
.bl1.i-9
B	Put a start block in the REL file for this module
.bl1.i-9
C(-)	Generate a cross referenced listing.
.bl1.i-9
D(-)	Generate debug linkage
.bl1.i-9
E(-)	Expand all MACROs in the listing.
.bl1.i-9
F(-)	Set up stack frame register (FREG) on every routine
entry.
.bl1.i-9
G(-)	All routines are to be made GLOBAL ROUTINES.
.bl1.i-9
H	This entire module is to be loaded into the 
high segment.
.bl1.i-9
I(-)	Generate special inspection word immediately prior
to each routine or function body.
.bl1.i-9
K	Disable listing of the source text (same as -L).
.bl1.i-9
*L(-)	Enable listing of the source text.
.bl1.i-9
M(-)	Enable listing of the machine code generated.
.bl1.i-9
N(-)	Do not print error messages on the controlling TTY.
.bl1.i-9
*O(-)	Optimize subexpressions across all ";"s.
.bl1.i-9
P	Put PROLOG-EPILOG code in this module.
.bl1.i-9
Q	With /C makes compact XREF.
.bl1.i-9
R(-)	Do not save all declarable registers around an EXCHJ.
.bl1.i-9
S(-)	Output routine names as compiled and compilation
statistics to TTY.
.bl1.i-9
T(-)	Generate calls to a timing routine at the start
and end of each routine.
.bl1.i-9
U	Do not optimize across ";"s (same as -O).
.bl1.i-9
V	Entire module is to be loaded into the low segment.
.bl1.i-9
X	Perform a syntax only (no code generation) compilation.
.bl1.i-9.nf.nj
Z(-)	Use LCG default register assignments
(SREG=_#17,FREG=_#15,VREG=1,DREGS=7,RESERVE(0,_#16)).
.para.lm0.nf.nj
[end of BLIS10.HLP]
