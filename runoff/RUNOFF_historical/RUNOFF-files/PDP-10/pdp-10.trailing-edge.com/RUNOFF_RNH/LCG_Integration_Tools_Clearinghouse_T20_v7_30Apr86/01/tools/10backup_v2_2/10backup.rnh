.ps ,72;
.rm 72;
.lm 1;.npa;
.i -1;! 10BACKUP help file.
.i -1;! For 10BACKUP v2.2
.i -1;!
.i -1;! The source modules that make up the 10BACKUP program are:-
.i -1;!
.i -1;!	10BACKUP.BAS	the main line program.
.i -1;!	BIO.MAR		contains tape and file IO routines.
.i -1;!	BUR.MAR		is a set of macro utility routines.
.i -1;!	C36.MAR		contains 36 bit conversion routines.
.i -1;!	BMS.MSG		contains the error message definitions.
.i -1;!	10BACKUP.RNH	Runoff input to build the help library.
.i -1;1 HELP
.p;10BACKUP is an easy to use VAX program to read files from a magnetic
tape written by the DECsystem-10 BACKUP utility. It's main use is to aid
in transfering files from a DECsystem-10 to a VAX, or to read existing
DECsystem-10 BACKUP format tapes.
.p;Tapes written by the TOPS-20 DUMPER utility are very similar
so most of these should be able to be read by 10BACKUP as well.
.p;Because of the architectural differences between the two machines,
binary files from a DECsystem-10 (such as .EXE or .REL files) are normally
meaningless on a VAX. 10BACKUP is therefore intended mainly for
restoring normal ASCII text files (such as .FOR or .RNO files). A
facility for transferring binary information is available through the
SIXBIT command. 
.p;10BACKUP uses 'interchange' mode to read the tape. This is because
DECsystem-10 disk and UFD information does not apply on a VAX and has
to be ignored. 
.i -1;1 Using__10BACKUP
.p;Before using 10BACKUP the tape to be read must be mounted using the
/FOREIGN qualifier. Also you should set your default directory to where
you wish to put any restored files.
.p;At La#Trobe the 10BACKUP program resides in the SYSPUB (SYStem
PUBlic) area. When the program is RUN it prompts for commands using a
'/'. This is the same prompt as DECsystem-10 BACKUP uses although
10BACKUP has neither the same commands nor Run-Time commands like
DECsystem-10 BACKUP. 
.p;The commands used in 10BACKUP may be abbreviated as long as they are
not made ambiguous. 10BACKUP continues to prompt for commands until it
reaches the end of command input or an EXIT command. 
.p;The first command normally used in 10BACKUP is the TAPE command to
identify the input tape. After that the SSNAME command may be used to
select a particular tape save-set, and DIRECTORY and RESTORE commands
can be used to get directory information or to restore files from the
tape. 
.i -1;1 Commands
.p;The commands used in 10BACKUP may be entered in upper or lower case
and may be abbreviated as long as they are not made ambiguous. 10BACKUP
continues to prompt for commands using the '/' prompt until it reaches
the end of command input or an EXIT command. 
.i -1;2 HELP
.br;The HELP command provides help from the 10BACKUP help library. This
command uses the VMS help routines and is therefore similar to the DCL
HELP command in use.
.i +10;Format:  HELP [topic [,...] ]
.i -1;2 EXIT
.br;The EXIT command exits from the program.
.i +10;Format:  EXIT
.i -1;2 TAPE
.br;The TAPE command identifies the tape device for subsequent
commands. The tape device must contain a DECsystem-10 BACKUP format tape
and must be mounted with the /FOREIGN qualifier. A logical name may be
used to specify the device. This command must be given before any other
command which accesses the tape device. A file-name may be used in place
of the device name when the file contains a copy of a DECsystem-10
BACKUP tape. 
.i +10;Format:  TAPE device-name
.i +10;Example: /TAPE MTA0:
.i -1;2 SSNAME
.br;The SSNAME command may be used to select a specific save set on the
tape for processing. Subsequent RESTORE and DIRECTORY commands will only
process files from the selected save set. If no save set name is given
then all save sets on the tape will be processed (the default). To
preserve lower case characters or exact spacing in the save set name it
should be put in double quotes ("). 
.i +10;Format:  SSNAME  [save-set-name]
.i +10;Example: /SSNAME "COBOL File Save"
.i -1;2 RESTORE
.br;The RESTORE command restores files from the tape to the current
default directory. A file name list may be given to restore only
specific files. The '*' character may be used as a wildcard in the
file name list. Before this command is given a TAPE command must be used
to identify the tape to be read, and an SSNAME command may be used to
select a particular save set for processing. As each file is restored
appropriate directory information is printed. 
.i +10;Format:  RESTORE  [file-names]
.i +10;Example: /RESTORE SYS*.CBL,BACK.RNO
.i -1;2 DIRECTORY
.br;The DIRECTORY command prints file-name, size, and creation date
information about files on the tape. A file name list may be given to
print information only on specific files. The '*' character may be used
as a wildcard in the file name list. Before using this command a tape
must be selected with the TAPE command, and a specific save-set may be
selected using the SSNAME command. 
.i +10;Format:  DIRECTORY [file-names]
.i +10;Example: /DIRECT *.RNO
.i -1;2 REWIND
.br;The REWIND command repositions the tape to its beginning. This
allows the contents of the tape to be reprocessed. 
.i +10;Format:  REWIND
.i -1;2 OUTPUT__DEFAULT
.br;The OUTPUT__DEFAULT command sets the default output file name
specification for files generated by the RESTORE command. This is
useful for when you wish to restore files to an area other than the
current default.
.i +10;Format:  OUTPUT__DEFAULT [file-specification]
.i +10;Example: /OUTPUT__DEFAULT  DSK1B:[CCPN]
.i -1;2 SKIP
.br;The SKIP command skips over one or more save-sets. The
command parameter describes how many save-sets to skip. The parameter 
may be a positive number to skip forward or a negative number to skip 
backwards.
.i +10;Format:  SKIP save-set-count
.i -1;2 SIXBIT
.br;The SIXBIT command causes the RESTORE command to write out restored
files in SIXBIT mode. SIXBIT takes an integer parameter to say how big
the output records should be in bytes. If the record size is zero then
SIXBIT mode is switched off and the restored files are written using
normal ASCII text format. SIXBIT mode is used to restore binary information
from the tape. Each 36 bit word is written as six sets of six bits each
converted to an ASCII byte by adding decimal 32. If the file contained 
SIXBIT text in fixed length records then no further conversion is required,
otherwise a user supplied program would have to convert the appropriate
binary data types into the desired format.
.i +10;Format:  SIXBIT record-size
.i -1;1 Multi__Volumes
.p;When 10BACKUP reaches the end of the tape volume while it is still
processing a save set, it assumes that another tape volume must follow.
For interactive jobs, or if the tape input is coming from a file,
10BACKUP rewinds the current volume and prompts "Please ready the
next 10BACKUP tape volume:". The response to this prompt may be: 
.ls;.le;A <RETURN> to re-use the same device. Before entering this
response the next tape volume containing the save set continuation must
be loaded into the device by contacting the operators. This may be done by
ringing and telling them which volume to load, or by spawning a
subprocess to send an appropriate request message. 
.le;The name of another device to use. 10BACKUP will continue processing
the save set from this device which must also have been mounted using the
/FOREIGN qualifier.
.le;A CTRL/Z to abort further processing of the save set.
.els;
.p;For non-interactive jobs 10BACKUP sends a request to the operators
asking them to physically mount the next volume in the tape device.
When the operator replies 10BACKUP will continue processing the save set
from the new volume.
.i -1;1 Examples
.p;The following is an example of the usage of 10BACKUP. It shows the commands
used to get a directory of the whole tape, and how to restore files *SKL.CTL
and *.RNO from the save set "My Save Set".
.b 2;.lm +10;.nf;
$ MOUNT/FOREIGN MTB1: BACKUP TAPE
$ RUN SYSPUB:10BACKUP
/TAPE TAPE:
/DIRECTORY
   ... directory appears here ...
/REWIND
/SSNAME "My Save Set"
/RESTORE *SKL.CTL,*.RNO
   ... information on files appears here ...
/EXIT
.f;.lm -10;
.p;The next example shows the commands used to; a) get a directory of
the whole tape, b) restore files *.FOR from all save sets on the tape,
and c) restore file BINARY.DAT as 36 byte SIXBIT records from save set
"BINARY FILES". 
.b 2;.lm +10;.nf;
$ LOAD/NOWRITE ST53 MYTAPE
$ MOUNT/NOASSIST/FOREIGN MYTAPE:
$ RUN SYSPUB:10BACKUP
/TAPE MYTAPE:
/DIRECTORY
   ... directory appears here ...
/REWIND
/RESTORE *.FOR
   ... information on restored files appears here ...
/REWIND
/SSNAME BINARY FILES
/SIXBIT 36
/RESTORE BINARY.DAT
   ... information on restored files appears here ...
/EXIT
.f;.lm -10;
.i -1;1 File__Transfers
.p;The DECsystem-10 BACKUP Utility and 10BACKUP may be used together to
transfer files from the DECsystem-10 to the VAX using magnetic tape. 
.p;At La#Trobe only MTA0: on VAX2 can read the 800 BPI tapes written by
the DECsystem-10. Therefore all DECsystem-10 to VAX file transfers must
be done using this tape drive.
.p;The first step is to write the files onto tape using the DECsystem-10
BACKUP utility. The following commands show the files *.RNO and NEW*.FOR
being saved onto tape 456TAP: 
.b;.nf;.lm +5;
_.MOUNT MTA:MYTAPE/REELID:456TAP
_.R BACKUP
/TAPE MYTAPE
/SSNAME "Files for VAX"
/SAVE *.RNO,NEW*.FOR
/EXIT
_.DISMOUNT MYTAPE
.b;.f;.lm -5;
.br;Now the files may be restored using MTA0: on VAX2 with the commands:
.b;.nf;.lm +5;
$ LOAD/DEVICE=MTA0:/NOWRITE 456TAP MYTAPE
$ MOUNT/NOASSIST/FOREIGN MYTAPE:
$ RUN SYSPUB:10BACKUP
/TAPE MYTAPE:
/RESTORE
   ... information on restored files appears here ...
/EXIT
$ DISMOUNT MYTAPE:
.b;.f;.lm -5;
