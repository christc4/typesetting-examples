.page size 1000,75
TELL
.skip
.left margin 5
The TELL command lets you execute a single command on a remote node
and see the result (output) of that command. For example, this
command might be used to examine the queues of a remote node. In
order to use the TELL command under TOPS-10, you must
DECLARE a TELL command, which can be done by using the system default
DECLARE file:
.skip
_.DECLAR @STD:DCLSTD
.skip
The syntax is:
.skip
_.TELL nodename["username password"]:: command string
.left margin 11
|---access control string---|
.left margin 5
.skip
An alias which describes a node name/user ID/password combination may be substituted for the long
access control string shown above. Type .HELP ALIAS for more
information on defining aliases on the DEC-10.
.skip
Note that if a disk device or a line printer is assigned the logical
name TELL, everything TELL does will be logged to that device. If the
device is a disk, it will create a file called TELL.LOG[-] on the
disk device specified.
.skip
.left margin 0
IMPLEMENTATION
.skip
.left margin 5
The TELL command is implemented as a command and a command server on
each DECnet node. The server is identified by DECnet object number
198. On the DECsystem-10 the server is implemented as a program,
called DOTELL. This program runs detached and attempts to always
have a passive connect outstanding to handle commands from other systems.
Although DOTELL can theoretically handle up to 64 connects, other
limitations give it a practical maximum of about 30 connects at the
same time.
The TELL command on the DEC-10 runs a program called TELL, which
establishes a single DECnet link with the remote TELL server.
.skip
Implementation of the command and the server is obviously
machine-dependent. A TELL command and TELL server exist for the
VAX and the DECsystem-10, and a TELL command exists for RSX systems.
The TELL commands on the DEC-10 and the VAX are identical in
syntax. The syntax is slightly different for RSX.
