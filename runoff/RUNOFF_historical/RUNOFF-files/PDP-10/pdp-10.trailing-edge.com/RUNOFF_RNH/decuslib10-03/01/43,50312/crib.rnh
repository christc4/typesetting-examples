.PAPER SIZE 60 70
.SPACING 1
.LEFT MARGIN 5
.CENTER
^^MANTIS CRIB SHEET\\
.SKIP 2
.INDENT -3
1.#^TO COMPILE, LOAD AND EXECUTE:
.SKIP 2
#.^^DEBUG/LOA# FILE1, FILE2####\\
.BREAK
.INDENT 10
FOR DEBUGGING ALL ^^FORTRAN\\ PROGRAMS
.SKIP 2
.INDENT -3
2.#^METHODS OF SPECIFYING POSITION:
.SKIP 2
10########STATEMENT NUMBER 10 IN THE CURRENT PROGRAM
.SKIP 1
^^SUBR/20\\###STATEMENT NUMBER 20 IN THE SUBPROGRAM ^^SUBR\\
.SKIP 1
^^SUBR/+1\\###FIRST ^&EXECUTABLE\& STATEMENT IN SUBPROGRAM ^^SUBR\\
.SKIP 1
75&+5######THE FIFTH ^&EXECUTABLE\& STATEMENT AFTER OR BEFORE
.BREAK
.INDENT 10
STATEMENT 75
.SKIP 2
.INDENT -3
3.#^METHODS OF SPECIFYING DATA LOCATIONS:
.SKIP 2
^^VALUE\\#####THE VARIABLE ^^VALUE\\ IN THE CURRENT PROGRAM
.SKIP 1
^^PROG/A\\####THE VARIABLE ^A IN SUBPROGRAM ^^PROG\\
.SKIP 1
^^ARR\\(7)####THE SEVENTH VALUE IN ARRAY ^^ARR\\ (A SUBSCRIPT MAY
.BREAK
.INDENT 10
NOT
BE A VARIABLE)
.SKIP 1
^^ARR\\(*)####ALL VALUES IN ARRAY ^^ARR\\
.SKIP 1
^I(2,*)####ALL VALUES IN THE SECOND ROW OF ARRAY ^I
.SKIP 2
.INDENT -3
4.#^STORED COMMANDS: (^OTHER COMMANDS MAY BE ATTACHED TO THESE IF SEPARATED BY A SEMICOLON)
.LEFT MARGIN 15
.SKIP 2
.INDENT -10
^A^T POSITION
.BREAK
PROVIDE NOTIFICATION EVERYTIME SPECIFIED STATEMENT
IS EXECUTED
.SKIP 1
.INDENT -10
^A^T POSITION,N
.BREAK
PROVIDE NOTIFICATION EVERY NTH TIME STATEMENT IS EXECUTED
.SKIP 1
.INDENT -10
^^STOP AT\\ POSITION#####STOP PRIOR TO THE SPECIFIED STATEMENT
.SKIP 1
.INDENT -10
^O^N VARIABLE [RELATION AND CONSTANT][POSITION]
.LEFT MARGIN 15
.BREAK
CAUSES A DATA BREAK WHEN VARIABLE SATISFIES THE RELATION CONDITION (.^^EQ.,.LT.,.LE.,.GE.,.NE.)\\ AT THE INDICATED POSITION OR RANGE.
.LEFT MARGIN 5
.SKIP 1
^^ON CALL FCN\\
.BREAK
.INDENT 10
PROVIDE NOTIFICATION OF EACH CALL TO SUBPROGRAM ^^FCN\\
.SKIP 1
^^STOP ON CALL BETA\\
.BREAK
.INDENT 10
STOP JUST BEFORE EXECUTING ^^BETA\\ (AFTER PROLOGUE)
.SKIP 1
^^BEFORE[RETURN FROM]PROG\\
.BREAK
.INDENT 10
PROVIDE NOTIFICATION JUST BEFORE EXITING ^^PROG\\
.SKIP 1
^^STOP BEFORE[RETURN FROM]PROG\\
.BREAK
.INDENT 10
STOP JUST BEFORE EXITING ^^PROG\\ (BEFORE EPILOGUE)
.SKIP 2
.INDENT -3
5.#^DIRECT OR ATTACHABLE COMMANDS:
.SKIP 2
^^KILL\\######REVOKE ALL STORED COMMANDS
.SKIP 1
^^KILL AT\\ POSITION
.BREAK
##########REVOKE STATEMENT BREAK
.SKIP 1
^^KILL ON CALL \\NAME
.BREAK
##########REVOKE ^^ON CALL\\ BREAK
.SKIP 1
^^KILL BEFORE\\ NAME
.BREAK
##########REVOKE ^^BEFORE RETURN FROM\\ BREAK
.SKIP 1
^G^O########START EXECUTION AT ENTRY POINT OR RESUME EXECUTION
.BREAK
.INDENT 10
AT THE
POINT AT WHICH IT LAST STOPPED.
.SKIP 1
^G^O POSITION
.BREAK
.INDENT 10
START OR RESUME EXECUTION AT SPECIFIED STATEMENT
.SKIP 1
^^OUTPUT ABC\\
.LEFT MARGIN 15
.BREAK
TYPE THE VALUE OF ^^ABC\\ NUMBERIC FORMAT--FLOATING POINT
OR INTEGER AS SPECIFIED IN THE PROGRAM.
.LEFT MARGIN 5
.SKIP 1
^^OU J IN TEXT, K IN TEXT\\
.BREAK
.INDENT 10
TYPE ^J AND ^K AS CHARACTERS
.SKIP 1
^^OUTPUT M(4) IN OCTAL\\
.BREAK
.INDENT 10
TYPE ^M(4) AS AN OCTAL NUMBER
.SKIP 1
=(VALUE CHANGE)
.SKIP 1
^^XYZ=4.2\\###CHANGE THE VALUE OF ^^XYZ\\ TO 4.2
.SKIP 1
^^J='HELLO'\\#(LITERAL DATA)
.SKIP 1
^K="577####(OCTAL DATA)
.SKIP 1
^^LOG=F\\#####(LOGICAL DATA)
.SKIP 2
.INDENT -3
6.#^DIRECT COMMANDS:
.SKIP 2
.LEFT MARGIN 15
.INDENT -10
^^EXIT\\######CLOSE ^^USE\\ FILE, RETURN TO MONITOR
.SKIP 1
.INDENT -10
^^SUBCHECK\\##SET UP SUBSCRIPT CHECKING FOR ALL ARRAYS UNDER ^^MANTIS\\
CONTROL
.SKIP 1
.INDENT -10
^^SUBCHECK SUBR/\\
.BREAK
CHECK ALL ARRAYS IN SUBPROGRAM ^^SUBR\\ (ASSUMING THAT ^^SUBR\\ IS
UNDER ^^MANTIS\\ CONTROL)
.SKIP 1
.INDENT -10
^^SUBCHECK MAIN/X AT 110\\
.BREAK
CHECK REFERENCE TO ARRAY ^X IN ^^MAIN\\ AT THE STATEMENT SPECIFIED
.SKIP 1
.INDENT -10
^^SUBCHECK X BETWEEN 90 AND 100+2\\
.BREAK
CHECK REFERENCE TO ARRAY ^X BETWEEN THE SPECIFIED STATEMENTS
.SKIP 1
.INDENT -10
^^SUBCHECK MAIN/,,BETWEEN 50-5 \\AND 70
.BREAK
CHECK ALL ARRAYS REFERENCED BETWEEN THE SPECIFIED STATEMENTS IN THE MAIN
PROGRAM
.SKIP 1
.INDENT -10
^^STOP SUBCHECK\\
.BREAK
STOP ALL SUBSCRIPT CHECKING
.SKIP 1
.INDENT -10
^^TRACE\\#####SET UP  MONITORING OF ALL EXCEPTIONS TO SEQUENTIAL EXECUTION FLOW,
I.E., ^^GO TO, IF\\, SUBPROGRAM ^^CALL \\AND ^^RETURN\\ STATEMENTS, AND
^^MANTIS GO\\ COMMANDS
.SKIP 1
.INDENT -10
^^TRACE OUTPUT\\
.BREAK
OUTPUT EXCEPTIONS AS THEY OCCUR, AS WELL AS SAVING THEM IN THE HISTORY
LOG
.SKIP 1
.INDENT -10
^^TRACE PAUSE\\
.BREAK
STOP FOR COMMAND INPUT FOLLOWING EACH EXCEPTION
.SKIP 1
.INDENT -10
^^STOP TRACE\\
.BREAK
DISCONTINUE TRACE OPTION
.SKIP 1
.TEST PAGE 5
.INDENT -10
^^HISTORY\\###OUTPUT LOG OF EXECUTION FLOW EXCEPTIONS (MOST RECENT FIRST)
.SKIP 2
.LEFT MARGIN 5
.INDENT -3
7.#^MAGNETIC TAPE COMMANDS:
.SKIP 2
.LEFT MARGIN 15
.INDENT -10
^^UNLOAD\\ _#N
.BREAK
REWIND AND UNLOAD TAPE ON UNIT N
.SKIP 1
.INDENT -10
^^REWIND\\ _#N
.BREAK
REWIND TAPE
.SKIP 1
.INDENT -10
^^ENDFILE \\_#N
.BREAK
WRITE AN END-OF-FILE MARK ON TAPE
.SKIP 1
.INDENT -10
^^BACKSPACE\\ _#N
.BREAK
BACKSPACE TAPE ONE RECORD
.SKIP 1
.INDENT -10
^^SKIPRECORD \\_#N
.BREAK
SKIP ONE INPUT RECORD ON TAPE
.SKIP 2
.LEFT MARGIN 5
.INDENT -3
8.#^TO RESTART ENTIRE PROGRAM:
.SKIP 2
REPOSITION MAGNETIC TAPES
.SKIP 1
&*^^RESTART\\
.SKIP 1
INITIALIZE ANY NECESSARY VARIABLES
.SKIP 1
&*^G^O
.SKIP 2
.INDENT -3
9.#^TO INTERRUPT EXECUTION:
.SKIP 2
.LEFT MARGIN 10
.INDENT -5
(1)##^IF STORED COMMANDS ARE PERIODICALLY BEING PROCESSED BY ^^MANTIS\\ (E.G.,
IF ^^MANTIS\\ IS PROVIDING NOTIFICATION EVERY TIME A PARTICULAR STATEMENT
IS EXECUTED), TYPE ^^STOP\\ AND EXECUTION WILL STOP THE NEXT TIME ^^MANTIS\\
GETS CONTROL.
.SKIP 2
.INDENT -5
(2)##^OTHERWISE, THE FOLLOWING SEQUENCE WILL RETURN CONTROL TO ^^MANTIS\\
COMMAND LEVEL:
.SKIP 1
_^^C_^^C
.BREAK
&.^^REE\\
.TEST PAGE 5
.SKIP 2
.INDENT -5
(3)##^IF TELETYPE INPUT IS PENDING, DO THE FOLLOWING:
.SKIP 1
_^^C
.BREAK
&.^^REE\\ <^C^R>
.BREAK
25.3 <^C^R>#############INPUT DATA
.BREAK
&*
