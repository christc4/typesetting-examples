.PS67,70;.SP1;.LM0;.RM70;.F;.J
.RIGHT
\\^FIRST ^PRINTING, ^MAY 1976
.B2
^THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT NOTICE
AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY ^DIGITAL ^EQUIPMENT ^CORPORATION.
^DIGITAL ^EQUIPMENT ^CORPORATION ASSUMES NO RESPONSIBILITY FOR ANY
ERRORS THAT MAY APPEAR IN THIS DOCUMENT.
.B
^THE SOFTWARE DESCRIBED IN THIS DOCUMENT IS FURNISHED UNDER A LICENSE
AND MAY BE USED OR COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
.B
^DIGITAL ^EQUIPMENT ^CORPORATION ASSUMES NO RESPONSIBILITY FOR THE USE OR
RELIABILITY OF ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY ^^DIGITAL\\.
.FG5;.C
^COPYRIGHT C 1976 BY ^DIGITAL ^EQUIPMENT ^CORPORATION
.FG5
^THE POSTAGE PREPAID ^^READER'S COMMENTS\\ FORM ON THE LAST PAGE OF THIS
DOCUMENT REQUESTS THE USER'S CRITICAL EVALUATION TO ASSIST US IN PREPARING
FUTURE DOCUMENTATION.
.FG5
^THE FOLLOWING ARE TRADEMARKS OF ^DIGITAL ^EQUIPMENT ^CORPORATION:
.B3;.LM8;.TS33,52;.NF;.NJ
^^DIGITAL	DEC\\SYSTEM-10	^^MASSBUS
DEC	DEC\\TAPE	^^OMNIBUS
PDP	DIBOL	OS/8
DECUS	EDUSYSTEM	PHA
UNIBUS	FLIP CHIP	RSTS
COMPUTER LABS	FOCAL	RSX
COMTEX	INDAC	TYPESET-8
DDT	LAB-8	TYPESET-10
DECCOMM	DECSYSTEM-20	TYPESET-11\\
.PG;.F;.J;.LM0;.RM70;.FG7;.C
^^CONTENTS\\
.B3;.TS65
	^PAGE
.B;.NF;.NJ;.LM17;.TS9,17,65;.I-17
^^PREFACE\\
.B;.I-17
^^CHAPTER	1	THE SYSTEM OPERATOR	1-1
.B;.I-17
	1.1	YOUR RESPONSIBILITIES	1-1
.I-17
	1.2	YOUR DUTIES	1-1\\
.I-17
	1.2.1	##^HARDWARE-^RELATED ^DUTIES	1-1
.I-17
	1.2.2	##^SOFTWARE-^RELATED ^DUTIES	1-1
.I-17
	1.3	^^DOCUMENTATION\\	1-2
.I-17
	1.3.1	##^SUPPLIED BY ^^DIGITAL\\	1-2
.I-17
	1.3.2	##^SUPPLIED BY THE ^INSTALLATION	1-2
.I-17
	1.3.2.1	##^THE ^OPERATOR'S ^NOTEBOOK	1-2
.I-17
	1.3.2.2	##^THE ^SYSTEM ^LOGBOOK	1-3
.I-17
	1.3.2.3	##^TAILORED ^OPERATION ^PROCEDURES	1-3
.I-17
	1.3.3	##^SUPPLIED BY ^YOU	1-3
.B;.I-17
^^CHAPTER	2	SYSTEM COMPONENTS	2-1
.B;.I-17
	2.1	DECSYSTEM-10 HARDWARE	2-1\\
.I-17
	2.1.1	##^CENTRAL ^PROCESSORS	2-1
.I-17
	2.1.2	##^MEMORY ^SYSTEMS	2-1
.I-17
	2.1.3	##^FRONT-^END ^PROCESSORS	2-2
.I-17
	2.1.4	##^PERIPHERALS	2-2
.I-17
	2.1.4.1	##^LINE ^PRINTER	2-2
.I-17
	2.1.4.2	##^CARD ^READERS/^PUNCHES	2-3
.I-17
	2.1.4.3	##^^DEC\\TAPES	2-3
.I-17
	2.1.4.4	##^DISK ^SYSTEMS	2-3
.I-17
	2.1.4.5	##^MAGNETIC ^TAPES	2-3
.I-17
	2.1.4.6	##^PLOTTER	2-4
.I-17
	2.1.5	##^TERMINALS AND ^REMOTE ^STATIONS	2-4
.I-17
	2.1.5.1	##^HARDCOPY ^TERMINALS	2-4
.I-17
	2.1.5.2	##^^CRT D\\ISPLAY ^TERMINALS	2-5
.I-17
	2.1.5.3	##^REMOTE ^STATIONS	2-5
.I-17
	2.2	^^DECSYSTEM-10 SOFTWARE\\	2-5
.I-17
	2.2.1	##^OPERATING ^SYSTEMS	2-5
.I-17
	2.2.2	##^LANGUAGES	2-6
.I-17
	2.2.2.1	##^^MACRO A\\SSEMBLER	2-6
.I-17
	2.2.2.2	##^COMPILERS	2-6
.I-17
	2.2.2.3	##^INTERPRETERS	2-6
.I-17
	2.2.3	##^UTILITIES AND ^OTHER ^SOFTWARE	2-7
.B;.I-17
^^CHAPTER	3	STARTING THE SYSTEM	3-1
.B;.I-17
	3.1	POWERING UP	3-3
.I-17
	3.2	LOADING THE CONSOLE FRONT END
.BR;.I-17
		(RSX-20F MONITOR)	3-3\\
.I-17
	3.2.1	##^LOADING ^^RSX-20F\\ FROM ^DISK	3-3
.I-17
	3.2.2	##^LOADING ^^RSX-20F\\ FROM ^^DEC\\TAPE	3-4
.I-17
	3.2.3	##^LOADING ^^RSX-20F\\ VIA THE ^SWITCH ^REGISTER	3-5
.I-17
	3.3	^^LOADING THE CENTRAL PROCESSOR
.BR;.I-17
		(TOPS-10 MONITOR)	3-8\\
.B;.LM0;.C
^^CONTENTS\\ (^CONT.)
.B3;.TS65
	^PAGE
.B;.LM17;.TS9,17,65;.I-17
	3.3.1	##^LOADING ^^TOPS-10\\ FROM ^DISK	3-8
.I-17
	3.3.2	##^LOADING ^^TOPS\\-10 FROM ^MAGNETIC ^TAPE	3-8
.I-17
	3.3.3	##^^TOPS-10 I\\NITIALIZATION ^DIALOG	3-9
.I-17
	3.3.4	##^LOADING ^SECOND ^^CPU (D\\UAL ^PROCESSOR)	3-11
.I-17
	3.4	^^LOADING COMMUNICATIONS FRONT ENDS	3-11\\
.I-17
	3.4.1	##^LOADING VIA THE ^^DL\\10	3-12
.I-17
	3.4.2	##^LOADING VIA THE ^^DTE\\20	3-12
.I-17
	3.5	^^LOADING THE DX10 DATA CHANNEL\\	3-14
.I-17
	3.5.1	##^LOADING ^PROCEDURE	3-14
.B;.I-17
^^CHAPTER	4	SYSTEM SERVICES	4-1
.B;.I-17
	4.1	OPSER	4-1
.I-17
	4.1.1	##OPSER O\\PERATION	4-1
.I-17
	4.1.1.1	##^COMMANDS TO THE ^^OPSER P\\ROGRAM	4-2
.I-17
	4.1.1.2	##^COMMANDS ^DIRECTLY TO ^SUBJOBS	4-3
.I-17
	4.1.2	##^^OPSER C\\OMMANDS	4-4
.I-17
	4.1.2.1	##^^OPSER C\\OMMANDS TO THE ^OPERATOR	4-4
.I-17
	4.1.2.2	##^^OPSER C\\OMMANDS FOR ^ALL ^USERS	4-5
.I-17
	4.1.3	##^^OPSER O\\PERATOR ^MESSAGES	4-9
.I-17
	4.2	^^OMOUNT (FILE AND MOUNT/DISMOUNT)	4-11
.I-17
	4.3	QUEUE	4-14
.I-17
	4.4	GALAXY BATCH SYSTEM	4-16
.I-17
	4.4.1	##QUASAR\\	4-16
.I-17
	4.4.1.1	##^COMPONENTS-TO-^^QUASAR M\\ESSAGES	4-17
.I-17
	4.4.2	##^^BATCON\\	4-19
.I-17
	4.4.2.1	##^^BATCON C\\OMMANDS	4-19
.I-17
	4.4.2.2	##^^BATCON O\\PERATION	4-24
.I-17
	4.4.2.3	##^^BATCON O\\PERATOR ^MESSAGES	4-26
.I-17
	4.5	^^OUTPUT SPOOLERS	4-28
.I-17
	4.5.1	##LPTSPL\\	4-34
.I-17
	4.5.1.1	##^^LPTSPL O\\PERATOR ^MESSAGES	4-40
.I-17
	4.5.2	##^^SPROUT	4-43
.I-17
	4.5.2.1	##SPROUT O\\PERATOR ^MESSAGES	4-44
.I-17
	4.6	^^INPUT SPOOLER (SPRINT)	4-46
.I-17
	4.6.1	##SPRINT C\\OMMANDS	4-48
.I-17
	4.6.2	##^^SPRINT O\\PERATOR ^MESSAGES	4-49
.I-17
	4.7	^^OPERATOR/USER COMMUNICATION	4-53
.I-17
	4.7.1	##PLEASE	4-53
.I-17
	4.7.2	##SEND	4-54\\
.B;.I-17
^^CHAPTER	5	OPERATOR TASKS	5-1
.B;.I-17
	5.1	DAILY TASKS	5-1\\
.I-17
	5.1.1	##^UPDATE THE ^MESSAGE OF THE ^DAY	5-1
.I-17
	5.1.2	##^^SPACE\\ WITH /^^FACT S\\WITCH	5-2
.I-17
	5.1.3	##^UPDATE ^ACCOUNT ^FILES	5-4
.I-17
	5.1.4	##^^FILCOM A\\CCOUNT ^FILES	5-7
.I-17
	5.1.5	##^DETACHED ^JOB ^PROCEDURE	5-8
.I-17
	5.1.6	##^^BACKUP (D\\AILY)	5-10
.I-17
	5.1.7	##^^SPACE\\ WITH ^^/BATCH S\\WITCH	5-11
.I-17
	5.1.8	##^^GRIPES	5-12\\
.I-17
	5.1.9	##^SAVING ^^FACT F\\ILES	5-12
.I-17
	5.1.10	##^SYSTEM ^SHUTDOWN	5-13
.I-17
	5.1.11	##^^DSKLST\\	5-14
.I-17
	5.1.12	##^^DSKRAT\\	5-14
.PG;.LM0;.C
^^CONTENTS\\ (^CONT.)
.B3;.TS65
	^PAGE
.B;.LM17;.TS9,17,65;.I-17
	5.2	^^OTHER SCHEDULED TASKS\\	5-15
.I-17
	5.2.1	##^ACCOUNT ^CONTROL	5-15
.I-17
	5.2.2	##^^BACKUP (W\\EEKLY)	5-16
.I-17
	5.3	^^NON-SCHEDULED TASKS\\	5-19
.I-17
	5.3.1	##^FORMATTING ^DISK ^PACKS	5-19
.I-17
	5.3.1.1	##^FORMATTING ^^RP\\02S AND ^^RP\\03S	5-19
.I-17
	5.3.1.2	##^FORMATTING ^^RP\\04S AND ^^RP\\06S	5-23
.B;.I-17
^^CHAPTER	6	SYSTEM RECOVERY PROCEDURES	6-1
.B;.I-17
	6.1	CENTRAL PROCESSOR RECOVERY\\	6-1
.I-17
	6.1.1	##^SOFTWARE ^ERRORS	6-2
.I-17
	6.1.1.1	##^^STOPCD (M\\ONITOR ^ERROR ^STOP)	6-2
.I-17
	6.1.1.2	##^^RSX-20F D\\ETECTED ^ERRORS	6-3
.I-17
	6.1.1.3	##^^HUNG C\\ONDITION	6-5
.I-17
	6.1.1.4	##^CRASH ^RESTART ^PROCEDURE	6-5
.I-17
	6.1.2	##^HARDWARE ^ERRORS	6-7
.I-17
	6.1.2.1	##^PARITY ^ERROR	6-7
.I-17
	6.1.2.2	##^ALTERING ^YOUR ^MEMORY ^CONFIGURATION	6-8
.I-17
	6.1.2.3	##^MEMORY ^SELECTION AND ^INTERLEAVING	6-9
.I-17
	6.1.3	##^ENVIRONMENTAL ^ERRORS	6-14
.I-17
	6.1.3.1	##^POWER ^FLUCTUATION	6-14
.I-17
	6.1.3.2	##^POWER ^OUTAGE	6-14
.I-17
	6.2	^^FRONT-END PROCESSOR RECOVERY	6-15\\
.I-17
	6.2.1	##^CONSOLE/^DIAGNOSTIC ^FRONT ^END	6-15
.I-17
	6.2.2	##^^DTE20-I\\NTERFACED ^COMMUNICATIONS
.BR;.I-17
		##^FRONT ^ENDS	6-16
.I-17
	6.2.3	##^^DL10-I\\NTERFACED ^COMMUNICATIONS
.BR;.I-17
		##^FRONT ^ENDS	6-17
.I-17
	6.3	^^DX10 DATA CHANNEL RECOVERY	6-18\\
.B;.I-17
^^CHAPTER	7	DEVICE OPERATION	7-1
.B;.I-17
	7.1	LINE PRINTER	7-1\\
.I-17
	7.1.1	##^CHANGING ^FORMS	7-4
.I-17
	7.1.2	##^CONTROLLING THE ^VERTICAL ^FORMAT ^UNIT	7-11
.I-17
	7.1.3	##^CHANGING AND ^REVERSING THE ^RIBBON	7-16
.I-17
	7.1.4	##^CLEANING THE ^LINE ^PRINTER	7-22
.I-17
	7.2	^^CARD READER	7-22\\
.I-17
	7.2.1	##^LOADING AND ^UNLOADING ^CARDS	7-22
.I-17
	7.2.2	##^CLEANING THE ^CARD ^READER	7-25
.I-17
	7.3	^^DECTAPE\\	7-25
.I-17
	7.3.1	##^MOUNTING AND ^DISMOUNTING ^^DEC\\TAPES	7-26
.I-17
	7.3.2	##^CLEANING ^^DEC\\TAPE ^DRIVES	7-26
.I-17
	7.4	^^MAGNETIC TAPE\\	7-26
.I-17
	7.4.1	##^MOUNTING AND ^DISMOUNTING	7-27
.I-17
	7.4.1.1	##^^TU\\10 AND ^^TU\\16 ^DRIVES	7-27
.I-17
	7.4.1.2	##^^TU\\40 AND ^^TU\\41 ^DRIVES	7-29
.I-17
	7.4.1.3	##^^TU70, TU\\71, AND ^^TU\\72 ^DRIVES	7-29
.I-17
	7.4.1.4	##^^TU45 D\\RIVES	7-32
.I-17
	7.4.2	##^CLEANING ^MAGNETIC ^TAPE ^DRIVES	7-34
.I-17
	7.5	^^DISK DRIVES	7-35\\
.I-17
	7.5.1	##^MOUNTING AND ^DISMOUNTING ^DISK ^PACKS	7-35
.I-17
	7.5.2	##^CLEANING ^DISK ^DRIVES	7-36
.I-17
	7.5.3	##^FORMATTING ^DISK ^PACKS	7-36
.PG;.LM0;.C
^^CONTENTS\\ (^CONT.)
.B3;.TS65
	^PAGE
.B;.LM17;.TS9,17,65;.I-17
^^APPENDIX	A	TOPS-10 OPERATOR-PRIVILEGED COMMANDS	A-1
.B;.I-17
	A.1	INTRODUCTION	A-1
.I-17
	A.2	COMMAND DESCRIPTIONS	A-1
.I-17
		##ATTACH\\ DEVICE	^A-1
.I-17
		##^^ATTACH\\ DISKUNIT	^A-2
.I-17
		##^^ATTACH\\ JOB	^A-2
.I-17
		##^^DETACH\\ DEVICE	^A-3
.I-17
		##^^DETACH\\ DISKUNIT	^A-3
.I-17
		##^^SET BREAK	A-4
.I-17
		##SET CORMAX	A-4
.I-17
		##SET CORMIN	A-5
.I-17
		##SET DATE	A-5
.I-17
		##SET DAYTIME	A-6
.I-17
		##SET MEMORY	A-6
.I-17
		##SET NOMESSAGE	A-7
.I-17
		##SET OPR	A-7
.I-17
		##SET SCHED	A-8
.I-17
		##SET TTY	A-8
.I-17
		##SET VMMAX	A-14
.I-17
		##XCHNGE	A-14\\
.B;.I-17
^^APPENDIX	B	RSX-20F CONSOLE PROCESSOR COMMANDS	B-1
.B;.I-17
	B.1	ENTERING AND EXITING THE PARSER	B-1
.I-17
	B.2	PARSER CONSOLE MODES	B-1
.I-17
	B.3	PARSER PROMPTS	B-1
.I-17
	B.4	PARSER COMMANDS FOR THE OPERATOR	B-2
.I-17
	B.5	PARSER ERROR MESSAGES	B-7
.B;.I-17
APPENDIX	C	KL INITIALIZATION PROGRAM (KLINIT)	C-1
.B;.I-17
	C.1	KLINIT OPERATOR DIALOG	C-2
.I-17
	C.2	KLINIT MESSAGES	C-5
.I-17
	C.2.1	##I\\NFORMATIONAL ^MESSAGES	^C-5
.I-17
	^C.2.2	##^WARNING ^MESSAGES	^C-6
.I-17
	^C.2.3	##^DIALOG ^ERROR ^MESSAGES	^C-7
.I-17
	^C.2.4	##^SYSTEM ^ERROR ^MESSAGES	^C-7
.I-17
	^^C.3	REPORTS RELATING TO KL MEMORY
.BR;.I-17
		CONFIGURATION	C-15
.I-17
	C.4	KLINIT DIALOG EXAMPLES	C-16\\
.B;.TS9,17,62;.I-17
^^INDEX			I\\NDEX-1
.TS9,17,65
.B3;.C
^^FIGURES\\
.B2;.I-17
^^FIGURE	3-1\\	^LOAD ^SWITCHES AND ^SWITCH ^REGISTER	3-2
.I-17
	7-1	^^LP07 L\\INE ^PRINTER	7-2
.I-17
	7-2	^^LP10 L\\INE ^PRINTER	7-3
.I-17
	7-3	^^LP07 P\\APER ^INSTALLATION	7-6
.I-17
	7-4	^^LP07 F\\ORMS ^ALIGNMENT	7-7
.I-17
	7-5	^^LP10 P\\APER ^INSTALLATION	7-9
.I-17
	7-6	^^LP07 R\\IBBON ^INSTALLATION	7-17
.PG;.LM0;.C
^^CONTENTS\\ (^CONT.)
.B3;.TS65
	^PAGE
.B;.LM17;.TS9,17,65;.I-17
	7-7	^^LP10 R\\IBBON ^INSTALLATION	7-20
.I-17
	7-8	^^CR10-F C\\ARD ^READER	7-23
.I-17
	7-9	^^CR10-E C\\ARD ^READER	7-24
.I-17
	7-10	^^TU16 M\\AGNETIC ^TAPE ^DRIVE	7-28
.I-17
	7-11	^^TU40 S\\ERIES ^MAGNETIC ^TAPE ^DRIVE	7-30
.I-17
	7-12	^^TU70 S\\ERIES ^MAGNETIC ^TAPE ^DRIVE	7-31
.I-17
	7-13	^^TU45 M\\AGNETIC ^TAPE ^DRIVE	7-33
.I-17
	7-14	^^RP03 D\\ISK ^DRIVE	7-37
.I-17
	7-15	^^RP04 D\\ISK ^DRIVE	7-38
.I-17
	7-16	^^RP06 D\\ISK ^DRIVE	7-39
.B3;.C
^^TABLES\\
.B2;.LM17;.TS9,17,65;.I-17
^^TABLE	3-1	S\\WITCH ^REGISTER ^BIT ^DEFINITIONS	3-6
.I-17
	4-1	^COMMANDS TO ^SET ^PARAMETERS FOR ^BATCH ^JOBS	4-21
.I-17
	4-2	^COMMANDS TO ^DISPLAY THE ^CURRENT
.BR;.I-17
		^PARAMETER ^SETTINGS	4-22
.I-17
	4-3	^COMMANDS TO ^CONTROL ^BATCH ^SUBJOBS	4-22
.I-17
	6-1	^^MF10-A (32K) M\\EMORY ^ADDRESS ^SWITCH
.BR;.I-17
		^SETTINGS	6-11
.I-17
	6-2	^^MF10-G (64K) M\\EMORY ^ADDRESS ^SWITCH
.BR;.I-17
		^SETTINGS	6-11
.I-17
	6-3	^^MF10 I\\NTERLEAVE ^SWITCH ^SETTINGS	6-11
.I-17
	6-4	^^MG10\\ AND ^^MH10 M\\EMORY ^BANK ^SELECTION	6-12
.I-17
	6-5	^^MG\\10 AND ^^MH\\10 ^MEMORY ^ADDRESS
.BR
^SWITCH ^SETTINGS	6-12
.I-17
	6-6	^^MG\\10 AND ^^MH\\10 ^INTERLEAVE ^SWITCH ^SETTINGS	6-13
.I-17
	7-1	^STANDARD ^^LP10 L\\INE ^PRINTER
.BR
^CARRIAGE ^TAPE	7-13
.I-17
	7-2	^STANDARD ^^LP10 L\\INE ^PRINTER ^VERTICAL
.BR
^ACTION	7-16
.I-17
	^A-1	^NUMBER OF ^FILLERS BY ^CHARACTER AND
.BR
^FILLER ^CLASS	^A-11
.PG;.FG12;.LM0;.F;.J;.C
^&^^PREFACE\&\\
.B3
^THIS OPERATOR'S GUIDE PROVIDES THE SYSTEM
OPERATOR WITH A BRIEF INTRODUCTION TO THE ^^DEC\\SYSTEM-10'S
HARDWARE AND SOFTWARE COMPONENTS AND SERVES AS A TASK-ORIENTED
REFERENCE FOR OPERATING THE ^^DEC\\SYSTEM-10.
.B
^THE PROCEDURES DOCUMENTED IN THIS MANUAL ARE BASED ON A SINGLE
LARGE IN-HOUSE INSTALLATION USING ALL THE STANDARD HARDWARE AND
SOFTWARE. ^BECAUSE INDIVIDUAL INSTALLATIONS WILL DIFFER BOTH IN THE
HARDWARE CONFIGURATIONS AND IN THE SOFTWARE REQUIREMENTS,
YOU SHOULD TAILOR THESE PROCEDURES TO FIT THE NEEDS
OF YOUR SYSTEM AND ADD PROCEDURES COVERING ANY UNIQUE APPLICATIONS.
.B
^THIS PUBLICATION COVERS THREE GENERAL AREAS: THE SYSTEM
OPERATOR, THE SYSTEM HARDWARE, AND THE SYSTEM SOFTWARE.
.B
^CHAPTER 1 DISCUSSES THE RESPONSIBILITIES AND DUTIES OF THE
SYSTEM OPERATOR AND INTRODUCES THE DOCUMENTATION AIDS THAT HE SHOULD HAVE AT HIS DISPOSAL.
.B
^CHAPTER 2 GIVES A BRIEF DESCRIPTION OF THE SYSTEM COMPONENTS. ^CHAPTER 7
PROVIDES OPERATING AND MAINTENANCE INSTRUCTIONS FOR THE SYSTEM
PERIPHERAL DEVICES.
.B
^CHAPTER 3 COVERS THE LOADING OF THE MAIN AND FRONT-END PROCESSORS.
^CHAPTER 4 DESCRIBES THE SERVICE PROGRAMS AND COMMANDS USED BY
THE OPERATOR. ^CHAPTER 5 DETAILS SOME OF THE SCHEDULED AND NON-SCHEDULED
TASKS THAT THE OPERATOR IS NORMALLY RESPONSIBLE FOR. ^CHAPTER 6
CONTAINS SYSTEM RECOVERY PROCEDURES TO BE FOLLOWED IN THE
EVENT OF A SYSTEM MALFUNCTION.
.B
^APPENDIX ^A CONTAINS DETAILED FORMATS OF THE OPERATOR-PRIVILEGED
COMMANDS USED IN THE ^^KL\\ MAIN PROCESSOR.
^USAGE INFORMATION AND EXAMPLES ARE SHOWN THROUGHOUT THE PROCEDURES.
.B
^APPENDIX ^B CONTAINS THE OPERATOR-PRIVILEGED COMMAND SUBSET OF THE
CONSOLE PROCESSOR LANGUAGE, ^^PARSER\\.
.B
^APPENDIX ^C CONTAINS DETAILED INFORMATION ON THE ^^KL\\ PROCESSOR INITIALIZATION
PROGRAM, ^^KLINIT\\.
.B
^THIS PUBLICATION REFLECTS RELEASE 6.03 OF THE ^^TOPS\\-10
MONITOR AND RELEASE 6^A OF THE ^^RSX-20F\\ FRONT-END MONITOR.
.NUMBER CHAPTER 1
.CHAPTER ^&THE SYSTEM OPERATOR\&
.HL1 ^&YOUR RESPONSIBILITIES\&
\\^AS A ^^DEC\\SYSTEM-10 OPERATOR, YOUR PRIMARY RESPONSIBILITY IS TO
KEEP THE SYSTEM RUNNING AND TO RESPOND TO USER REQUESTS AS QUICKLY
AND EFFICIENTLY AS POSSIBLE. ^YOU
MUST BE FAMILIAR WITH ALL THE RESOURCES AVAILABLE TO YOUR
SYSTEM, KNOW HOW TO INTERACT WITH THESE RESOURCES, AND
RECOGNIZE POTENTIAL PROBLEMS THAT COULD REDUCE
THE EFFECTIVE USE OF THESE RESOURCES.
.B
^YOU MUST KNOW HOW TO COMMUNICATE WITH THE FRONT-END PROCESSOR
AS WELL AS WITH THE MAIN PROCESSOR. ^YOU MUST BE FAMILIAR WITH BOTH THE
^^RSX-20F\\ OPERATOR COMMANDS AND THE ^^TOPS\\-10 COMMAND LANGUAGE.
^YOU WILL ALSO BE RESPONSIBLE FOR DOCUMENTING SYSTEM ACTIVITIES
FOR SUBSEQUENT SHIFTS AND FOR LOGGING A PERMANENT RECORD OF SYSTEM
AVAILABILITY, MAINTENANCE, AND DOWNTIME.
.HL1 ^&YOUR DUTIES\&
\\^YOUR DUTIES CAN BE CLASSIFIED INTO TWO CATEGORIES: THOSE THAT
ARE HARDWARE-RELATED AND THOSE THAT ARE SOFTWARE-RELATED. ^YOU
MAY PERFORM THESE DUTIES ON A REGULAR
SCHEDULE, OR ON AN "ON CALL" OR EVEN AN EMERGENCY BASIS.
.HL2 ^&HARDWARE-^RELATED DUTIES\&
\\^HARDWARE-RELATED DUTIES INCLUDE THE PHYSICAL UPKEEP OF THE SYSTEM
DEVICES AND THE COMPUTER ROOM; THE REPLENISHING OF CONSUMABLE
SUPPLIES SUCH AS PAPER FORMS, BLANK CARDS, AND BLANK PAPER TAPE; AND
THE SERVICING OF USER REQUESTS TO MOUNT PRIVATE TAPES OR DISK PACKS
OR TO LOAD A CARD OR PAPER TAPE READER.
.B
^IN THE EVENT OF A HARDWARE MALFUNCTION YOU SHOULD BE ABLE TO REMOVE
ANY DAMAGED OR FOREIGN MATERIAL; ASSESS THE EXTENT OF THE
FAILURE AND CALL FIELD SERVICE IF NECESSARY; AND ATTEMPT TO RETURN THE DEVICE TO ITS NORMAL 
OPERATING CONDITION AS SOON AS POSSIBLE.
.HL2 ^&SOFTWARE-^RELATED DUTIES\&
\\^SOFTWARE-RELATED DUTIES INCLUDE REPLYING TO USER REQUESTS, ASSIGNING
DEVICES, AND RUNNING SYSTEM ACCOUNTING AND CONTROL TASKS AS SPECIFIED BY
THE SYSTEM MANAGER.
.PG
.B
^DUE TO THE COMPLEXITY INHERENT IN LARGE SYSTEMS, THERE WILL BE TIMES
WHEN PROCESSING WILL CEASE TO FUNCTION CORRECTLY OR WILL TERMINATE
ABNORMALLY IN WHAT IS KNOWN AS A "CRASH."# ^THIS CAN RESULT FROM
SOFTWARE (PROGRAMMING) PROBLEMS, HARDWARE PROBLEMS, OR ENVIRONMENTAL PROBLEMS.
^PROBLEMS ALSO INCLUDE THE PRESENCE OF INEPT OR
MALICIOUS USERS ON THE SYSTEM. ^WHEN A SYSTEM CRASHES OR CEASES
TO FUNCTION CORRECTLY, IT BECOMES YOUR RESPONSIBILITY
TO RECOGNIZE THE PROBLEM AND TAKE THE APPROPRIATE CORRECTIVE
MEASURES. ^YOU SHOULD TRY TO BRING THE SYSTEM BACK UP TO ITS
PREVIOUS OPERATING LEVEL AS SOON AS POSSIBLE. ^WHEN THIS IS NOT
FEASIBLE, YOU SHOULD ATTEMPT TO BRING UP AS MUCH OF THE
SYSTEM AS POSSIBLE. ^IN EITHER CASE, YOU SHOULD FOLLOW THE ACCEPTED
PROCEDURE FOR RECORDING DATA IN THE EVENT
OF A CRASH.
.HL1 ^&DOCUMENTATION\&
\\^TO MAKE YOUR RESPONSIBILITIES AND DUTIES A LITTLE
EASIER TO HANDLE, THERE ARE A NUMBER OF DOCUMENTS AVAILABLE. ^YOU SHOULD
OBTAIN AT LEAST THE ONES MENTIONED HERE. ^SOME ARE FOR ONE-TIME READING,
OTHERS ARE FOR REFERENCE, AND STILL OTHERS ARE FOR YOU
TO DOCUMENT PERTINENT SYSTEM INFORMATION.
.HL2 ^&^SUPPLIED \BY ^^DIGITAL\&\\
\\^^DEC\\SYSTEM-10 ^SOFTWARE ^NOTEBOOKS ARE A 13-VOLUME
SET OF LOOSE LEAF NOTEBOOKS CONTAINING REGULARLY UPDATED DESCRIPTIONS OF ALL
SUPPORTED ^^DEC\\SYSTEM-10 SOFTWARE. ^IN ADDITION TO THIS MANUAL,
THE ^^DEC\\SYSTEM-10 ^OPERATOR'S ^GUIDE (^^KL\\ ^SERIES),
THE FOLLOWING PUBLICATIONS FOUND IN THE ^NOTEBOOKS WILL
PROVIDE ADDITIONAL INFORMATION RELEVANT TO YOUR FUNCTION AS A SYSTEM
OPERATOR.
.B;.LM5
^GETTING ^STARTED ^WITH ^^DEC\\SYSTEM-10
.BR
^GETTING ^STARTED ^WITH ^^TOPS\\-10 ^COMMANDS
.BR
^^DEC\\SYSTEM-10 ^OPERATING ^SYSTEM ^COMMANDS
.BR
^^DEC\\SYSTEM-10 ^MONITOR ^CALLS
.BR
^SUPPLEMENTARY ^OPERATOR ^PROCEDURES (^NOTEBOOK 13)
.B;.LM0
^IF YOU ARE USING BATCH PROCESSING, YOU SHOULD ALSO HAVE
THE FOLLOWING:
.B;.I5
^^DEC\\SYSTEM-10 ^^GALAXY\\ ^OPERATION AND ^SYSTEM
^PROGRAMMING ^PROCEDURES
.B
^IN ADDITION TO THE ABOVE, YOU MAY FIND HELPFUL IDEAS IN THE
^^SPECIFICATIONS\\ LOCATED IN ^NOTEBOOKS 10 AND 11.
^^DIGITAL\\ ALSO SUPPLIES SOME TEXT FILES ON THE MAGNETIC TAPE
USED FOR SOFTWARE DISTRIBUTION. ^THESE FILES CAN BE IDENTIFIED
BY THEIR FILE EXTENSION OF .^^HLP, .MEM, .BWR,\\ OR .^^DOC\\.
^IF THESE FILES HAVE BEEN COPIED OVER TO YOUR SYSTEM DISK,
YOU CAN ^^PRINT\\ THEM ON YOUR LINE PRINTER OR AT YOUR TERMINAL.
.HL2 ^&^SUPPLIED \BY \THE INSTALLATION\&
\\^INSTALLATION-SUPPLIED DOCUMENTATION USUALLY INCLUDES AN ^OPERATOR'S
^NOTEBOOK, A ^SYSTEM ^LOGBOOK, AND POSSIBLY A SET OF TAILORED
SYSTEM OPERATIONS PROCEDURES.
.B3
1.3.2.1##^&^THE ^OPERATOR'S ^NOTEBOOK\&#-#^THE
^OPERATOR'S ^NOTEBOOK IS THE MOST PRACTICAL MEANS FOR SHIFT-TO-SHIFT
COMMUNICATIONS AMONG SYSTEM OPERATORS, AND BETWEEN AN OPERATOR
AND THE SYSTEM SUPERVISOR. ^ORAL MESSAGES ARE QUICKLY FORGOTTEN,
LOOSE NOTES ARE OFTEN LOST; ONLY THE ^OPERATOR'S ^NOTEBOOK PROVIDES
A PERMANENT AND CENTRALIZED MESSAGE CENTER FOR EFFICIENT SYSTEM OPERATIONS.
.B
^YOU SHOULD READ THE TURNOVER ENTRIES AS YOU BEGIN YOUR
SHIFT. ^ENTRIES WILL INCLUDE SCHEDULED SYSTEM DOWNTIME,
NEW SOFTWARE TO TRY, PROBLEMS ENCOUNTERED ON PREVIOUS SHIFTS,
WARNINGS ON POTENTIAL INTERMITTENT MALFUNCTIONS, AND SPECIFIC INSTRUCTIONS
FOR WORK TO BE PROCESSED ON YOUR SHIFT.
.B
^AT THE END OF YOUR SHIFT, YOU SHOULD ENTER THE SAME TYPE OF INFORMATION
AS IT APPLIES TO THE NEXT SHIFT OPERATOR. ^IF YOU ARE A NON-PRIME
SHIFT OPERATOR, YOU CAN COMMUNICATE WITH THE SYSTEM
MANAGER VIA THE ^OPERATOR'S ^NOTEBOOK.
.B3
1.3.2.2##^&^THE ^SYSTEM ^LOGBOOK\&#-#^THE
^SYSTEM ^LOGBOOK IS ANOTHER IMPORTANT PIECE OF DOCUMENTATION. ^IT
IS THE PRIME SOURCE OF INFORMATION ABOUT THE SYSTEM AND IS REFERRED TO 
AND USED BY OPERATORS, SYSTEM PROGRAMMERS, SYSTEM MANAGERS, SOFTWARE
SUPPORT PERSONNEL, AND FIELD SERVICE ENGINEERS.
.B
^ENTRIES INCLUDE ALL MONITOR LOADS AND RELOADS, WITH REASON FOR
RELOADING; ALL HARDWARE AND SOFTWARE PROBLEMS WITH
SYMPTOMS AND DEVICE IDENTIFICATION; AND, SYSTEM SHUTDOWNS. ^FOR
EASE IN IDENTIFYING THE ITEMS, YOU CAN FOLLOW THE CONVENTION OF
ENTERING HARDWARE ENTRIES ON THE LEFT-HAND PAGES AND SOFTWARE ENTRIES ON THE
RIGHT-HAND PAGES. ^WHATEVER THE FORMAT OF THE ENTRIES, IT IS 
MOST IMPORTANT THAT YOU CHECK THIS LOG WHEN YOU REPORT FOR WORK AND
THAT YOU KEEP IT UPDATED THROUGHOUT YOUR SHIFT.
.F;.J;.B3
1.3.2.3##^&^TAILORED ^OPERATION ^PROCEDURES\&#-#^YOUR
INSTALLATION MAY WANT TO GENERATE A TAILORED SET OF OPERATING
PROCEDURES BASED UPON YOUR SPECIFIC HARDWARE CONFIGURATION AND THE
SOFTWARE THAT IS ACTUALLY IN USE. ^SECTIONS CAN BE SET UP FOR
YOUR DAILY, WEEKLY, MONTHLY AND OTHER SCHEDULED TASKS. ^A
CUSTOMIZED OPERATOR'S GUIDE SUCH AS THIS WOULD PROVIDE YOU WITH
A COMPACT, EASILY REFERENCED RUN BOOK AND WOULD BE USEFUL IN THE
TRAINING OF NEW OPERATORS.
.HL2 ^&^SUPPLIED \BY YOU\&
\\^IN ADDITION TO THE ENTRIES THAT YOU GENERATE IN THE ^OPERATOR'S
^NOTEBOOK AND ^SYSTEM ^LOGBOOK, YOU SHOULD RETAIN AND FILE THE
SYSTEM CONSOLE (^^CTY\\) OUTPUT OR LOG. ^THIS CHRONOLOGICAL RECORD
OF SYSTEM EVENTS CAN BE VERY USEFUL IN TRACKING DOWN HIGHLY
INTERMITTENT SYSTEM PROBLEMS.
.B
^WHENEVER THE SYSTEM ABNORMALLY TERMINATES, YOU SHOULD USE ONE OF THE
MEMORY DUMP PROGRAMS TO CREATE A HARDCOPY RECORD OF THE
ERROR CONDITIONS. ^THIS INFORMATION WILL BE REQUIRED BY
SOFTWARE SUPPORT PERSONNEL OR FIELD SERVICE ENGINEERS
WHEN THEY TROUBLESHOOT THE PROBLEM.
.NUMBER CHAPTER 2
.CHAPTER ^&SYSTEM COMPONENTS\&
\\^TO UNDERSTAND THE SYSTEM
TASKS THAT YOU WILL BE PERFORMING, YOU SHOULD
BE FAMILIAR WITH BOTH THE HARDWARE AND SOFTWARE COMPONENTS OF THE
^^DEC\\SYSTEM-10. ^THIS CHAPTER PROVIDES BRIEF DESCRIPTIONS
OF THE HARDWARE DEVICES THAT YOU WILL BE OPERATING AND THE
SOFTWARE PROGRAMS THAT YOU AND OTHER SYSTEM USERS WILL BE RUNNING.
.HL1 ^&DECSYSTEM-10 HARDWARE\&
\\^THE ^^DEC\\SYSTEM-10 HARDWARE THAT YOU WILL BE OPERATING FALLS INTO
FIVE GENERAL CATEGORIES: CENTRAL PROCESSORS, MEMORY SYSTEMS,
FRONT-END PROCESSORS, PERIPHERALS, AND REMOTE STATIONS.
.HL2 ^&^CENTRAL PROCESSORS\&
\\^THE ^^KL\\10^A CENTRAL PROCESSOR, USED IN THE ^^DEC\\SYSTEMS
1080 AND 1088, HAS A MICROCODED INSTRUCTION SET OF 386 INSTRUCTIONS,
A HIGH SPEED 2^K CACHE MEMORY, EIGHT SETS OF SIXTEEN FAST INTEGRATED-CIRCUIT
GENERAL PURPOSE REGISTERS, VIRTUAL MEMORY CAPABILITY, AND A
^^PDP\\-11 BASED ^CONSOLE/^DIAGNOSTIC PROCESSOR WITH A 
30-CHARACTER-PER-SECOND CONSOLE TERMINAL. ^THIS CONSOLE TERMINAL ALLOWS THE
SYSTEM OPERATOR TO COMMUNICATE WITH THE CENTRAL PROCESSOR AS WELL
AS WITH THE ^CONSOLE/^DIAGNOSTIC PROCESSOR.
.B
^THE ^^KL10B\\ CENTRAL PROCESSOR, USED IN THE HIGH-PERFORMANCE
^^DEC\\SYSTEMS 1090 AND 1099, OFFERS THE SAME FEATURES AND FUNCTIONS AS THE
^^KL\\10^A PLUS THE FOLLOWING:
.LS;.LE;^UP TO FIVE INTEGRATED HIGH-SPEED DATA CHANNELS (^^RH\\20'S).
.LE;^UP TO THREE INTEGRATED COMMUNICATIONS PROCESSOR CHANNELS (^^DTE\\20'S).
^A FOURTH ^^DTE\\20 IS USED TO INTERFACE THE ^CONSOLE/^DIAGNOSTIC PROCESSOR.
.ELS
.HL2 ^&^MEMORY SYSTEMS\&
\\^CORE MEMORY, ON THE ^^DEC\\SYSTEMS 1080, 1088, 1090, AND 1099,
CONSISTS OF COMBINATIONS OF 32^K, 64^K, 128^K AND 
256^K WORD MODULES. ^UP TO 16 MEMORY MODULES MAY BE ATTACHED
TO A SYSTEM PROVIDING A MAXIMUM OF 4,096^K 36-BIT WORDS OF DIRECTLY
ADDRESSABLE STORAGE.
.B
^THE STORAGE MODULE CAPACITIES FOR THE VARIOUS STORAGE SYSTEMS
ARE: 32^K AND 64^K WORDS FOR THE ^^MF10, 64K\\ AND 128^K WORDS FOR
THE ^^MG\\10, AND 128^K AND 256^K WORDS FOR THE ^^MH\\10. ^EACH
^^MF\\10 MEMORY MODULE CONTAINS UP TO FOUR MEMORY PORTS WHILE
EACH ^^MG\\10 AND ^^MH\\10 MEMORY MODULE CONTAINS UP TO EIGHT
MEMORY PORTS. ^EACH PORT CAN BE FURTHER EXPANDED THROUGH
THE USE OF THE ^^MX\\10 MEMORY MULTIPLEXER.
.HL2 ^&^FRONT-^END PROCESSORS\&
\\^THE ^^PDP\\-11 BASED ^CONSOLE/^DIAGNOSTIC PROCESSOR, DISCUSSED AS PART OF THE CENTRAL
PROCESSOR, IS ALSO REFERRED TO AS A CONSOLE FRONT END.
^IT PROVIDES THE MEANS FOR THE SYSTEM OPERATOR TO COMMUNICATE
WITH THE CENTRAL PROCESSOR.
.B
^ADDITIONAL ^^PDP\\-11 BASED FRONT-END PROCESSORS, REFERRED TO AS COMMUNICATIONS
FRONT ENDS, CAN BE ATTACHED TO THE ^^KL10B\\ PROCESSOR VIA THE INTEGRATED ^^DTE\\20
INTERFACE OR ^^DL\\10 DATA CHANNEL. ^ON THE ^^KL10A\\ THEY ARE ATTACHED
VIA THE ^^DL\\10. ^COMMUNICATIONS
FRONT ENDS PROVIDE THE FACILITIES FOR SUPPORTING INTERACTIVE
TERMINALS AND UNIT RECORD REMOTE STATIONS. ^THEY CAN BE ATTACHED
LOCALLY VIA DIRECT ELECTRICAL CONNECTIONS OR REMOTELY VIA
DEDICATED OR DIAL-UP TELEPHONE LINES. ^A ^^DC\\76 FRONT END,
FOR EXAMPLE, PROVIDES ASYNCHRONOUS LINE PROTOCOL TO SUPPORT TERMINALS
SUCH AS THE ^^LA\\ SERIES ^^DEC\\WRITERS, ^^LT\\ SERIES ^TELETYPES,
AND THE ^^VT\\ SERIES VIDEO TERMINALS.
.B
^THE ^^DC\\75^^NP\\ AND ^^DN\\85 FRONT ENDS PROVIDE SYNCHRONOUS
LINE PROTOCOL TO SUPPORT REMOTE STATIONS SUCH AS THE
^^DC72NP\\, THE ^^DAS\\80 SERIES, AND THE ^^DAS\\92.
^THEY ATTACH TO THE PROCESSORS VIA THE ^^DL\\10.
.B
^THE ^^DN\\87 AND ^^DN87S\\ FRONT ENDS PROVIDE BOTH SYNCHRONOUS
AND/OR ASYNCHRONOUS PROTOCOL, DEPENDING UPON THE LINE OPTIONS SELECTED.
^THE ^^DN\\87 ATTACHES TO THE ^^KL\\10^A AND ^^KL10B\\ 
VIA THE ^^DL\\10 COMMUNICATION CHANNEL.
^THE ^^DN87S\\ ATTACHES TO THE ^^KL10B\\ VIA THE
INTEGRATED ^^DTE\\20 INTERFACE.
.HL2 ^&^PERIPHERALS\&
\\^PERIPHERAL EQUIPMENT, SUPPORTED BY THE ^^DEC\\SYSTEMS 1080,
1088, 1090, AND 1099, CONSISTS OF UNIT RECORD, MAGNETIC DISK, AND MAGNETIC
TAPE DEVICES.
.B3
2.1.4.1##^&^LINE ^PRINTER\&#-#^THE
FOLLOWING LINE PRINTERS ARE AVAILABLE:
.LS;.LE;^THE ^^LP\\10-^F IMPACT PRINTER WITH A 64-CHARACTER
PRINT SET, DUAL SPEED OF 1250/925 LINES PER MINUTE, OPTICAL VERTICAL
FORMAT CONTROL USING 12-CHANNEL TAPE, AND A QUICK-CHANGE PRINT CHARACTER DRUM.
.LE;^THE ^^LP\\10-^H IMPACT PRINTER WITH A 96-CHARACTER
PRINT SET, DUAL SPEED OF 925/675 LINES PER MINUTE, OPTICAL
VERTICAL FORMAT CONTROL USING 12-CHANNEL TAPE, AND A QUICK-CHANGE
PRINT CHARACTER DRUM.
.LE;^THE ^^LP\\07 IMPACT PRINTER WITH A QUICK-CHANGE,
DUAL CHARACTER SET ^CHARABAND(^R) (64/96 CHARACTERS), DUAL SPEED OF
.FN 2
.B
------------------
.BR
(^R)#^CHARABAND IS A REGISTERED TRADEMARK OF THE ^DATAPRODUCTS ^CORPORATION
.END FOOTNOTE
1200/900 LINES PER MINUTE, AND ^DIRECT ^ACCESS ^VERTICAL ^FORMAT ^UNIT.
.LE;^THE ^^LA\\180 IMPACT (7 X 7 DOT MATRIX) PRINTER
WITH A 128-PRINT-CHARACTER SET, AND A PRINT SPEED OF 180 CHARACTERS PER SECOND
RESULTING IN 60-400 LINES PER MINUTE.
.ELS
.B3
2.1.4.2##^&^CARD ^READERS/^PUNCHES\&#-#^THE
FOLLOWING CARD READERS AND PUNCHES ARE AVAILABLE:
.LS;.LE;^THE ^^CR\\10-^D TABLE MODEL CARD READER PROCESSING
1000 CARDS PER MINUTE.
.LE;^THE ^^CR\\10-^E CONSOLE CARD READER PROCESSING 1200 CARDS PER MINUTE.
.LE;^THE ^^CR\\10-^F TABLE MODEL CARD READER PROCESSING 300 CARDS
PER MINUTE.
.LE;^THE ^^CP10\\-^D CARD PUNCH PROCESSING 100 CARDS PER MINUTE.
.ELS
.B3
2.1.4.3##^&^^DEC\\TAPES\&#-#^THE
^^TU\\56 ^^DEC\\TAPE DRIVE IS A HIGH RELIABILITY, BI-DIRECTIONAL, 
RANDOM ACCESS, MAGNETIC TAPE STORAGE DEVICE AVAILABLE ON THE
^^DEC\\SYSTEM-10. ^EACH ^^TU\\56 IS A DUAL TAPE TRANSPORT, AND, UP TO
4 OF THE DUAL DRIVES CAN BE ATTACHED TO EACH ^^TD10\\-^C ^^DEC\\TAPE
CONTROLLER.
.B3
2.1.4.4##^&^DISK ^SYSTEMS\&#-#^THERE
ARE FIVE DISK SYSTEMS AVAILABLE ON THE ^^DEC\\SYSTEM-10:
THE ^^RHS\\04 FIXED-HEAD SWAPPING SYSTEM, AND THE ^^RHP02, RHP03, ^^RHP\\04, AND
^^RHP06\\ REMOVABLE DISK PACK SYSTEMS.
.B
^THE ^^RHS04\\ IS A FAST ACCESS, HIGH TRANSFER RATE,
SWAPPING SYSTEM AND IS USED VERY EFFECTIVELY IN IMPLEMENTING THE VIRTUAL MEMORY
OPTION IN WHICH PAGES (512 WORDS) OF MEMORY ARE SWAPPED BETWEEN CORE AND SECONDARY
STORAGE (^^RHS\\04). ^PAGE SWAPPING CAN TAKE PLACE DIRECTLY BETWEEN
ONE PART OF CORE AND SECONDARY STORAGE CONCURRENTLY WITH PROGRAM EXECUTION
IN ANOTHER PART OF CORE.
.B
^THE ^^RHP02,\\ ^^RHP\\03, ^^RHP04\\, AND ^^RHP06\\ DISK SYSTEMS OFFER STORAGE
CAPACITIES OF 5.12, 10.24, 20.48, AND 40.96 MILLION WORDS PER DRIVE, RESPECTIVELY.
^THE ^^RHP04\\ AND ^^RHP\\06 DISK SYSTEMS ARE EACH AVAILABLE WITH A
DUAL-PORT OPTION. ^THIS OPTION ALLOWS A DISK DRIVE TO BE ACCESSED OVER
EITHER OF TWO PATHS OR BOTH CONCURRENTLY. ^IN THE ^^KL\\ SERIES PROCESSORS, FOR EXAMPLE,
ONE DUAL-PORTED DISK DRIVE CAN CONTAIN FILES TO BE ACCESSED BY BOTH
THE MAIN PROCESSOR AND THE CONSOLE FRONT-END PROCESSOR.
^IF BOTH PORTS ARE CONNECTED TO THE MAIN PROCESSOR, THE OPERATING SYSTEM
CAN MAXIMIZE ^I/^O THROUGHPUT BY STARTING SIMULTANEOUS DATA TRANSFERS
ON TWO CHANNELS, CONCURRENTLY.
.B3
2.1.4.5##^&^MAGNETIC ^TAPES\&#-#^THE
FOLLOWING MAGNETIC TAPE SYSTEMS AND DRIVES ARE SUPPORTED:
.LS;.LE;^THE ^^TU10A-E\\ 9-TRACK AND ^^TU10A-F\\ 7-TRACK
DRIVES WITH A RECORDING DENSITY OF 200, 556, AND 800 BITS PER INCH
AND A TAPE SPEED OF 45 INCHES PER SECOND.
.LE;^THE ^^TU\\16 9-TRACK SUBSYSTEM WITH RECORDING DENSITIES OF 800 AND 
1600 BITS PER INCH AND A TAPE SPEED OF 45 INCHES PER SECOND.
.LE;^THE ^^TU40\\ 9-TRACK AND ^^TU41\\ 7-TRACK DRIVES WITH RECORDING DENSITIES OF 200, 556, AND 800
BITS PER INCH AND TAPE SPEEDS OF 150 INCHES PER SECOND.
.LE;^THE ^^TU45\\ 9-TRACK DRIVE WITH RECORDING  DENSITIES OF 800 AND 1600 BITS PER INCH
AND TAPE SPEED OF 75 INCHES PER SECOND.
.LE;^THE ^^TU\\70 9-TRACK TAPE DRIVE WITH RECORDING DENSITIES OF 800 AND 1600 BITS PER
INCH AND TAPE SPEED OF 200 INCHES PER SECOND.
.LE;^THE ^^TU\\71 7-TRACK TAPE DRIVE WITH RECORDING DENSITIES OF 200, 556, AND 800
BITS PER INCH AND TAPE SPEED OF 200 INCHES PER SECOND.
.LE;^THE ^^TU\\72 9-TRACK TAPE DRIVE WITH RECORDING DENSITIES OF 1600 AND 6250 (NOMINAL)
BITS PER INCH RECORDING DENSITY AND TAPE SPEED OF 125 INCHES PER SECOND.
.ELS
.B3
2.1.4.6##^&^PLOTTER\&#-#^THE
^^DEC\\SYSTEM-10 SUPPORTS THE FOLLOWING PLOTTERS:
.LS;.LE;^THE ^^XY10-^A\\ (^^CALCOMP\\ ^MODEL 565) PLOTTER
WITH .01 INCH, .005 INCH, OR .1 MILLIMETER STEP SIZE AT
18,000 STEPS PER MINUTE, AND USING 12-INCH-WIDE PAPER.
.LE;^THE ^^XY10-B\\ (^^CALCOMP\\ ^MODEL 563) PLOTTER WITH .01
INCH STEP SIZE AT 12,000 STEPS PER MINUTE OR .005 INCH OR .1
MILLIMETER STEP SIZE AT 18,000 STEPS PER MINUTE, AND USING
31-INCH-WIDE PAPER.
.ELS
.HL2 ^&^TERMINALS AND ^REMOTE ^STATIONS\&
\\^THE ^^DEC\\SYSTEM-10 SUPPORTS HARDCOPY TERMINALS, ^^CRT\\ DISPLAY
TERMINALS, AND REMOTE STATIONS COMPRISED OF UNIT-RECORD EQUIPMENT
AS WELL AS REMOTE TERMINALS.
.B3
2.1.5.1##^&^HARDCOPY ^TERMINALS\&#-#^THE
FOLLOWING HARDCOPY TERMINALS ARE SUPPORTED IN BOTH LOCAL AND
REMOTE MODES:
.LS;.LE;^THE ^^LA\\36 ^^DEC\\WRITER ^^II\\, AN IMPACT TELEPRINTER
WITH A 96-CHARACTER PRINT SET, 10/15/30 CHARACTER-PER-SECOND PRINT
SPEED AND INPUT KEYBOARD.
.LE;^THE ^^LA35RO\\ ^^DEC\\WRITER, A RECEIVE-ONLY TERMINAL
AND BASICALLY AN ^^LA\\36 WITHOUT A KEYBOARD.
.LE;^THE ^^LA37APL\\ ^^DEC\\WRITER, AN ^^LA\\36
WITH DUAL ^^APL/ASCII\\ CHARACTER SET. ^IT PROVIDES THE USER WITH THE
CHOICE OF FULL ^^APL\\, FULL UPPER/LOWER CASE ^^ASCII\\, OR
UPPER CASE ^^TTY\\ ALL IN ONE TERMINAL.
.LE;^THE ^^LA\\180 ^^DEC\\PRINTER ^I, A 7X7 DOT MATRIX IMPACT PRINTER
WITH A 128-CHARACTER PRINT SET AND A SPEED OF 180 CHARACTERS PER SECOND.
.ELS
.B3
2.1.5.2##^&^^CRT\\ ^DISPLAY ^TERMINALS\&#-#^THE
FOLLOWING ^^CRT\\ DISPLAY TERMINALS ARE SUPPORTED IN BOTH LOCAL
AND REMOTE MODES:
.LS;.LE;^THE ^^VT\\50 AND ^^VT50H\\ VIDEO TERMINALS, PROVIDING
A SCREEN FORMAT OF 12 LINES AT 80 CHARACTERS PER LINE WITH A 5#X#7
DOT MATRIX OF 64 CHARACTERS.
.LE;^THE ^^VT\\52 VIDEO TERMINAL, PROVIDING A SCREEN FORMAT OF 24 LINES AT
80 CHARACTERS PER LINE WITH A 7#X#7 DOT MATRIX OF 96 CHARACTERS.
.LE;^THE ^^VT\\61 VIDEO TERMINAL, PROVIDING A SCREEN FORMAT
 24 LINES AT 80 CHARACTERS PER LINE WITH A 7#X#8 DOT MATRIX OF 128
CHARACTERS. ^THE ^^VT\\61 HAS A MORE POWERFUL MICROPROCESSOR 
THAN THE ^^VT\\50 SERIES AND CAN OFFER MORE STAND-ALONE CAPABILITIES
IN THE AREA OF TEXT EDITING.
.ELS
.B3
2.1.5.3##^&^REMOTE ^STATIONS\&#-#^THE
FOLLOWING DEVICES ARE SUPPORTED AS REMOTE STATIONS:
.LS;.LE;^THE ^^DC\\72 REMOTE STATION, WITH PERIPHERALS SUCH AS
CARD READER, LINE PRINTER, AND HARDCOPY AND DISPLAY TERMINALS.
.LE;^THE ^^DN\\80 SERIES REMOTE STATIONS THAT CAN PROVIDE REMOTE JOB
ENTRY FACILITIES (^^DN\\80), REMOTE TERMINAL FACILITIES (^^DN\\81),
OR A COMBINATION OF BOTH (^^DN\\82).
.LE;^THE ^^DAS\\92 REMOTE STATION, WHICH CAN BE CONFIGURED
IN COMBINATIONS OF TERMINAL LINES AND A CARD READER AND/OR A LINE
PRINTER.
.ELS
.HL1 ^&DECSYSTEM-10 SOFTWARE\&
\\^THE ^^DEC\\SYSTEM-10 SOFTWARE THAT YOU MUST BE FAMILIAR WITH FALLS
INTO THREE GENERAL CATEGORIES: OPERATING SYSTEMS,
LANGUAGES, AND UTILITIES.
.HL2 ^&^OPERATING SYSTEMS\&
\\^THE MAIN OPERATING SYSTEM FOR THE ^^DEC\\SYSTEM-10 IS CALLED THE
^^TOPS\\-10 ^MONITOR. ^IT SUPPORTS TIME-SHARING, BATCH PROCESSING,
REAL-TIME, AND REMOTE COMMUNICATIONS.
.B
^THE FRONT-END OPERATING SYSTEM RUNS IN THE ^CONSOLE/^DIAGNOSTIC
PROCESSOR AND AIDS THE CENTRAL PROCESSOR AND ^^TOPS\\-10 IN HANDLING
SYSTEM TASKS SUCH AS SYSTEM LOADING, CONSOLE COMMUNICATIONS, AND
DIAGNOSTIC FUNCTIONS. ^THE FRONT-END OPERATING SYSTEM IS CALLED
^^RSX-20F\\.
.HL2 ^&^LANGUAGES\&
\\^THE ^^DEC\\SYSTEM-10 SUPPORTS THREE TYPES OF TRANSLATORS USED IN
SYMBOLIC LANGUAGE PROGRAMMING: ASSEMBLERS, COMPILERS, AND INTERPRETERS.
.B3
2.2.2.1##^&^^MACRO\\ ^ASSEMBLER\&#-#^^MACRO\\
IS THE SYMBOLIC ASSEMBLY PROGRAM USED ON THE
^^DEC\\SYSTEM-10. ^IT IS DEVICE-INDEPENDENT; INPUT AND OUTPUT DEVICES
CAN BE SELECTED AT RUN TIME AND MAY VARY FROM RUN TO RUN. ^^MACRO\\
ALSO CONTAINS POWERFUL MACRO CAPABILITIES THAT ALLOW THE USER TO
REPLACE COMMONLY USED SEQUENCES OF INSTRUCTIONS WITH A SINGLE
STATEMENT.
.B3
2.2.2.2##^&^COMPILERS\&#-#^THE
^^ALGO\\RITHMIC ^LANGUAGE, ^^ALGOL\\, IS A SCIENTIFIC
LANGUAGE DESIGNED FOR THE SOLUTION OF COMPUTATIONAL PROCESSES, OR
ALGORITHMS. ^THE ^^DEC\\SYSTEM-10 ^^ALGOL\\ IS COMPOSED OF THE
^^ALGOL\\ COMPILER FOR THE TRANSLATION OF THE SOURCE CODE AND
THE ^^ALGOL\\ OBJECT-TIME SYSTEM THAT PROVIDES ^I/^O
SERVICES, A LIBRARY OF MATHEMATICAL FUNCTIONS, AND CONTROL OF
SYSTEM RESOURCES.
.B
^THE ^^CO\\MMON ^BUSINESS ^ORIENTED ^LANGUAGE, ^^COBOL\\, IS AN
INDUSTRY-WIDE DATA PROCESSING LANGUAGE DESIGNED FOR BUSINESS
APPLICATIONS. ^^COBOL\\ PROGRAMS ARE WRITTEN IN TERMS THAT ARE
FAMILIAR TO THE BUSINESS USER. ^THE ^ENGLISH-LIKE STATEMENTS
ARE EASILY LEARNED AND RESULT IN PROGRAMS THAT ARE SELF-DOCUMENTING.
^^DEC\\SYSTEM-10 ^^COBOL\\ INCLUDES THE ^^COBOL\\ COMPILER; AN OBJECT
TIME SYSTEM, ^^LIBOL\\; A SOURCE LIBRARY MAINTENANCE PROGRAM;
A ^^COBOL\\ CHECKOUT AND DEBUGGING PROGRAM, ^^COBDDT\\; AND
OTHER ANCILLARY PROGRAMS.
.B
^THE ^^FOR\\MULA ^^TRAN\\SLATOR LANGUAGE, ^^FORTRAN\\, IS A WIDELY
USED, PROCEDURE-ORIENTED LANGUAGE DESIGNED FOR SOLVING SCIENTIFIC-TYPE
PROBLEMS. ^IT HAS, HOWEVER, FOUND EXTENSIVE USE THROUGHOUT
THE DATA PROCESSING INDUSTRY AND ESPECIALLY IN THE UNIVERSITIES
AND IN TIMESHARING UTILITIES. ^^DEC\\SYSTEM-10 ^^FORTRAN\\-10
INCLUDES THE ^^FORTRAN\\-10 COMPILER; AN OBJECT-TIME SYSTEM,
^^FOROTS\\; AND A ^^FORTRAN\\ CHECKOUT AND DEBUGGING PROGRAM, ^^FORDDT\\.
.B3
2.2.2.3##^&^INTERPRETERS\&#-#^THE
^ALGEBRAIC ^INTERPRETIVE ^DIALOGUE, ^^AID\\, IS THE ^^DEC\\SYSTEM-10
ADAPTATION OF ^^JOSS\\, A PROGRAM DEVELOPED BY THE ^^RAND\\
^CORPORATION. ^COMMANDS TO ^^AID\\ ARE ENTERED VIA THE USER'S TERMINAL
AS IMPERATIVE ^ENGLISH SENTENCES AND CAN BE EXECUTED IMMEDIATELY
OR STORED AS PART OF A ROUTINE TO BE EXECUTED LATER.
.B
^^APL\\ (^A ^PROGRAMMING ^LANGUAGE) IS A COMPLETELY 
CONVERSATIONAL SYSTEM ESPECIALLY SUITED FOR DEALING WITH
NUMERIC AND CHARACTER ARRAY-STRUCTURED DATA. ^HOWEVER, IT IS INTENDED
FOR USE AS A GENERAL DATA PROCESSING LANGUAGE AS WELL A MATHEMATICIAN'S
TOOL.
.B
^THE ^BEGINNER'S ^ALL-PURPOSE ^SYMBOLIC ^INSTRUCTION
^CODE, ^^BASIC\\, IS A PROBLEM-SOLVING LANGUAGE, EASY TO LEARN,
AND PARTICULARLY SUITED TO A TIME-SHARING ENVIRONMENT. ^^BASIC\\
CONTAINS ITS OWN EDITING FACILITIES; A SEPARATE SYSTEM EDITOR
IS NOT REQUIRED. ^ALTHOUGH ^^BASIC\\ PROVIDES A SUBSET OF ELEMENTARY
STATEMENTS FOR SIMPLE PROGRAMS, THE FULL LANGUAGE INCLUDES STATEMENTS
COVERING MATRIX COMPUTATIONS, ADVANCED STRING HANDLING CAPABILITIES,
MATHEMATICAL FUNCTIONS, AND THE GENERATION OF USER-DEFINED
FUNCTIONS.
.B
.HL2 ^&^UTILITIES AND OTHER SOFTWARE\&
\\^THE ^^DEC\\SYSTEM-10 PROVIDES MANY UTILITIES, AS WELL AS
TEXT EDITORS, TEXT PROCESSORS, FILE MANIPULATORS, MAINTENANCE PROGRAMS,
AND MONITOR SUPPORT PROGRAMS. ^SOME OF THE MORE IMPORTANT ONES ARE:
.B;.LM10;.TS10;.I-10
^^GALAXY\\	^A GROUP OF PROGRAMS THAT CAN CONTROL UP TO 127 BATCH JOBS
AS WELL AS CONTROLLING THE SYSTEM UNIT RECORD DEVICES.
.B;.I-10
^^BACKUP\\	^A SYSTEM PROGRAM TO SAVE DISK FILES ON MAGNETIC TAPE,
AND LATER TO RESTORE ANY OR ALL OF THE FILES BACK TO DISK.
.B;.I-10
^^TECO\\	^A CHARACTER-ORIENTED TEXT EDITOR WITH THE ABILITY
TO EDIT ANY SOURCE DOCUMENT WITHOUT REQUIRING SPECIAL FORMATTING.
.B;.I-10
^^SOUP\\	^A SET OF PROGRAMS TO FACILITATE THE UPDATING OF
SYSTEM OR USER PROGRAM SOURCE FILES.
.B;.I-10
^^DDT\\	^THE ^DYNAMIC ^DEBUGGING ^TECHNIQUE USED FOR THE ON-LINE
CHECKOUT AND UPDATING OF PROGRAMS.
.B;.I-10
^^PIP\\	^A FILE INTERCHANGE PROGRAM TO SELECTIVELY TRANSFER FILES
FROM ONE MEDIA TO ANOTHER AND CONCURRENTLY PERFORM LIMITED
EDITING AND DIRECTORY MANIPULATION.
.B;.I-10
^^RUNOFF\\	^A TEXT PROCESSING PROGRAM THAT PRODUCES A FINAL FORMATTED, PAGED,
RIGHT-JUSTIFIED OUTPUT FROM AN EDITED FILE WITH APPROPRIATE
^^RUNOFF\\ COMMANDS.
.B;.I-10
^^LINK\\-10	^A LINKING LOADER TO MERGE INDEPENDENTLY TRANSLATED
MODULES INTO ONE EXECUTABLE VERSION OF A USER'S PROGRAM.
.B;.I-10
^^OPSER\\	^A SERVICE PROGRAM FOR THE SYSTEM OPERATOR, 
ENABLING HIM TO CONTROL MULTIPLE JOBS FROM A SINGLE TERMINAL.
.B;.LM0
.PS67,70;.LM0;.RM70;.F;.J;.SP1
.NUMBER CHAPTER 3
.CH ^&STARTING THE SYSTEM\&\\
\\^BEFORE STARTING THE SYSTEM, YOU SHOULD FAMILIARIZE YOURSELF
WITH THE VARIOUS OPERATING SWITCHES, INDICATOR LIGHTS, AND
OTHER CONTROLS LOCATED ON THE CONSOLE PROCESSOR PANEL DIRECTLY BELOW THE
^^DEC\\TAPE DRIVE. ^BELOW THESE CONTROLS, ANOTHER PANEL CONTAINS
A ROW OF 30 SWITCHES AND ADDITIONAL INDICATOR LIGHTS. ^THE
SWITCHES THAT ARE NUMBERED FROM 0 THROUGH 17 COMPRISE THE
SWITCH REGISTER AND WILL BE USED DURING THE SYSTEM LOAD PROCEDURE.
^REFER TO ^FIGURE 3-1 IN THE FOLLOWING DESCRIPTIONS.
.B
^THE FOUR LOAD SWITCHES ARE LABELED ABOVE FROM LEFT
TO RIGHT AS ^^DISK, DECTAPE, SW/REG,\\ AND ^^ENABLE\\. ^THE PURPOSE
OF EACH IS GIVEN BELOW.
.B;.LM20;.TS21;.I-15
^^LOAD SWITCH	PURPOSE
.B;.TS20;.I-15
DISK\\	^LOAD THE SYSTEM FROM A DISK PACK (^SECTION 3.2.1)
.B;.I-15
^^DECTAPE	L\\OAD THE SYSTEM FROM ^^DEC\\TAPE (^SECTION 3.2.2)
.B;.I-15
^^SW/REG	L\\OAD THE SYSTEM ACCORDING TO THE CONTENTS OF
THE SWITCH REGISTER (^SECTION 3.2.3)
.B;.I-15
^^ENABLE	E\\NABLE LOADING VIA ANY LOAD SWITCH
.B;.LM0
^THERE ARE TWO POWER SWITCHES. ^THE BLACK SWITCH, LABELED ^^POWER
ON\\ ABOVE AND ^^POWER OFF\\ BELOW, IS THE SWITCH NORMALLY USED TO
SUPPLY OR CUT POWER TO THE SYSTEM. ^THE RED ^^EMERGENCY POWER
OFF\\ SWITCH SHOULD BE USED ONLY IN EMERGENCIES, SUCH AS A FIRE, WHERE
YOU MUST TURN OFF THE POWER AS QUICKLY AS POSSIBLE. ^AFTER
YOU PRESS THIS SWITCH, YOU MUST CALL YOUR FIELD SERVICE REPRESENTATIVE
TO RESTORE POWER.
.B
^THE SWITCH REGISTER CONTAINS 18 SWITCHES REPRESENTING BIT SETTINGS
OF 0 OR 1 AND NUMBERED 0-17 FROM RIGHT TO LEFT ACCORDING TO ^^PDP\\-11 CONVENTION. ^NOTE THAT THIS IS THE REVERSE
OF THE WAY THAT BITS ARE NUMBERED IN THE MAIN ^^PDP\\-10 PROCESSOR. ^THE INFORMATION
REPRESENTED BY THE SWITCH SETTINGS IS DESCRIBED IN ^TABLE 3-1
IN ^SECTION 3.2.3.
.B
^THE POWER LIGHT GLOWING RED INDICATES THAT POWER IS ON. ^IF THE
POWER LIGHT IS BLINKING, A FIELD SERVICE REPRESENTATIVE AT YOUR
SITE HAS SET ^^OVERRIDE\\. ^DO NOT RUN THE SYSTEM WITH ^^OVERRIDE\\
SET BECAUSE THE SYSTEM WILL NOT POWER DOWN FROM OVERHEATING.
.B
^THE FAULT LIGHT SHOULD NORMALLY BE OFF. ^IF IT GLOWS,
NOTIFY YOUR FIELD SERVICE REPRESENTATIVE.
^A GLOWING LIGHT INDICATES A MALFUNCTION SUCH AS OVERHEATING.
.PG
.FG50
.C
^FIGURE 3-1##^LOAD ^SWITCHES AND ^SWITCH ^REGISTER
.PG
^LOADING THE SYSTEM INVOLVES TURNING THE POWER ^^ON\\, LOADING
THE CONSOLE FRONT END WITH THE ^^RSX-20F\\ MONITOR, AND THEN
LOADING THE CENTRAL PROCESSOR WITH THE ^^TOPS-10\\ MONITOR.
.HL 1 ^&POWERING UP\&\\
\\^IN MOST CASES YOU SHOULD ONLY HAVE TO CHECK TO SEE THAT THE POWER
LIGHT TO THE RIGHT OF THE LOAD SWITCHES IS GLOWING RED.
^OTHERWISE, PRESS THE BLACK POWER SWITCH TO THE ^^POWER ON\\ POSITION.
.HL 1 ^&LOADING THE CONSOLE FRONT END (RSX-20F MONITOR)\&\\
\\^AFTER INITIALLY POWERING UP THE SYSTEM, OR, WHEN A COMPLETE
RELOAD IS INDICATED,
YOU HAVE A FEW ALTERNATIVES IN HOW YOU LOAD THE
CONSOLE FRONT-END PROCESSOR. ^YOU CAN DO A STANDARD LOAD
FROM A DISK PACK OR ^^DEC\\TAPE, OR YOU CAN LOAD USING THE
SWITCH REGISTER. ^IN MOST CASES, YOU WILL LOAD FROM A DISK PACK
BECAUSE IT IS MUCH FASTER THAN ^^DEC\\TAPE. ^HOWEVER, IF
HARDWARE PROBLEMS PREVENT LOADING FROM A DISK PACK,
OR IF YOUR SYSTEM MANAGER WANTS YOU TO USE SOFTWARE RESIDING
ON A ^^DEC\\TAPE, YOU MAY NEED TO LOAD THE SYSTEM USING THE
^^DEC\\TAPE DRIVE. ^ALSO, IF YOU NEED TO LOAD THE SYSTEM USING
SOME NON-STANDARD HARDWARE CONFIGURATIONS OR SPECIAL SOFTWARE,
YOU WILL HAVE TO USE THE SWITCH REGISTER. ^THE SWITCH REGISTER ALLOWS YOU TO LOAD
FROM ANY DISK PACK OR ^^DEC\\TAPE AND ALSO ENTER THE ^K^L INITIALIZATION
OPERATOR DIALOG (^^KLINIT\\). ^THE ^^KLINIT\\ DIALOG ALLOWS YOU TO
VERIFY THE MICROCODE, RECONFIGURE CACHE AND MAIN MEMORY, AND LOAD
A NON-DEFAULT BOOTSTRAP PROGRAM. ^THE
PROCEDURES FOR LOADING THE FRONT-END PROCESSOR VIA A DISK PACK,
A ^^DEC\\TAPE, OR THE SWITCH REGISTER ARE DESCRIBED IN THE NEXT
THREE SECTIONS.
.HL 2 ^&LOADING ^^RSX-20F\\ \\FROM ^DISK\\\&
\\^THIS IS THE MOST COMMON WAY TO LOAD THE CONSOLE FRONT END. ^IT
ASSUMES THAT THE SYSTEM POWER IS ^O^N, THAT ALL HARDWARE AND SOFTWARE
HAVE BEEN CORRECTLY INSTALLED, AND THAT THE DISK PACK HAS
BEEN MOUNTED PROPERLY. ^ALSO, THE DISK PACK CONTAINING BOTH THE
^^TOPS-10\\ MONITOR AND THE ^^RSX-20F\\ FRONT-END MONITOR
MUST BE ON A DUAL-PORTED DRIVE (CONTROLLER SELECT SWITCH POINTS TO
^A/^B), AND THE DRIVE MUST BE UNIT 0 WITH RESPECT TO BOTH THE
CENTRAL AND FRONT-END PROCESSORS.
.B
^THE OPERATION IS AS FOLLOWS:
.LS;.LE;^SET THE ^^ENABLE/DISABLE\\ LOAD SWITCH TO ^^ENABLE\\.
.B
^THIS WILL ENABLE THE OTHER THREE LOAD SWITCHES.
.LE;^PRESS THE ^^DISK\\ LOAD SWITCH.
.B
^THIS WILL CAUSE THE FRONT-END PROCESSOR TO ACCESS THE DISK ON
DRIVE 0 AND LOAD THE ^^RSX-20F\\ MONITOR. ^THE ^K^L INITIALIZATION
PROGRAM (^^KLINIT\\) IS LOADED AND, IN TURN, LOADS THE ^^KL\\10 MICROCODE. ^THE DEFAULT HARDWARE CONFIGURATIONS
OF CACHE AND EXTERNAL MEMORY ARE SET UP. ^THE BOOTSTRAP PROGRAM FOR
THE ^^TOPS-10\\ MONITOR IS THEN LOADED INTO THE CENTRAL PROCESSOR
AND STARTED. ^THE FOLLOWING IS AN EXAMPLE OF THE OUTPUT YOU WILL
RECEIVE ON THE CONSOLE TERMINAL.
.PG
.B;.LM14;.NF;.NJ
^^RSX-20F V006A 0:16 21-JUN-76
.B
[SY0: REDIRECTED TO DB0:]
[DB0: MOUNTED]
KLI -- VERSION V002Q RUNNING
KLI -- MICROCODE VERSION 131 LOADED
KLI -- ALL CACHES ENABLED
LOGICAL MEMORY CONFIGURATION:
.TS32
	CONTROLLER
.TS23,29,34,39,44,53
ADDRESS	SIZE	RQ0	RQ1	RQ2	RQ3	CONTYPE	INT
000000	512K	04	FOR	ALL		#DMA20	##4
KLI -- BOOTSTRAP LOADED AND STARTED\\
^^BOOTS V\\NN (NNN)
.B
^^BTS\\>
.B;.LM9;.F;.J
^THE FIRST LINE OF OUTPUT TELLS YOU THE VERSION AND THE CREATION
TIME AND DATE OF THE ^^RSX-20F\\ MONITOR THAT WAS JUST LOADED INTO THE FRONT END. ^THE
NEXT TWO LINES TELL YOU THAT ^D^B0: (THE DISK PACK ON DRIVE 0)
IS THE SYSTEM DEVICE (^S^Y0:) FOR THE FRONT END TASKS. ^THE NEXT
EIGHT LINES ARE OUTPUT BY THE ^K^L INITIALIZATION PROGRAM. ^THEY DOCUMENT THE VERSION OF ^^KLINIT\\ THAT IS RUNNING, AND
TELL YOU THAT THE ^^KL\\10 MICROCODE WAS SUCCESSFULLY LOADED,
THE CACHE WAS ENABLED, EXTERNAL MEMORY WAS CONFIGURED, AND THAT
THE BOOTSTRAP PROGRAM FOR THE ^^TOPS-10\\ MONITOR WAS LOADED
AND STARTED. ^THE NEXT TWO LINES ARE THE BOOTSTRAP PROGRAM'S VERSION
NUMBER AND PROMPT.
^IF AN ERROR OCCURS DURING THE ^K^L INITIALIZATION PROGRAM, YOU
WILL RECEIVE AN ERROR MESSAGE PRECEDED BY "^K^L^I --#?"
AND YOU WILL BE PLACED IN THE ^^KLINIT\\ DIALOG MODE DESCRIBED
IN ^APPENDIX ^C.
.ELS
.HL 2 ^&LOADING ^^RSX-20F\\ \\FROM ^^DEC\\TAPE\&\\
\\^THIS METHOD OF LOADING THE CONSOLE FRONT END SHOULD BE USED IF
YOU CANNOT LOAD FROM A DISK PACK, OR IF YOU NEED A PARTICULAR VERSION
OF SOFTWARE THAT IS ONLY ON ^^DEC\\TAPE. ^IT ASSUMES THAT THE SYSTEM
POWER IS ^O^N, THAT THE PROPER SOFTWARE EXISTS ON ^^DEC\\TAPE
AND THAT THE ^^DEC\\TAPE IS MOUNTED CORRECTLY ON UNIT 0. ^BE SURE
TO LEAVE THE ^^DEC\\TAPE MOUNTED WHILE THE SYSTEM IS RUNNING.
.B
^THE OPERATION IS AS FOLLOWS:
.LS;.LE;^SET THE ^^ENABLE/DISABLE\\ LOAD SWITCH TO ^^ENABLE\\.
.B
^THIS WILL ENABLE THE OTHER THREE LOAD SWITCHES.
.LE;^PRESS THE ^^DECTAPE\\ LOAD SWITCH.
.B;.PS69,70
^THIS WILL CAUSE THE FRONT-END PROCESSOR TO ACCESS THE ^^DEC\\TAPE
RIVE 0 AND LOAD THE ^^RSX-20F\\ MONITOR. ^THE ^K^L INITIALIZATION
PROGRAM (^^KLINIT\\) IS LOADED AND, IN TURN, LOADS THE ^^KL\\10 MICROCODE. ^THE DEFAULT HARDWARE CONFIGURATIONS OF
CACHE AND EXTERNAL MEMORY ARE SET UP. ^THE BOOTSTRAP PROGRAM FOR
THE ^^TOPS-10\\ MONITOR IS THEN LOADED INTO THE CENTRAL PROCESSOR
AND STARTED. ^THE FOLLOWING IS AN EXAMPLE OF THE OUTPUT YOU WILL
RECEIVE ON THE CONSOLE TERMINAL.
.B;.LM14;.NF;.NJ
^^RSX-20F V006A 0:16 21-JUN-76
.B
[SY0: REDIRECTED TO DT0:]
[DT0: MOUNTED]
KLI -- VERSION V002Q RUNNING
.PG
KLI -- MICROCODE VERSION 131 LOADED
KLI -- ALL CACHES ENABLED
LOGICAL MEMORY CONFIGURATION
.TS32
	CONTROLLER
.TS23,29,34,39,41,44,53
^^ADDRESS	SIZE	RQ0	RQ1	RQ2	RQ3	CONTYPE	INT
000000	512K	04	FOR	ALL		#DMA20	##4
KLI -- BOOTSTRAP LOADED AND STARTED\\
^^BOOTS V\\NN (NNN)
.B
^^BTS\\>
.B;.LM9;.F;.J
^THE FIRST LINE OF OUTPUT TELLS YOU THE VERSION AND THE CREATION TIME
AND DATE OF THE ^^RSX-20F\\ MONITOR THAT WAS JUST LOADED INTO THE FRONT END. ^THE NEXT TWO
LINES TELL YOU THAT ^D^T0: (THE ^^DEC\\TAPE ON UNIT 0) IS THE
SYSTEM DEVICE (^S^Y0:) FOR THE FRONT-END TASKS. ^THE NEXT EIGHT
LINES ARE OUTPUT BY THE ^K^L INITIALIZATION PROGRAM. ^THEY GIVE THE VERSION OF ^^KLINIT\\ THAT IS RUNNING, AND TELL
YOU THAT THE ^^KL10\\ MICROCODE WAS SUCCESSFULLY LOADED, THE
CACHE WAS ENABLED, EXTERNAL MEMORY WAS CONFIGURED, AND THAT THE
BOOTSTRAP PROGRAM FOR THE ^^TOPS-10\\ MONITOR WAS LOADED
AND STARTED. ^THE NEXT TWO LINES ARE THE BOOTSTRAP PROGRAM'S
VERSION NUMBER AND PROMPT.
^IF AN ERROR OCCURS DURING THE ^K^L INITIALIZATION PROGRAM, YOU
WILL RECEIVE AN ERROR MESSAGE PRECEDED BY "^^KLI#--#?\\" AND YOU WILL
BE PLACED IN THE ^^KLINIT\\ DIALOG MODE DESCRIBED IN ^APPENDIX ^C.
.ELS
.HL 2 ^&LOADING ^^RSX-20F\\ \\VIA \\THE ^SWITCH REGISTER\&\\
\\^YOU MUST LOAD THE CONSOLE FRONT END VIA THE SWITCH REGISTER
IF YOU NEED TO DO ANY OF THE FOLLOWING:
.LS;.LE;^ENABLE SPECIFIC CACHE OR CONFIGURE EXTERNAL MEMORY
YOURSELF INSTEAD OF USING THE DEFAULT CONFIGURATIONS.
.LE;^LOAD A ^^TOPS-10\\ BOOTSTRAP PROGRAM FROM A FILE WITH A NAME OTHER THAN
^^BOOT.EXB\\; FOR EXAMPLE, ^^BOOTM.EXB\\ CONTAINING ^^BOOTM\\ WHICH LOADS A MONITOR
FROM MAGNETIC TAPE.
.LE;^LOAD FROM A DISK PACK OR ^^DEC\\TAPE THAT IS NOT ON UNIT 0.
.ELS
^THE SOFTWARE FOR THE FRONT-END PROCESSOR MUST RESIDE ON A ^^DEC\\TAPE
OR DISK PACK CONNECTED TO THE FRONT END. ^IF BOTH THE FRONT-END
SOFTWARE AND THE SYSTEM MONITOR RESIDE ON THE SAME DISK PACK, THE PACK
MUST BE MOUNTED ON A DUAL-PORTED DRIVE AND THE CONTROLLER SELECT
SWITCH MUST BE SET TO ^A/^B.
.B;.PS69,70
^THE OPERATION IS AS FOLLOWS:
.LS;.LE;^SET THE ^^ENABLE/DISABLE\\ LOAD SWITCH TO ^^ENABLE\\.
.B
^THIS WILL ENABLE THE OTHER THREE LOAD SWITCHES.
.LE;^SET THE APPROPRIATE SWITCHES (OR BITS) IN THE SWITCH REGISTER.
.B
^SWITCH 0 IS MANDATORY WHEN LOADING VIA THE SWITCH REGISTER. ^SWITCHES
1 AND 2 MUST BE SET ON IF YOU INTEND TO USE THE ^K^L INITIALIZATION
DIALOG (^^KLINIT\\). ^IF ^^RSX-20F\\ RESIDES ON A DISK PACK,
SET SWITCH 7 ON; IF ^^RSX-20F\\ IS ON A ^^DEC\\TAPE, SWITCH 7 MUST
BE OFF. ^SWITCHES 8-10 MUST BE SET TO SPECIFY THE DRIVE NUMBER
OF THE DISK OR ^^DEC\\TAPE. ^FOR A DETAILED DESCRIPTION OF ALL
THE BIT SETTINGS IN THE SWITCH REGISTER, SEE ^TABLE 3-1.
.PG;.LM0;.PS67,70
.C
^TABLE 3-1
.C
^SWITCH ^REGISTER ^BIT ^DEFINITIONS
.B3
#17##16##15##14#########11##10#######8###7##6###########3###2###1###0#
.B2;.LM15;.RM68;.TS35;.I-13
^BIT	^MEANING
.B2;.TS15;.I-13
0	^IF THIS IS SET, THE REMAINING BITS ARE INTERPRETED. ^YOU
MUST SET THIS TO LOAD VIA THE SWITCH REGISTER.
.B;.I-13
2,1	^IF BOTH 1 AND 2 ARE SET, ^^RSX-20F\\ IS LOADED AND THE ^K^L INITIALIZATION OPERATOR DIALOG
(^^KLINIT\\) IS LOADED AND STARTED. ^THIS IS THE USUAL CASE WHEN
LOADING VIA THE SWITCH REGISTER.
.B
^IF ONLY ONE OF THE TWO IS SET, THE ^^RSX-20F\\ MONITOR IS LOADED; NO
COMMUNICATION IS INITIATED BETWEEN THE -10 AND -11 PROCESSORS AT THIS TIME.
.B
^IF BOTH 1 AND 2 ARE NOT SET, THE SYSTEM IS LOADED MUCH LIKE IT IS VIA
THE ^^DISK\\ OR ^^DECTAPE\\ LOAD SWITCH. ^HOWEVER, SINCE OTHER BITS
ARE INTERPRETED, YOU CAN SPECIFY THE UNIT NUMBER OF THE BOOTSTRAP
DEVICE IN BITS 8-10.
.B;.I-13
6-3	^CURRENTLY NOT USED, AND MUST NOT BE SET.
.B;.I-13
7	^IF THIS IS SET, THE BOOTSTRAP DEVICE IS A DISK PACK
ON A DUAL-PORTED DRIVE.
.B
^IF THIS IS NOT SET, THE BOOTSTRAP DEVICE IS A ^^DEC\\TAPE
DRIVE ON THE FRONT-END PROCESSOR.
.B;.I-13
10-8	^THESE THREE BITS ALLOW YOU TO SPECIFY THE UNIT NUMBER OF THE
BOOTSTRAP DEVICE (0 TO 7). ^NO BITS SET INDICATE UNIT 0; BITS
9 AND 8 SET INDICATE UNIT 3.
.B;.I-13
14-11	^CURRENTLY NOT USED, AND MUST NOT BE SET.
.B;.I-13
15	^THIS INDICATES THE ACTION TAKEN WHEN AN ^I/^O ERROR OCCURS
DURING THE BOOTSTRAPPING. ^IF THIS IS SET, THE OPERATION IS
RETRIED INDEFINITELY IF AN ERROR OCCURS. ^IF NOT SET (THE
NORMAL CASE), A HALT OCCURS AFTER TEN UNSUCCESSFUL RETRIES.
.B;.I-13
17,16	^NOT USED, AND MUST NOT BE SET.
.B2;.LM2
^BITS ARE SET WHEN THE CORRESPONDING SWITCH IS IN THE UPWARD POSITION.
.PS67,70
.PG
.B;.LM9;.RM70
.LE;^PRESS THE ^^SW/REG\\ LOAD SWITCH.
.B
^THIS WILL CAUSE THE FRONT-END PROCESSOR TO ACCESS THE DISK
DRIVE (SWITCH 7 SET ON) OR THE ^^DEC\\TAPE DRIVE (SWITCH 7 SET OFF)
WITH THE UNIT NUMBER AS SPECIFIED IN SWITCHES 8-10. ^THE ^K^L
INITIALIZATION PROGRAM (^^KLINIT\\) IS LOADED AND STARTED AND THE
DEFAULT HARDWARE CONFIGURATIONS OF CACHE AND EXTERNAL MEMORY
ARE SET UP. ^THE STANDARD BOOTSTRAP PROGRAM FOR THE ^^TOPS-10\\
MONITOR IS THEN LOADED INTO THE CENTRAL PROCESSOR AND STARTED.
.B
^THE FOLLOWING IS AN EXAMPLE OF THE OUTPUT YOU WILL RECEIVE ON
THE CONSOLE TERMINAL IF SWITCHES 0, 7, 8, AND 9 ARE SET ON.
.B;.LM14;.NF;.NJ
^^RSX-20F V006A 0:16 21-JUN-76
.B
[SY0: REDIRECTED TO DB3:]
[DB3: MOUNTED]
KLI -- VERSION V002Q RUNNING
KLI -- MICROCODE VERSION 131 LOADED
KLI -- ALL CACHES ENABLED
LOGICAL MEMORY CONFIGURATION:
.TS32
	CONTROLLER
.TS23,29,34,39,44,49,58
ADDRESS	SIZE	RQ0	RQ1	RQ2	RQ3	CONTYPE	INT
000000	512K	04	FOR	ALL		#DMA20	#4
KLI -- BOOTSTRAP LOADED AND STARTED\\
^^BOOTS V\\NN (NNN)
.B
^^BTS\\>
.B;.LM9;.F;.J
^THE FIRST LINE OF OUTPUT TELLS YOU THE VERSION AND THE CREATION
TIME AND DATE OF THE ^^RSX-20F\\ MONITOR THAT WAS JUST LOADED INTO THE FRONT END.
^THE NEXT TWO LINES TELL YOU THAT ^^DB3:\\ (THE DISK
ON UNIT 3) IS THE SYSTEM DEVICE (^S^Y0:) FOR THE FRONT END TASKS.
^IF BIT 7 HAD NOT BEEN SET, THE ^D^B3: WOULD HAVE BEEN ^D^T3: FOR A
^^DEC\\TAPE. ^THE NEXT EIGHT LINES ARE OUTPUT BY THE ^K^L INITIALIZATION
PROGRAM. ^THEY GIVE THE VERSION OF ^^KLINIT\\ THAT IS RUNNING, AND
TELL YOU THAT THE ^^KL10\\ MICROCODE WAS SUCCESSFULLY
LOADED, THE CACHE WAS ENABLED, EXTERNAL MEMORY WAS CONFIGURED, AND THAT
THE STANDARD BOOTSTRAP PROGRAM FOR THE ^^TOPS-10\\ MONITOR
WAS LOADED AND STARTED. ^THE NEXT TWO LINES ARE THE BOOTSTRAP PROGRAM'S
VERSION NUMBER AND PROMPT.
.B
^IF, IN THE PREVIOUS EXAMPLE, YOU HAD ALSO SET SWITCHES 1 AND 2
ON, THE CONSOLE OUTPUT WOULD HAVE BEEN AS FOLLOWS:
.B;.LM14;.NF;.NJ
^^RSX-20F V006A 0:16 21-JUN-76
.B
[SY0: REDIRECTED TO DB3:]
[DB3: MOUNTED]
KLI -- VERSION V002Q RUNNING
KLI -- ENTER DIALOG [NO,YES,EXIT,BOOT]?
KLI>\\
.B;.LM9;.F;.J
^SWITCHES 1 AND 2 SET ON SPECIFY THAT YOU WISH TO ENTER THE ^K^L
INITIALIZATION PROGRAM (^^KLINIT\\) OPERATOR DIALOG. ^^KLINIT\\
HAS JUST ASKED YOU THE FIRST QUESTION AND IS WAITING FOR AN ANSWER.
^WHEN YOU HAVE ANSWERED ALL THE APPLICABLE QUESTIONS, THE DIALOG WILL
END WITH THE BOOTSTRAP PROGRAM'S VERSION NUMBER AND PROMPT.
.B
^FOR A COMPLETE DESCRIPTION OF THE ^^KLINIT\\ DIALOG MESSAGES,
AND EXAMPLES, REFER TO ^APPENDIX ^C.
.ELS
.PG
.HL 1 ^&LOADING THE CENTRAL PROCESSOR (TOPS-10 MONITOR)\&\\
\\^WHEN THE FRONT-END PROCESSOR HAS BEEN LOADED USING ANY ONE OF THE
THREE METHODS DESCRIBED IN ^SECTION 3.2, THE SYSTEM INFORMS YOU:
.B;.I5
^^KLI -- BOOTSTRAP LOADED AND STARTED\\
.B
^THE ACTUAL BOOTSTRAP PROGRAM THAT HAS BEEN LOADED DEPENDS UPON THE
METHOD OF LOADING THE FRONT END.
.B
^IF YOU USED THE ^^DISK\\ LOAD, ^^DECTAPE\\ LOAD, OR THE ^^SW/REG\\
LOAD WITH SWITCHES 1 AND 2 OFF; YOU WILL HAVE LOADED THE
BOOTSTRAP PROGRAM FOUND IN THE FILE ^^BOOT.EXB. T\\HIS WOULD USUALLY
BE ^^BOOTS\\, A PROGRAM TO LOAD THE MONITOR FROM A DISK PACK.
.B
^IF YOU HAD USED THE ^^KLINIT\\ DIALOG TO SPECIFY A NON-DEFAULT
^^BOOT\\ FILE, YOU COULD HAVE LOADED A PROGRAM LIKE ^^BOOTM\\, WHICH
WILL LOAD THE MONITOR FROM MAGNETIC TAPE.
.B
^FOR DESCRIPTIONS OF THE VARIOUS BOOTSTRAP PROGRAMS, REFER TO THE
^SPECIFICATIONS SECTION OF THE ^SOFTWARE ^NOTEBOOKS.
.HL 2 ^&LOADING ^^TOPS-10\\ \\FROM ^DISK\&\\
\\^IN RESPONSE TO THE MESSAGE:
.B;.I5
^^KLI -- BOOTSTRAP LOADED AND STARTED\\
.B
YOU CAN PRESS THE CARRIAGE RETURN KEY AND LOAD THE DEFAULT MONITOR FROM
THE DISK FILE ^^SYSTEM.EXE\\ OR YOU CAN SPECIFY ANOTHER FILE SUCH AS:
.B;.I5
^^DSKB:TSTSYS.EXE\\
.B
AND LOAD A DIFFERENT MONITOR.
.B
^WHEN THE ^^TOPS-10\\ MONITOR IS LOADED, IT WILL ENTER INTO AN
INITIALIZATION DIALOG WITH YOU TO DETERMINE START-UP OPTIONS
AND CONDITIONS. ^THESE ARE COVERED IN ^SECTION 3.3.3.
.HL 2 ^&LOADING ^^TOPS-10\\ \\FROM ^MAGNETIC ^TAPE\&\\
\\^IN ORDER TO LOAD THE ^^TOPS-10\\ MONITOR FROM A MAGNETIC
TAPE, THE FOLLOWING PREREQUISITES MUST BE MET:
.LS;.LE;^THE MAGNETIC TAPE CONTAINING THE MONITOR SHOULD BE MOUNTED
ON DRIVE 0. ^IF THIS IS NOT POSSIBLE, MOUNT IT ON ANY DRIVE BUT
REMEMBER TO TELL ^^BOOTM\\ WHICH DRIVE BY ENTERING THE CONTROLLER
TYPE AND DRIVE NUMBER IN THE COMMAND LINE.
.LE;^THE BOOTSTRAP PROGRAM TO LOAD A MONITOR FROM MAGNETIC TAPE,
^^BOOTM\\, MUST RESIDE ON A FRONT-END LOAD DEVICE; DISK OR ^^DEC\\TAPE.
.LE;^LOAD THE CONSOLE FRONT END VIA THE ^^SW/REG\\ LOAD PROCEDURE.
(^SECTION 3.2.3) WITH AT LEAST BITS 0, 1, AND 2 SET ^^ON\\. ^THIS
WILL ALLOW YOU TO USE THE ^^KLINIT\\ DIALOG.
.PG
.LE;^WHEN ^^KLINIT\\ PROMPTS YOU WITH:
.B;.I5
^^KLI -- LOAD KL BOOTSTRAP[YES,NO,FILENAME]?\\
.I5
^^KLI>\\
.B
ANSWER WITH THE NAME OF THE FILE CONTAINING THE MAGNETIC TAPE
BOOTSTRAP. ^FOR EXAMPLE, IF ^^BOOTM\\ WAS IN THE FILE ^^MTBOOT.EXB,\\
RESPOND WITH:
.B;.I5
^^KLI>MTBOOT.EXB\\
.B
^^KLINIT\\ WILL LOAD ^^BOOTM\\, GIVE YOU THE MESSAGE:
.B;.I5
^^KLI -- BOOTSTRAP LOADED AND STARTED\\
.B
AND YOU WOULD THEN BE UNDER CONTROL OF THE BOOTSTRAP PROGRAM.
^WHEN ^^BOOTM\\ OUTPUTS ITS PROMPT CHARACTERS:
.B;.I5
^^BTM>\\
.B
YOU CAN GIVE THE FILE SPECIFICATION FOR THE MONITOR AS:
.B;.I5
^^BTM>DSKB:MAGSYS.EXE[1,4]/TM02:3\\
.B
TO LOAD A SPECIFIC MONITOR FROM TAPE DRIVE 3 ON A ^^TM\\02 CONTROLLER
OR YOU CAN SIMPLY GIVE A CARRIAGE RETURN TO GET THE DEFAULT FILE,
WHICH IS ^^DSKB:SYSTEM.EXE[1,4\\] ON TAPE DRIVE 0 OF A ^^TM\\10 CONTROLLER.
.B
^USE /^^TM10\\:N FOR ^^TU10, TU40\\, AND ^^TU\\41 TAPE DRIVES.
.BR
^USE /^^TM02\\:N FOR ^^TU16\\ AND ^^TU\\45 TAPE DRIVES.
.BR
^USE /^^TX\\01:N FOR ^^TU70\\ AND ^^TU\\71 TAPE DRIVES.
.BR
^USE /^^TX02\\:N FOR ^^TU\\72 TAPE DRIVES.
.B
^WHEN THE ^^TOPS-10\\ MONITOR IS LOADED, IT ENTERS INTO AN
INITIALIZATION DIALOG WITH THE OPERATOR TO DETERMINE THE
START-UP OPTIONS AND CONDITIONS. ^THESE ARE COVERED IN ^SECTION 3.3.3.
.ELS
.HL 2 ^&^^TOPS-10\\ INITIALIZATION DIALOG\&\\
\\^WHEN THE ^^TOPS-10\\ MONITOR IS LOADED, THE SYSTEM CHECKS TO SEE
THAT THE MONITOR AND PROCESSOR ARE COMPATIBLE. ^IF THEY ARE NOT,
THE FOLLOWING ERROR MESSAGE IS ISSUED:
.B;.I5
^^?THIS MONITOR WAS BUILT FOR A\\ XXXXXX
.I6
^^AND WILL NOT RUN PROPERLY ON A\\ YYYYYY.
.B
WHERE XXXXXX AND YYYYYY CAN BE ^^KA10, KI10\\ OR ^^KL10. I\\F THIS MESSAGE PERSISTS,
THE SYSTEM MANAGER SHOULD REVIEW THE MONITOR GENERATION PROCEDURE IN
THE ^SOFTWARE ^NOTEBOOKS.
.B
^IF THE LOAD TIME DIAGNOSTIC PROGRAM (^^SYSCHK\\) WAS INCLUDED IN THE
SYSTEM SOFTWARE AT MONITOR GENERATION TIME, THE SYSTEM WILL PROMPT WITH:
.B;.I5
^^SYSCHK (N,Y):\\
.B
^A RESPONSE OF ^Y RUNS A 5-SECOND DIAGNOSTIC PROGRAM THAT
ENSURES THE ACCESSIBILITY OF ALL CONFIGURED MEMORY AND
 SYSTEM DEVICES. ^A REPLY OF ^N OR A CARRIAGE RETURN SKIPS THE DIAGNOSTIC.
.PG
^THE SYSTEM THEN TYPES OUT THE SYSTEM NAME (UP TO 24 CHARACTERS
SPECIFIED AT SYSTEM GENERATION TIME) AS WELL AS THE SYSTEM CREATION
DATE; FOR EXAMPLE:
.B;.I5
^^ABC123 KL10 SYS_#1234 07-12-76\\
.B
^WHEN THE SYSTEM PROMPTS:
.B.I5
^^WHY RELOAD\\:
.B
REPLY WITH ONE OF THE FOLLOWING ACCEPTABLE ANSWERS:
.B;.LM5;.TS20,30;.NF;.NJ
^^OPR	NXM	CM
PARITY	HALT	SA
POWER	LOOP	NEW
STATIC	HUNG	SCHED
HARDWARE	PM	OTHER\\
.B;.LM0;.F;.J
^IF YOU DO NOT REPLY WITHIN 60 SECONDS, ^^OTHER\\ IS ASSUMED. ^REFER
TO THE ^^ONCE\\ MANUAL IN THE ^SUPPLEMENTARY ^OPERATOR'S ^PROCEDURES
SECTION OF THE ^SOFTWARE ^NOTEBOOKS FOR THE MEANINGS AND USAGE OF THE ABOVE
REPLIES. ^THE REPLY IS STORED IN THE SYSTEM ERROR FILE
(^^ERROR.SYS\\) AND CAN BE RETRIEVED AT A LATER TIME USING THE
^^SYSERR\\ PROGRAM. ^FOR EXAMPLE, A REPLY OF:
.B;.I5
^^WHY RELOAD:SCHED\\
.B
WILL RECORD THAT THIS PARTICULAR MONITOR LOAD WAS A SCHEDULED RELOAD.
.B
^WHEN THE SYSTEM PROMPTS:
.B;.I5
^^DATE:\\
.B
ENTER THE NUMERIC DAY AND ALPHABETIC MONTH, IN EITHER ORDER. ^THE
MONTH MAY BE ABBREVIATED TO ANY POINT WHERE IT IS STILL UNIQUE.
^THE YEAR IS OPTIONAL. ^IF ENTERED, IT MUST BE EITHER THE FULL FOUR
DIGITS OR THE LAST TWO. ^IF THE YEAR IS NOT ENTERED, IT IS ASSUMED
TO BE THE SAME AS IN THE MONITOR CREATION DATE. ^IF, FOR EXAMPLE,
THE MONITOR CREATION DATE WAS ^JUNE 21, 1976; ANY OF THE FOLLOWING
REPLIES WOULD BE RECORDED AS ^SEPTEMBER 8, 1976.
.B;.I5
^^DATE:SEP 8 1976
.I5
DATE:S#8#76
.I5
DATE:8#SEP\\
.B
^WHEN THE SYSTEM PROMPTS:
.B;.I5
^^TIME:\\
.B
ENTER A 4-DIGIT TIME BASED ON A 24-HOUR CLOCK. ^FOR EXAMPLE,
.B;.I5
^^TIME:2015\\
.B
REPRESENTS 8:15 ^P^M.
.B
^WHEN THE SYSTEM PROMPTS:
.B;.I5
^^STARTUP OPTION:\\
.B
REPLY WITH ONE OF THE FOLLOWING:
.B;.LM5;.TS20,30;.NF;.NJ
^^QUICK	REFRESH	LONG
GO	UNITID	NOINITIA
DESTROY	CHANGE\\
.B;.LM0;.F;.J
^A COMPLETE DESCRIPTION OF EACH START-UP OPTION IS CONTAINED
IN THE ^^ONCE\\ MANUAL IN THE ^SUPPLEMENTARY ^OPERATOR'S ^PROCEDURES SECTION
OF THE ^SOFTWARE ^NOTEBOOKS. ^THE USUAL OPERATOR'S REPLY IS
^^GO \\TO START THE SYSTEM WITH A MINIMUM AMOUNT OF DIALOG
OR ^^QUICK\\ TO START THE SYSTEM IMMEDIATELY WITHOUT DIALOG.
.HL 2 ^&^LOADING ^SECOND ^^CPU\\ (^DUAL ^PROCESSOR)\&\\
\\^IF YOUR SYSTEM IS A DUAL PROCESSOR, THIS IS THE TIME TO
INITIALIZE THE SECOND ^^CPU\\. ^THE MASTER ^^CPU\\ IS DESIGNATED ^^CPU0\\ WHILE THE SECOND OR SLAVE ^^CPU\\ IS REFERRED TO AS ^^CPU1\\.
^THE SECOND ^^CPU\\ NEEDS ITS OWN ^^RSX-20F\\
FRONT-END SOFTWARE MOUNTED ON A
^^DEC\\TAPE OR DISK ACCESSIBLE TO ITS FRONT-END PROCESSOR.
.B
^LOAD THE SECOND FRONT-END PROCESSOR AS DESCRIBED IN ^SECTION
3.2.3 AND ENTER THE ^^KLINIT\\ DIALOG. ^LOAD THE MICROCODE AND
RECONFIGURE CACHE AND MAIN MEMORY. ^WHEN YOU RECEIVE THE MESSAGE:
.B;.I5
^^KLI -- LOAD KL BOOTSTRAP [YES, NO, FILENAME]?
.BR;.I5
KLI>\\
.B
ANSWER ^^"NO"\\ WHICH WILL BRING UP:
.B;.I5
^^KLI -- EXIT [YES, RESTART]?\\
.BR;.I5
^^KLI>\\
.B
^REPLY WITH ^^YES\\ (OR DEFAULT WITH A CARRIAGE RETURN) AND YOU WILL
EXIT TO THE ^^RSX-20F\\ MONITOR. ^PROCEED AS FOLLOWS:
.LM25;.TS25;.I-20;.B
^^STEP	FUNCTION\\
.BR;.I-20
----	---------
.B;.I-20
_^_\	^TYPE CONTROL BACKSLASH TO ENTER THE ^PARSER.
.B;.I-20
^^PAR>SET CONSOLE\\	^SET CONSOLE TO PROGRAMMER MODE.
.B;.I-20
^^PAR>SET NO RELOAD\\	^INHIBIT AUTOMATIC RELOAD OF ^^CPU\\1 ON AN ERROR.
.B;.I-20
^^PAR>SET CONS OPR\\	^RETURN CONSOLE TO OPERATOR MODE.
.B;.I-20
^^PAR>J\\ 400	^START ^^CPU\\1 AT ^^KL\\ MEMORY LOCATION 400.
.B;.I-20
^^[CPU1]\\	^THIS IS THE RESPONSE TYPED ON ^^CTY\\1 WHEN ^^CPU1\\ HAS
COMPLETED INITIALIZATION.
.PS69,70;.SP1;.LM0;.RM70;.F;.J
.HL1 ^&LOADING COMMUNICATIONS FRONT ENDS\&\\
\\^COMMUNICATION FRONT ENDS MUST BE LOADED WITH APPROPRIATE SOFTWARE
BASED ON THE TYPE OF REMOTE TERMINALS AND/OR STATIONS TO BE SERVICED.
.B
^THIS SECTION DEALS ONLY WITH THE LOADING OF A FRONT-END PROCESSOR WITH A
SPECIFIC OR DEFAULT FILE THAT RESIDES ON DISK. ^HOW THE SOFTWARE WAS
GENERATED AND PLACED INTO THE DISK FILE IS COVERED IN THE ^SYSTEM
^PROGRAMMING ^PROCEDURES AND ^TECHNIQUES IN THE ^SOFTWARE ^NOTEBOOKS.
.B
^IT IS ASSUMED THAT YOU HAVE ALREADY LOADED THE ^^TOPS\\-10 MONITOR
AND HAVE LOGGED IN.
.B
^THE LOADING PROCEDURE VARIES WITH THE TYPE OF INTERFACE TO THE ^^KL\\ PROCESSOR.
^THE ^^DC75NP, DN85\\, AND ^^DN\\87 FRONT ENDS INTERFACE VIA THE ^^DL\\10
^DATA ^CHANNEL. ^THE ^^DN87S\\ FRONT END INTERFACES VIA THE ^^DTE20\\ ^TEN-^ELEVEN
^DATA ^INTERFACE.
.PG;.PS67,70
.HL2 ^&LOADING \\VIA \\THE ^^DL\\10\&
\\^THE PROGRAM USED TO LOAD A FRONT-END PROCESSOR VIA THE ^^DL10\\ IS
^^BOOT\\11. ^YOUR SYSTEM PROGRAMMER WILL USUALLY HAVE MADE THIS PROGRAM
AVAILABLE ON YOUR ^^DSK:\\ [1,2] AREA OR IT MAY RESIDE IN THE ^^SYS:\\
SYSTEM LIBRARY.
.B
^LOAD ^^BOOT\\11 BY TYPING:
.B;.I5
_.^^R BOOT\\11
.B
^^TOPS\\-10 WILL LOAD AND START ^^BOOT\\11 WHICH WILL, IN TURN, PROMPT YOU WITH:
.B;.I5
^^FILE\\:
.B
AND EXPECT, AS A RESPONSE, A STANDARD ^^DEC\\SYSTEM-10 FILE DESCRIPTOR
FOLLOWED BY SWITCHES TELLING ^^BOOT\\11 WHAT TO DO. ^A REPRESENTATIVE RESPONSE
SUCH AS:
.B;.I5
^^FILE:DN87.BIN/CLEAR/START/PORTNO:2\\
.B
WILL CLEAR THE MEMORY OF THE ^^PDP\\-11 ON PORT NUMBER 2 TO ZEROS;
LOAD THE ^^PDP\\-11 WITH THE PROGRAM IN THE FILE ^^DSK:DN87.BIN\\; AND START THE
PROGRAM.
.B
^IF YOU REPLY WITH A CARRIAGE RETURN, THE DEFAULT ACTION IS:
.B;.I5
^^FILE:DSK:PDPXI0.BIN/START/PORTNO:0\\
.B
^NOTE HOWEVER THAT IF THERE IS MORE THAN ONE ^^DL\\10-INTERFACED
^^PDP\\-11 ON THE SYSTEM, THE PORT NUMBER IN THE ABOVE RESPONSE
MUST BE SPECIFIED.
.B
^^BOOT\\11 KEEPS YOU INFORMED OF ITS PROGRESS WITH THE FOLLOWING MESSAGES:
.B;.I5
"^^CLEARING PDP-11
.B;.I5
"PDP-11 LOADING
.B;.I5
"PDP-11 LOADED
.B;.I5
"PDP-11 STARTED\\
.B
^ADDITIONAL INFORMATION ON ^^BOOT\\11 SWITCH OPTIONS AND A LIST OF ERROR
MESSAGES ARE IN THE ^^BOOT\\11 SPECIFICATION IN THE ^SOFTWARE ^NOTEBOOKS.
.HL2 ^&LOADING \\VIA \\THE ^^DTE\\20\&
\\^THE PROGRAM USED TO LOAD A FRONT-END PROCESSOR VIA THE ^^DTE\\20
INTERFACE IS CALLED ^^DTELDR\\. ^YOUR SYSTEM PROGRAMMER WILL USUALLY HAVE
MADE THIS PROGRAM AVAILABLE TO YOU ON YOUR ^^DSK:\\ [1,2] AREA OR IT MAY
RESIDE IN THE ^^SYS:\\ SYSTEM LIBRARY.
.B
^LOAD ^^DTELDR\\ BY TYPING:
.B;.I5
_.^^R DTELDR\\
.B
^^TOPS\\-10 WILL LOAD AND START ^^DTELDR\\ WHICH WILL THEN PROMPT YOU WITH:
.B;.I5
*
.B;.PS69,70
^^DTELDR\\ EXPECTS YOU TO REPLY WITH A FILE SPECIFICATION (OR ASSUME
A DEFAULT); AN ACTION SWITCH, AND OPTIONAL MODIFICATION SWITCHES. ^THE
DEFAULT FILE SPECIFICATION IS:
.PG
.B;.I5
^^DSK:DTEL\\XY.^^BIN\\
.B
WHERE:
.B;.LM7;.TS7;.I-2
X	IS THE ^^CPU\\ NUMBER (ONLY 0 IS ALLOWED IN THE CURRENT IMPLEMENTATION).
^IF X IS OMITTED, ZERO IS ASSUMED.
.B;.I-2
Y	IS THE ^^DTE\\ NUMBER (0 THROUGH 3) OF THE ^^PDP\\-11 INTERFACE.
(^^DTE\\0 IS RESERVED FOR THE ^CONSOLE/^DIAGNOSTIC PROCESSOR.)
.B;.LM0;.PS67,70
^THE ACTION SWITCH TO LOAD THE FRONT END IS:
.B;.I5
/^^RELOAD:\\XY
.B
WHERE X AND Y, DEFINED AS ABOVE, DETERMINE THE FRONT END TO BE LOADED. ^^RELOAD\\
LOADS THE SPECIFIED FILE INTO THE APPROPRIATE FRONT END AND
STARTS THE PRIMARY PROTOCOL. ^THE FRONT END IS THEN ENABLED FOR
COMMUNICATIONS.
.B
^MODIFICATION SWITCHES THAT MAY BE APPLICABLE ARE:
.B;.LM15;.TS15;.I-10
/^^IMAGE\\	THE .^^BIN\\ FILE IS IN IMAGE FORMAT.
.B;.I-10
/^^NODUMP\\	^THE /^^RELOAD\\ SWITCH AUTOMATICALLY TAKES A DUMP OF
^^PDP\\-11 MEMORY BEFORE LOADING A FILE. ^USE THIS SWITCH TO CANCEL THE DUMP.
.B;.I-10
/^^NOLOG\\	^ERROR LOGGING IS AUTOMATICALLY IN EFFECT WHEN YOU LOAD
A FRONT END. ^USE THIS SWITCH TO CANCEL ERROR LOGGING.
.B;.LM0
^TO LOAD A ^^DN87S\\ ON ^^DTE\\ NUMBER 2 WITH A PROGRAM LOCATED IN
^^DSK: DN87S.BIN\\ AND SKIP THE AUTOMATIC DUMP, TYPE THE FOLLOWING
TO THE ^^DTELDR\\ PROMPT:
.B;.I5
*^^DN87S.BIN/RELOAD:2/NODUMP\\
.B
^IF THE PROGRAM HAD BEEN LOCATED IN THE DEFAULT LOCATION, ^^DSK: DTEL02.BIN\\,
YOU NEED ONLY TYPE:
.B;.I5
*^^/RELOAD:2/NODUMP\\
.B
^ANOTHER ACTION SWITCH AVAILABLE WITH ^^DTELDR\\ IS /^^AUTO\\. ^THIS
SWITCH, WHEN SET FOR AN ACTIVE ^^DTELDR\\ JOB, WILL AUTOMATICALLY RELOAD
ANY FRONT END THAT CRASHES WITH ITS UNIQUE DEFAULT FILE. ^TO TAKE
ADVANTAGE OF THIS FEATURE, YOU MUST ENSURE THAT THE DEFAULT FILES CONTAIN
THE APPROPRIATE PROGRAMS.
.B
^FOR EXAMPLE:
.B;.LM20;.TS20;.I-15
^^DSK:DTEL01.BIN\\	MUST CONTAIN THE PROGRAM FOR THE NUMBER 1 FRONT END.
.B;.I-15
^^DSK:DTEL02.BIN\\	MUST CONTAIN THE PROGRAM FOR THE NUMBER 2 FRONT END.
.B;.LM0
^BY INCLUDING THE FOLLOWING SEQUENCE IN THE ^^OPR.ATO\\ FILE (SEE ^SECTION 4.1.1.2), YOU CAN
PROVIDE FOR BOTH THE AUTOMATIC LOADING OF A FRONT END AT SYSTEM INITIALIZATION TIME,
AND THE SUBSEQUENT AUTOMATIC RELOADING OF ANY FRONT END THAT
MIGHT CRASH.
.B;.TS5,30;.NF;.NJ;.PS68,70
	:^^SLOG\\	;LOG ON A SUBJOB
	:^^DEF DTE=\\	;NAME IT ^^DTE\\
	^^DTE-R DTELDR\\	;LOAD AND START ^^DTELDR
	DTE-/RELOAD:2/NODUMP\\	;LOAD ^^DTE\\ NUMBER 2
	^^DTE-/AUTO\\	;SET AUTOMATIC RELOAD
.PG
.B;.LM0;.F;.J;.PS67,70
^FOR ADDITIONAL INFORMATION ON ^^DTELDR\\, TYPE:
.B;.I5
_.^^R DTELDR
.BR;.I5
*/HELP\\
.HL1 ^&LOADING THE DX10 DATA CHANNEL\&\\
\\^THE ^^PDP\\-8 IN THE ^^DX\\10 DATA CHANNEL MUST BE LOADED TO ENABLE
THE OPERATION OF THE ^^TU\\70 SERIES OF MAGNETIC TAPE SYSTEMS.
.B
^THE BOOTSTRAP PROGRAM, ^^BOOTDX\\, IS DESIGNED TO LOAD (OR DUMP)
PROGRAMS FROM THE ^^DEC\\SYSTEM-10 DISK FILE SYSTEM INTO THE ^^PDP\\-8.
^THESE PROGRAMS MUST BE IN ^^PDP\\-8 IMAGE MODE FILE FORMAT.
.B
^^BOOTDX\\ RUNS IN ^^USER\\ MODE UNDER A ^^DEC\\SYSTEM-10 TIMESHARING
SYSTEM. ^SINCE IT DOES ^I/^O INSTRUCTIONS DIRECT TO THE ^^DX\\10 HARDWARE,
THE ^^BOOTDX\\ JOB MUST HAVE THE ^^TRPSET\\ PRIVILEGE ALLOWING IT TO USE
THE ^^TRPSET\\ MONITOR CALL. ^THIS PRIVILEGE IS ASSIGNED
FROM THE SYSTEM ACCOUNTING FILE, BY THE SYSTEM MANAGER.
.HL2 ^&LOADING PROCEDURE\&\\
\\^THE PROGRAM, ^^BOOTDX\\, NORMALLY RESIDES IN THE SYSTEM AREA,
^^SYS:. L\\OAD IT BY TYPING:
.B;.I5
_.^^R BOOTDX\\
.B
^WHEN ^^BOOTDX\\ IS LOADED AND STARTED, IT RESPONDS WITH THE PROMPT:
.B;.I5
^^FILE:\\
.B
AND WAITS FOR A REPLY CONSISTING OF A STANDARD ^^DEC\\SYSTEM-10 FILE
DESCRIPTOR FOLLOWED BY ONE OR MORE SWITCHES DEFINING THE OPERATION TO BE
PERFORMED.
.B
^IF THE FILE DESCRIPTOR IS OMITTED, THE DEFAULT IS:
.B;.I5
^^DSK:DXMPA.A8\\ OR ^^DSK:DXMPA.BIN\\#(FOR A LOAD OPERATION)
.B
OR
.B;.I5
^^DSK:DXMPA.LSD\\#(FOR A DUMP OPERATION)
.B
^IF NO SWITCHES ARE TYPED, THE DEFAULT IS:
.B;.I5
/^^CLEAR/LOAD\\
.B
WHICH FIRST CLEARS THE ^^PDP\\-8 AND THEN LOADS THE CHANNEL PROGRAM INTO IT.
.B
^ANOTHER COMMONLY USED SWITCH IS:
.B;.I5
/^^CLEAR\\
.B
WHICH SETS ^^PDP\\-8 MEMORY TO ALL ^^HALT\\ INSTRUCTIONS.
.PG
.C
-----#^EXAMPLE#-----
.B;.I5
^^_.R BOOTDX
.BR;.I5
FILE:SYS:/CLEAR/START\\
.B
WILL LOAD AND START THE ^^BOOTDX\\ BOOTSTRAP PROGRAM, CLEAR ^^PDP\\-8
MEMORY, LOAD THE FILE ^^DXMPA.A8\\ OR ^^DXMPA.BIN\\ FROM ^^SYS:\\ AND START IT AT
LOCATION 200 OCTAL. ^WHILE THIS IS GOING ON, YOU WILL RECEIVE THE FOLLOWING
PROGRESS MESSAGES AT YOUR ^^TTY:\\
.B;.LM5;.NF;.NJ
"^^CLEARING DX-10
.B
"DX-10 LOADING
.B
"DX-10 LOADED
.B
"DX-10 STARTED\\
.LM0;.RM70;.PS67,70;.SP1;.F;.J
.NUMBER CHAPTER 4
.CH ^&SYSTEM SERVICES\&\\
\\^TIMESHARING REQUIRES THAT  SEVERAL PROGRAMS
BE INITIATED TO RUN THROUGHOUT THE DAY. ^ALTHOUGH THE LIST
OF THESE PROGRAMS MAY VARY FROM INSTALLATION
TO INSTALLATION, THE PROGRAMS DISCUSSED IN THIS SECTION
GENERALLY CAN BE CONSIDERED NECESSARY FOR THE EFFICIENT
SERVICING OF USER COMMANDS.
.B
^THE PROGRAMS AND COMMANDS EXPLAINED BELOW ENABLE YOU
TO HANDLE USER-INITIATED REQUESTS SUCH AS:
DISK/^D^E^CTAPE FILE TRANSFERS; DISK PACK, MAGTAPE, AND ^D^E^CTAPE  MOUNT
REQUESTS; LINE PRINTER LISTINGS; PAPER TAPE OUTPUT; AND
BATCH JOB REQUESTS. ^THE VARIETY OF 
USER REQUESTS WILL REQUIRE YOU TO SUPERVISE THE 
RUNNING OF SEVERAL JOBS SIMULTANEOUSLY. ^YOU, THEREFORE, MUST
BECOME PROFICIENT IN EACH PROCEDURE AND BE
ABLE TO EXECUTE EACH ONE WITH A MINIMUM OF DELAY.
.HL 1 ^&OPSER\&\\
\\^THE ^^OPSER\\ PROGRAM ENABLES YOU TO MONITOR AND
CONTROL UP TO 14 JOBS, SIMULTANEOUSLY, FROM A SINGLE TERMINAL.
^THESE JOBS ARE KNOWN AS SUBJOBS BECAUSE THEY RUN UNDER THE CONTROL
OF ANOTHER JOB; IN THIS INSTANCE, ^^OPSER. Y\\OU, AS THE OPERATOR,
CAN COMMUNICATE WITH ANY ACTIVE SUBJOB DIRECTLY OR VIA ^^OPSER\\.
.HL 2 ^&^^OPSER O\\PERATION\&\\
\\^^OPSER\\ IS NORMALLY STARTED AUTOMATICALLY WHEN THE SYSTEM IS BROUGHT
UP. ^AT THIS TIME ^^OPSER\\ READS AND PROCESSES THE FILE ^^SYS:OPR.ATO\\
(THE ^AUTO ^FILE). ^THIS FILE CONTAINS THE ^^OPSER\\ COMMANDS THAT
WILL INITIATE THE RUNNING OF SYSTEM SERVICE PROGRAMS SUCH AS INPUT
AND OUTPUT SPOOLERS, COMPONENTS OF THE ^^GALAXY\\ BATCH PROCESSING
SYSTEM, AND DEVICE-SERVICING PROGRAMS.
.B
^IF YOU WANT TO START ^^OPSER\\ YOURSELF, TYPE:
.B;.I5
^^_.R OPSER\\
.B
^WHEN ^^OPSER\\ RESPONDS WITH AN ASTERISK, TELL IT TO LOAD AND
PROCESS THE ^AUTO ^FILE BY TYPING:
.B;.I5
^^*:AUTO SYS:OPR.ATO\\
.B
^^OPSER\\ WILL RESPOND WITH AN ASTERISK OR AN EXCLAMATION POINT, AT WHICH
TIME YOU CAN GIVE IT ANY OF THE ^^OPSER\\ COMMANDS DESCRIBED LATER IN THIS CHAPTER.
.PG
.B
^IT IS IMPORTANT FOR YOU TO REMEMBER TO DISTINGUISH BETWEEN TYPING COMMANDS
TO THE ^^OPSER\\ PROGRAM AND TYPING DIRECTLY TO THE SUBJOBS.
.B3
4.1.1.1##^&^COMMANDS TO THE ^^OPSER P\\ROGRAM\&\\#-#^YOU
MUST PRECEDE EACH ^^OPSER\\ COMMAND BY A COLON (:) AND YOU MUST
TYPE ENOUGH LETTERS TO MAKE THE COMMAND UNIQUE.
.NT
^THE COMMANDS :^^MONITOR, :SLOGIN, :WHAT\\, AND ^^:WHERE\\ ARE EXCEPTIONS.
^THE MINIMUM NUMBER OF LETTERS YOU MUST TYPE FOR EACH OF THESE COMMANDS
IS AS FOLLOWS:
.B;.I5
^^:MONITO
.I5
:SLOG
.I5
:W
.I5
:WHE\\
.EN
^^OPSER\\ PROMPTS YOU WITH EITHER AN ASTERISK (*) OR AN EXCLAMATION POINT (!)
WHEN IT IS READY TO RECEIVE YOUR COMMANDS. ^AN ASTERISK INDICATES THAT
NO SUBJOBS ARE ACTIVE OR A SUBJOB IS WAITING FOR SOME ACTION ON YOUR PART.
^AN EXCLAMATION POINT MEANS THAT AT LEAST ONE SUBJOB IS CURRENTLY ACTIVE
BUT YOU CAN STILL COMMUNICATE WITH OTHER SUBJOBS.
.B
^THERE ARE FOUR METHODS OF SPECIFYING SUBJOBS IN AN ^^OPSER\\ COMMAND STRING.
.LS;.LE;^TYPE THE SUBJOB NUMBER (OR NUMBERS).
.LE;^TYPE THE MNEMONIC YOU ASSIGNED TO THE JOB WITH THE ^^:DEFINE\\ COMMAND.
.LE;^USE THE WORD ^^ALL\\, WHICH INDICATES TO ^^OPSER\\ THAT YOU WANT
THE COMMAND TO APPLY TO ALL ACTIVE SUBJOBS.
.LE;^LEAVE THE SUBJOB SPECIFICATION OUT ENTIRELY, IN WHICH CASE
^^OPSER\\ ASSUMES YOU INTEND THE COMMAND TO APPLY TO THE LAST SUBJOB
YOU REFERENCED VIA (1), (2), OR (3) ABOVE.
.ELS
^IF THE PREVIOUS COMMAND REFERENCED A LIST OF SUBJOBS,
THE LAST ONE REFERENCED IS THE DEFAULT FOR ANY SUBSEQUENT COMMAND. ^FOR EXAMPLE, IN THE SEQUENCE,
.B;.I5
^^:WHAT A, B, C
.I5
:STOP\\
.B
^C IS THE SUBJOB IMPLICITLY REFERENCED IN THE ^^:STOP\\ COMMAND.
.B
^IF ^^A, B,\\ AND ^C WERE THE ONLY ACTIVE SUBJOBS, AND THE FOLLOWING
COMMANDS WERE TYPED,
.B;.I5
^^:WHAT ALL
.I5
:STOP\\
.B
^C WOULD AGAIN BE THE IMPLICIT ARGUMENT OF THE ^^:STOP\\ COMMAND.
.PG;.B3
4.1.1.2##^&^COMMANDS ^DIRECTLY TO ^SUBJOBS\&#-#^WHEN
YOU GIVE COMMANDS TO A SUBJOB, YOU MUST INDICATE FOR WHICH
SUBJOB (OR SUBJOBS) THE COMMAND IS INTENDED. ^DO THIS BY PRECEDING
THE COMMAND WITH THE SUBJOB NUMBER (OR THE NAME ASSIGNED VIA THE
^^:DEFINE\\ COMMAND) AND A HYPHEN. ^FOR EXAMPLE, TO STOP SUBJOB 3
(^L^P1) YOU COULD TYPE:
.B;.I5;.TS20
^^!3-STOP\\	;USING THE SUBJOB NUMBER
.B;.I7
OR
.B;.I5
^^!LP1-STOP\\	;USING THE SUBJOB NAME
.B
^THERE IS A METHOD AVAILABLE IN ^^OPSER\\ FOR SENDING THE SAME COMMAND TO
ALL THE SUBJOBS AT ONCE. ^FOR EXAMPLE, IF YOU WANT TO KNOW THE STATUS
WITHIN EACH OF THE SUBJOBS, INSTEAD OF TYPING ^^WHAT\\ TO EVERY
SINGLE SUBJOB, YOU CAN DO IT WITH A SINGLE COMMAND. ^YOU SIMPLY TYPE:
.B;.I5
^^ALL-WHAT\\
.B
AND ^^OPSER\\ SENDS THE ^^WHAT\\ COMMAND TO EACH SUBJOB.
.B
^WHENEVER YOU ENTER A COMMAND TO A SUBJOB, ^^OPSER\\ WILL TIMESTAMP
AND IDENTIFY THE ENTRY AS FOLLOWS:
.B;.I5
!HH:MM (XXX)
.B
WHERE XXX IS THE SUBJOB NUMBER OR NAME USED IN THE PRECEDING
COMMAND LINE. ^FOR EXAMPLE, THE FOLLOWING IS REPRESENTATIVE OF
^^CTY\\ OUTPUT.
.B;.TS20;.I5
!^^S-R SPRINT\\	(OPERATOR COMMAND)	
.BR;.I5
!13:20(^S)	(^^OPSER\\ TIMESTAMP)
.BR;.I5
#######/	(^^SPRINT\\ PROMPT)
.B
^SAMPLE ^^CTY\\ OUTPUT INCLUDED IN THIS MANUAL WILL USUALLY OMIT TIMESTAMP ENTRIES IN THE
INTEREST OF CONSERVING SPACE AND REDUCING CLUTTER. ^ACTUAL ^^OPSER\\
OUPUT WILL BE TIMESTAMPED.
.LM0;.RM70
.B
^CONSIDER THE FOLLOWING SEQUENCE OF COMMANDS:
.B1;.TS5,30
	^^STEP	EXPLANATION\\
.BR
	----	-----------
.B1;.LM30;.TS30;.I-30
_.^^R OPSER\\	^RUN THE ^^OPSER\\ PROGRAM.
.B1;.I-30
*:^^SLOG\\ 2,167	^LOGIN A SUBJOB UNDER [2,167].
.B1;.I-30
!:^^DEF FIL\\=	^ASSOCIATE SUBJOB N WITH THE NAME ^^FIL\\.
.B1;.I-30
!:^^WHAT FIL\\	^PRINT OUT THE STATUS OF ^^FIL\\.
.B1;.I-30
!^^FIL-R PIP\\	^TELL ^^FIL\\ TO RUN ^^PIP\\.
.B;.I-25
*^^FILC.EXT=FILA.EXT,FILB.EXT\\
.BR
^USE ^PIP\\ TO CREATE ONE FILE FROM DATA
IN TWO OTHER FILES.
.B1;.I-30
!:^^STOP FIL\\	^RETURN ^^FIL\\ TO MONITOR MODE.
.B1;.I-30
!:^^KJOB FIL\\	^LOGOUT ^^FIL\\.
.B1;.I-30
!:^^EXIT\\	^CAUSE ^^OPSER\\ TO EXIT TO THE MONITOR.
.F;.J;.B1;.LM0;.RM70;.PG
^THE EXAMPLE ABOVE SHOWS HOW TO LOG IN A SUBJOB, GIVE IT A
NAME, RUN A SYSTEM PROGRAM, AND LOG OUT THE SUBJOB.
^ONCE THE CONCEPT OF SUBJOBS IS UNDERSTOOD IT IS SIMPLE
TO GIVE SYSTEM COMMANDS AND PROGRAM COMMANDS TO A SUBJOB.
^THE ENTIRE RANGE OF MONITOR  AND PROGRAM COMMANDS CAN BE 
SENT TO A SUBJOB AS LONG AS THE COMMAND IS PRECEDED BY A 
SUBJOB NAME OR NUMBER FOLLOWED BY A HYPHEN. ^THIS BECOMES
VERY IMPORTANT IN EXPLAINING THE SERVICE PROGRAMS WHICH ARE
RUN UNDER ^^OPSER\\.
.B1
^TO ^^CTRL/C\\ A SUBJOB A ^^CTRL/A\\ MUST BE USED, SINCE ^^CTRL/C\\
UNDER ^^OPSER\\ IS EQUIVALENT TO ^^:EXIT\\.  ^FOR EXAMPLE, TO
^^CTRL/C\\ SUBJOB ^^FIL\\ WHICH IS RUNNING ^^PIP\\ THE
COMMAND IS:
.B 1;.I 10
^^FIL-_^^A<CR>\\
.B 1
^WHATEVER WAS BEING DONE UNDER ^^PIP\\ WOULD BE ALLOWED
TO FINISH, AND THEN SUBJOB ^^FIL\\ WOULD BE PUT AT MONITOR LEVEL.
.B 1
^A USEFUL FEATURE OF ^^OPSER\\ IS THE ABILITY TO AUTOMATICALLY EXECUTE
A PREDEFINED SET OF COMMANDS CONTAINED IN A DISK
FILE. ^THIS IS KNOWN AS THE ^^AUTO\\ FEATURE OF ^^OPSER\\.
^FOR EXAMPLE, CONSIDER THE FOLLOWING SEQUENCE OF
COMMANDS:
.B1;.TS5
	:^^SLOG\\ 2,167
.BR
	:^^DEF FIL\\=
.BR
	:^^WHAT FIL\\
.BR
	^^FIL-R PIP\\
.BR
	^^FILC.EXT=FILA.EXT,FILB.EXT
.BR
.I5
:STOP FIL
.BR
.I5
:KJOB FIL\\
.B1
^IF THE ABOVE COMMANDS WERE PLACED IN A FILE NAMED ^^FIL.ATO,\\ YOU COULD
ACCOMPLISH EXACTLY WHAT WAS DONE MANUALLY IN
THE EXAMPLE ABOVE BY ENTERING THE SINGLE ^^OPSER\\ COMMAND:
.B1;.I5
:^^AUTO FIL\\
.B1
^COMMANDS INCLUDED IN A FILE NAMED ^^OPR.ATO\\ ARE AUTOMATICALLY
EXECUTED WHENEVER THE SYSTEM IS LOADED.
.B
^^OPSER\\ IS USED TO CONTROL A LARGE PART OF SYSTEM OPERATION; IT IS
IMPORTANT THAT YOU BECOME PROFICIENT IN ITS USE.
.HL 2 ^&^^OPSER C\\OMMANDS\&
\\^SOME ^^OPSER\\ COMMANDS ARE AVAILABLE TO ALL USERS WHILE OTHERS ARE
AVAILABLE ONLY TO THOSE WITH ^^OPERATOR\\ PRIVILEGES.
.B3
4.1.2.1##^&^^OPSER#C\\OMMANDS#FOR#THE#^OPERATOR\&#-#^^OPSER\\
COMMANDS THAT ARE AVAILABLE TO YOU AT THE OPERATOR'S
CONSOLE ARE THE FOLLOWING:
.B1;.LM25;.TS25;.I-20
:^^JCONT\\N	^CONTINUES JOB N THAT WAS WAITING FOR OPERATOR ACTION.
.B;.I-20
:^^KSYS\\ HH:MM	^STOPS  TIMESHARING AT THE# TIME# SPECIFIED# BY
.I-20
^^:KSYS\\ +HH:MM	HH:MM. ^THIS#MUST #BE AT #LEAST #FIVE MINUTES
.I-20
^^:KSYS\\	LATER THAN CURRENT TIME. ^IF +HH:MM IS USED, IT MEANS THE
NUMBER OF HOURS AND/OR MINUTES
FROM THE CURRENT TIME AND MUST BE AT LEAST FIVE MINUTES. ^ALL USERS LOGGING IN RECEIVE A MESSAGE
STATING THE TIME AT WHICH TIMESHARING WILL END. ^LOGGED-IN
USERS RECEIVE SIMILAR MESSAGES WHEN THE :^^KSYS\\ COMMAND IS 
GIVEN, ONE HOUR BEFORE TIMESHARING ENDS, THEN AT
30,15,8,4,2 MINUTES, AND 1 MINUTE
BEFORE TIMESHARING IS SCHEDULED TO STOP. ^THE MESSAGES
ARE OF THE FORM: ^^TIMESHARING ENDS IN\\  N ^^MIN\\.
:^^KSYS\\ WORKS ONLY FOR A [1,2] JOB RUNNING AT THE ^^OPR\\ TERMINAL.
.B
^NOTE THAT :^^KSYS\\ WITHOUT AN ARGUMENT UNDOES THE EFFECT OF :^^KSYS\\ HH:MM OR :^^KSYS\\ +HH:MM.
.B
^THE COLON IN THE TIME SPECIFICATION IS OPTIONAL; BOTH HH:MM AND
HHMM ARE VALID.
.B1;.I-20
:^^RESTRICT\\ DEV:,...	^RESTRICTS THE SPECIFIED DEVICES TO THE
OPERATOR'S USE. ^THE OPERATOR CAN ASSIGN THE DEVICES TO A USER,
BUT THE USER CANNOT REASSIGN THEM TO ANYONE BUT THE OPERATOR.
.B1;.I-20
:^^SET BATMAX\\ N	^RESTRICTS ^^BATCON\\ (THE BATCH SYSTEM CONTROLLER) TO RUN
ONLY N JOBS SIMULTANEOUSLY. ^THE RANGE OF N IS 0-14 INCLUSIVE.
.B1;.I-20
:^^SET BATMIN\\ N	^RESERVES N JOBS FOR ^^BATCON\\
SUBJOBS.
.B1;.I-20
:^^SET LOGMAX\\ N	^RESTRICTS THE SYSTEM TO RUN ONLY N JOBS.
.B1;.I-20
:^^SET RUN CPU\\N	^ALLOWS##THE###OPERATOR##OF##A##MULTIPROCESSOR
.I-20
:^^SET RUN NO CPU\\N	SYSTEM# TO#TURN##PROCESSORS ON##AND OFF LINE.
.I-20
:^^SET RUN ONLY CPU\\N	^THE# N# IS# THE# ^^CPU\\# NUMBER# (0 OR 1).# ^THE
.I -20
^^:SET RUN ALL\\	COMMAND ^^:SET RUN\\ ADDS THE NAMED PROCESSOR TO THE
SYSTEM POOL OF RUNNING ^^CPU\\S. :^^SET RUN NO\\ REMOVES
THE NAMED ^^CPU\\ FROM THE SYSTEM POOL. :^^SET RUN ONLY\\ 
ALLOWS ONLY THE NAMED ^^CPU\\ TO RUN. :^^SET RUN ALL\\ PUTS
ALL THE ^^CPU\\S AVAILABLE INTO THE SYSTEM POOL.
.B1;.I-20
:^^SET\\ Y	^SIMULATES THE MONITOR COMMAND ^^.SET\\ Y,
WHERE Y IS ONE OF THE FOLLOWING: ^^BREAK, CORMAX, CORMIN, DATE, DAYTIME, MEMORY,
NOMESSAGE, OPR, SCHED, TTY, VMMAX.\\
^SEE THE EQUIVALENT MONITOR COMMANDS IN ^APPENDIX ^A FOR AN EXPLANATION.
.B 1;.I -20
:^^UNRESTRICT\\ DEV:	^RETURNS TO THE FREE USER RESOURCE
POOL A DEVICE THAT HAS BEEN RESTRICTED. ^IT IS THE COMPLEMENT
OF :^^RESTRICT\\.
.LM0;.RM70;.B3
4.1.2.2##^&^^OPSER C\\OMMANDS FOR ALL ^USERS\&#-#^THE
^^OPSER\\ COMMANDS THAT FOLLOW ARE AVAILABLE TO ALL 
USERS OF THE SYSTEM.
.B1;.LM30;.TS30;.I-25
:^^AUTO\\ FILESPEC	^PROCESSES THE COMMANDS CONTAINED IN THE SPECIFIED
FILE IMMEDIATELY.
.B 1;.I -25
^^:AUTO\\ /HHMM FILESPEC	^PROCESSES THE SPECIFIED FILE AT THE NEXT
OCCURRENCE OF HHMM TODAY. ^IF IT IS PAST HHMM TODAY, THE FILE WILL
BE PROCESSED IMMEDIATELY.
.PG
.B 1;.I -25
^^:AUTO\\ /<HHMM FILESPEC	^PROCESSES THE SPECIFIED FILE
AT THE NEXT OCCURRENCE OF HHMM TODAY.  ^IF IT IS PAST HHMM TODAY,
THE FILE WILL NOT BE PROCESSED.
.B 1;.I -25
^^:AUTO\\ />HHMM FILESPEC	^PROCESSES THE SPECIFIED FILE AT THE
NEXT OCCURRENCE OF HHMM.  ^IF IT IS PAST HHMM TODAY, THE FILE
WILL BE PROCESSED AT HHMM TOMORROW.
.B2;.C
^^NOTE\\
.B;.LM5
^IN THE ABOVE COMMANDS, "FILESPEC" STANDS FOR FILE SPECIFICATION AND CONSISTS OF A DEVICE,
FILENAME, EXTENSION, AND A DIRECTORY NAME IN THE FORM:
.B;.C
DEV:FILE.EXT [PROJ-PROG].
.B3;.LM30;.TS30;.I-25
WHERE:
.B;.LM30;.TS30;.I-15
DEV:	IS ANY VALID INPUT DEVICE NAME. ^THE DEFAULT IS ^^DSK:\\.
.B;.I-15
FILE	STANDS FOR ANY 1- TO 6-CHARACTER FILENAME. ^THERE IS NO DEFAULT;
YOU MUST SUPPLY A FILENAME.
.B;.I-15
_.EXT	IS ANY 1- TO 3-CHARACTER FILENAME EXTENSION. ^THE DEFAULT IS ^^_.ATO\\.
.B;.I-15
[PROJ-PROG]	IS THE DIRECTORY AREA THAT CONTAINS THE FILE. ^THE DEFAULT
IS THE DIRECTORY INDICATED BY THE PROJECT-PROGRAMMER NUMBER YOU USED TO LOG IN.
.B;.I-25
^^:CLOSE\\	^CLOSES THE DISK LOG FILE WITHOUT OPENING A NEW ONE.
(^THIS IS A TRANSACTION FILE WHERE ^^OPSER\\ LOGS ITS ACTIVITIES).
.B 1;.I -25
^^:CONTINUE\\	^CONTINUES PROCESSING THE ^^AUTO\\ FILE AFTER
BEING INTERRUPTED BY A ^^CTRL/C\\. ^THIS ALLOWS THE OPERATOR
TO GAIN CONTROL OF A SUBJOB DURING ^^AUTO\\ FILE PROCESSING.
.B 1;.I -25
^^:CURRENT\\	^TYPES THE NAME OF THE CURRENT SUBJOB IF ONE  
HAS BEEN DEFINED; IF ONE HAS NOT BEEN DEFINED, IT TYPES THE NUMBER OF THE
CURRENT SUBJOB (THE LAST ONE TYPED IN).
.B 1;.I -25
^^:DAYTIME\\	^TYPES THE CURRENT DATE AND TIME.
.B 1;.I -25
^^:DEFINE XXX\\=N	^GIVES SUBJOB N THE NAME ^^XXX\\, WHICH MAY BE FROM
ONE TO SIX CHARACTERS LONG. ^IN GENERAL, SHORT NAMES ARE RECOMMENDED.
^THE SUBJOB NUMBER MAY BE OMITTED FROM THE COMMAND STRING, IN WHICH
CASE ^^OPSER\\ ASSUMES THE LAST SUBJOB YOU REFERENCED.
.PG
.B;.I13
^RESTRICTIONS
.B
^THE FIRST CHARACTER OF THE NAME MUST BE ALPHABETIC AND THE SECOND
THROUGH SIXTH (IF ANY) MUST BE ALPHANUMERIC. ^THE SUBJOB NAME
"^B" IS RESERVED AS THE MNEMONIC FOR ^^BATCON\\ AND SHOULD NOT BE
ASSIGNED TO ANY OTHER SUBJOB.
.B 1;.I -25
^^:DEVICE\\ DEV:LOG:N	^CAUSES ^^OPSER\\ TO EXIT TO THE MONITOR, WHERE
YOU CAN ^^ASSIGN\\ THE DEVICE (DEV:) ON SUBJOB (N) AND ALSO ASSOCIATE A
LOGICAL NAME (LOG) WITH THAT DEVICE. ^THE LOGICAL NAME IS OPTIONAL BUT
IF YOU OMIT IT, YOU MUST TELL ^^OPSER\\. ^YOU DO THIS BY TYPING A COLON (:)
WHERE THE LOGICAL NAME WOULD HAVE APPEARED, E.G., ^^:DEVICE DTA:#:4\\.
^IF YOU ISSUE A ^^_.REENTER\\ COMMAND BEFORE RETURNING TO ^^OPSER\\, YOU WILL ABORT THE ^^_.ASSIGN\\
COMMAND. ^WHEN YOU ARE READY TO RETURN TO ^^OPSER\\, TYPE ^^_:CONT\\.
.B 1;.I -25
^^:ERROR\\ N,M,...	^SILENCES ALL OUTPUT EXCEPT ERROR MESSAGES
FROM SUBJOBS N,M, ETC. ^THE ^^:REVIVE\\ COMMAND WILL RESUME
REPORTING ALL MESSAGES. ^WHEN ^^OPSER\\ IS FIRST STARTED, ^^:REVIVE\\ IS IN EFFECT.
.B 1;.I -25
^^:EXIT\\ OR ^^CTRL/C\\	^EXITS TO THE MONITOR IF NO SUBJOBS ARE ACTIVE.
.B 1;.I -25
^^:FREE\\	^TYPES THE NUMBER OF THE FIRST UNUSED SUBJOB.
.B 1;.I -25
^^:HELP\\	^TYPES A TEXT BRIEFLY EXPLAINING THE COMMANDS AND THEIR FORMATS.
.B 1;.I -25
^^:KILL\\ N,M,...	^SEE :^^KJOB\\.
.B 1;.I -25
^^:KJOB\\ N,M,...	^LOGS OUT THE SPECIFIED SUBJOBS N, M, ETC.,
SAVING ALL THEIR FILES. ^ALSO, THE /^Z SWITCH IS PASSED TO THE ^^KJOB\\
PROGRAM IN ORDER TO SUPPRESS THE NORMAL QUEUING DONE AT LOGOUT TIME.
.B 1;.I -25
^^:LOGIN\\ P,PN	^LOGS IN A NEW SUBJOB UNDER PROJECT PROGRAMMER 
NUMBER P,PN.  ^IF P,PN IS NOT GIVEN, ^^OPSER\\'S PROJECT PROGRAMMER NUMBER IS ASSUMED.
.B 1;.I -25
^^:MONITOR\\	^EXITS TO THE MONITOR EVEN IF SUBJOBS ARE ACTIVE.
.B 1;.I -25
^^:MSGLVL\\ N	^DETERMINES WHETHER OR NOT THE JOB STATUS (^^JOBSTS\\)
BITS APPEAR IN THE RESPONSE TO THE ^^:WHAT\\ COMMAND. ^IF N EQUALS
0 THE JOB STATUS BITS ARE INCLUDED IN THE ^^:WHAT\\ OUTPUT. ^IF N
EQUALS 1 (DEFAULT), THE ^^:WHAT\\ OUTPUT DOES NOT INCLUDE THESE BITS.
^THE ACTUAL LETTERS TYPED OUT REPRESENT THE FOLLOWING:
.PG
.B;.I5
^L FOR LOGGED IN
.I5
^M FOR MONITOR MODE
.I5
^I FOR INPUT WAIT
.I5
^O FOR OUTPUT WAIT
.I5
^A FOR ^^JACCT.\\
.B1;.I -25
^^:QUEUE\\ LINE	^INITIATES THE FIRST FREE SUBJOB AND SENDS THE
LINE (LINE) AS A ^^QUEUE\\ COMMAND TO THE MONITOR.
.B 1;.I -25
^^:RESOURCES\\	^LISTS THE AVAILABLE SYSTEM RESOURCES.
.B 1;.I -25
^^:REVIVE\\ N,M,...	^CLEARS THE EFFECTS OF THE ^^:SILENCE,
:TSILENCE\\ AND ^^:ERROR\\ COMMANDS FOR SUBJOBS N,M,ETC., AND CAUSES
NORMAL ECHOING OF OUTPUT FROM THEM. ^WHEN ^^OPSER\\ IS FIRST STARTED,
^^:REVIVE\\ IS IN EFFECT.
.B 1;.I -25
^^:SCHED\\	^TYPES OUT THE SCHEDULE BITS AS SET BY THE OPERATOR.
^BITS ARE:
.B 1;.LM 37;.NF;.NJ;.TS 37;.I -3
0	^REGULAR TIMESHARING.
.I -3
1	^NO FURTHER ^^LOGIN\\S EXCEPT FROM ^^CTY\\.
.I -3
2	^NO FURTHER ^^LOGIN\\S FROM REMOTE TERMINALS, AND NO ANSWERING
OF DATA SETS.
.I -3
4	^BATCH JOBS ONLY.
.I -5
100	^DEVICE ^^MOUNT\\S CAN BE DONE WITHOUT OPERATOR INTERVENTION.
.I -5
200	^UNSPOOLED JOBS ALLOWED.
.I -5
400	^NO OPERATOR COVERAGE.
.TS 30;.LM 30;.B 1;.I -25
^^:SEND\\ LINE	^SIMULATES THE MONITOR ^^SEND\\ COMMAND.
.F;.J;.B 1;.LM 30;.TS 30;.I -25
^^:SILENCE\\ N,M,...	^SUPPRESSES ALL TERMINAL AND TRANSACTION
LOG OUTPUT FROM SUBJOBS N,M,ETC.
.B 1;.I -25
^^:SLOGIN\\ N,M	^SAME AS ^^:LOGIN\\, BUT ALSO SILENCES ALL
TERMINAL OUTPUT UNTIL THE JOB IS LOGGED IN.
.B 1;.I -25
^^:STOP\\ N,M,...	^PUTS THE SUBJOBS N,M,ETC., INTO MONITOR MODE.
.B 1;.I -25
^^:SYSTAT\\ XXX	^RUNS ^^SYSTAT\\ WITH THE OPTIONAL ARGUMENTS XXX
UNDER THE FIRST FREE SUBJOB.
.B 1;.I -25
^^:TIME\\ N	^TYPES OUT THE TOTAL RUNNING TIME FOR JOB N SINCE
THE LAST ^^:TIME\\ N COMMAND, FOLLOWED BY THE INTEGRATED
PRODUCT OF RUNNING TIME AND CORE SIZE.
.B 1;.I -25
^^:TLOG\\ DEV:FILE.EXT[N,M]	^CLOSES THE CURRENT ^^OPSER\\
TRANSACTION LOG, IF ANY, AND OPENS A NEW LOG, ON THE SPECIFIED
FILE.  ^IF NO FILE IS DESIGNATED, THE DEFAULT IS ^^DSK:OPSER.LOG[1,2]\\.
.B 1;.I -25
^^:TSILENCE\\ N,M,...	^SUPPRESSES ALL TERMINAL OUTPUT FROM
SUBJOBS N,M,ETC., BUT CONTINUES OUTPUT TO THE TRANSACTION LOG.
.PG
.B 1;.I -25
^^:TTYTST\\	^TYPES OUT A TEST PATTERN CONSISTING OF THE ^^ASCII\\
CHARACTERS CORRESPONDING TO OCTAL 40 TO 174 INCLUSIVE.
.B 1;.I -25
^^:WHAT\\ N,M,...	^TYPES THE STATUS OF THE SPECIFIED SUBJOB(S).
^THIS TYPEOUT INCLUDES A ^^SYSTAT\\ OF EACH JOB WITH THE CURRENT TIME,
THE TIME OF THE LAST INPUT AND THE LAST OUTPUT, A LINEAR LISTING
OF THE ^^JOBSTS\\ BITS (IF ^^MSGLVL\\ IS SET TO 0), AND THE TIME OF THE
NEXT TIMED ^^AUTO\\ FILE.
.B 1;.I -25
^^:WHERE\\ DEVN:	^TYPES THE PHYSICAL LOCATION NODE/STATION NUMBER OF THE
DEVICE DEV IN SUBJOB N.
.LM0;.RM70
.HL 2 ^&^^OPSER O\\PERATOR MESSAGES\&\\
\\^THE FOLLOWING MESSAGES FROM ^^OPSER\\ CAN APPEAR ON YOUR OPERATOR TERMINAL.
.B2;.LM8;.TS8;.I-8
^^?OPRAFE AUTO FILE READ ERROR
.B
OPSER\\ ENCOUNTERED A READ ERROR WHILE IT WAS TRYING TO PROCESS THE AUTO FILE.
.B2;.I-8
^^?OPRANI DEVICE CANNOT DO INPUT\\
.B
^INPUT CANNOT BE PERFORMED ON THE SPECIFIED DEVICE; EITHER BECAUSE
IT IS NOT A VALID DEVICE NAME OR BECAUSE IT IS A DEVICE THAT CAN ONLY DO OUTPUT.
.B2;.I-8
^^?OPRBFS BAD FILE SPEC\\
.B
^THERE IS A SYNTAX ERROR IN THE FILE SPECIFICATION.
.B2;.I-8
^^?OPRBTS BAD TIME SPECIFIED\\
.B
^THERE IS A SYNTAX ERROR IN THE TIME SPECIFICATION. ^SEE ^SECTION
4.1.2 FOR INFORMATION ABOUT THE FORMAT OF ^^OPSER\\ COMMANDS.
.B2;.I-8
?^^OPRCKJ# CANNOT BE KJOB'ED
.B
OPSER\\ IS UNABLE TO LOG THE JOB OUT. ^ONE CAUSE OF THIS CONDITION IS
A JOB BEING OVER QUOTA.
.B2;.I-8
?^^OPRCMM# CANNOT BE PUT IN MONITOR MODE\\
.B;.PS69,70
^THE OPERATOR ATTEMPTED TO RETURN TO THE MONITOR (^^:EXIT\\ OR
^^CTRL/C\\) BUT WAS UNABLE TO DO SO EVEN AFTER SEVERAL TRIES. ^THIS
CONDITION INDICATES A SYSTEM OR A PROGRAM PROBLEM.
.B2;.I-8
^^?OPRCNU COMMAND NOT UNIQUE\\
.B
^THE OPERATOR HAS ENTERED AN ABBREVIATION THAT DOES NOT SPECIFY
A UNIQUE COMMAND.
.PG
.B2;.I-8
^^?OPRCUA CANNOT USE ALL\\
.B
^THE OPERATOR TYPED A COMMAND WITH "^^ALL\\" AS THE ARGUMENT. ^CERTAIN
COMMANDS DO NOT ACCEPT "^^ALL\\" AS AN ARGUMENT (E.G., ^^:DEFINE\\).
^REFER TO ^SECTION 4.1.2 FOR INFORMATION ABOUT THE ^^OPSER\\ OPERATOR COMMANDS.
.B2;.I-8
^^?OPRDCO DEVICE CANNOT DO OUTPUT\\
.B
^THE DEVICE SPECIFIED IN THE ^^:TLOG\\ COMMAND IS NOT AN OUTPUT DEVICE.
.B2;.I-8
^^%OPRDNR DAEMON NOT RUNNING\\
.B
^THE ^^DAEMON\\ PROGRAM HAS NOT BEEN INITIALIZED.
.B2;.I-8
^^?OPRDUE DAEMON UUO ERROR\\
.B
^AN ERROR OCCURRED WHEN ^^OPSER\\ CALLED ^^DAEMON\\ TO DO ACCOUNTING.
^CONSULT THE SYSTEM ADMINISTRATOR.
.B2;.I-8
^^%OPRFMM#:KSYS HAS A MINIMUM OF 5 MIN.\\
.B
^THE OPERATOR SPECIFIED AN ARGUMENT THAT WAS TOO SMALL FOR THE
^^:KSYS\\ COMMAND. ^THE VALUE OF THE "+HH:MM" FORM OF THE COMMAND MUST BE
+00:05 OR GREATER. ^THE VALUE OF THE HH:MM FORM OF THE COMMAND MUST
BE AT LEAST FIVE MINUTES LATER THAN CURRENT TIME.
^SEE ^SECTION 4.1.2.1 FOR DETAILS ABOUT THE FORMAT OF THIS COMMAND
.B2;.I-8
^^?OPRJNA NO JOB NUMBER ASSIGNED\\
.B
^THIS MESSAGE GENERALLY OCCURS IN RESPONSE TO THE ^^:WHAT\\ COMMAND.
^IT HAPPENS IN CASES WHERE THE MONITOR DOES NOT KNOW ABOUT THE SUBJOB
SPECIFIED IN THE COMMAND.
.B2;.I-8
^^?OPRJRO JOB(S) RUNNING ON\\ N,M,...
.BR
^^TYPE ":KILL ALL" TO KILL THE SUBJOBS\\
.B
^THE OPERATOR TRIED TO ^^:EXIT\\ OR ^^CTRL/C\\ FROM ^^OPSER\\ BUT
SUBJOBS N,M, ETC. WERE ACTIVE. ^THE SUBJOBS MUST BE KILLED FIRST.
.B2;.I-8
^^?OPRLEF ENTER FAILURE\\ CODE ^^ON LOG FILE\\
.B
^AN ^^ENTER\\ FAILURE OCCURRED WHEN ^^OPSER\\ TRIED TO OPEN THE
TRANSACTION LOG FILE (:^^TLOG\\).
.B2;.I-8
^^?OPRNAS NO ACTIVE SUBJOBS\\
.B
^THE OPERATOR ISSUED A COMMAND TO A SUBJOB BUT NO SUBJOBS WERE RUNNING.
.B2;.I-8
^^?OPRNFP NO FREE PTY'S\\
.B
^THERE ARE NO MORE PSEUDO-TELETYPES (^^PTY'S\\) AVAILABLE UNDER WHICH TO RUN SUBJOBS.
.PG
.B2;.I-8
^^?OPRNFS NO FREE SUBJOBS\\
.B;.PS67,70
^THIS MESSAGE OCCURS IN RESPONSE TO EITHER THE ^^:FREE\\ COMMAND OR
A COMMAND THAT USES A FREE SUBJOB (E.G., ^^:QUEUE\\). ^IT HAPPENS
WHEN THERE ARE NO FREE SUBJOBS AVAILABLE.
.B2;.I-8
^^?OPRNSM NO SUCH MNEMONIC\\
.B
^THE MNEMONIC SPECIFIED IN THE COMMAND IS NOT ASSOCIATED WITH
ANY OF THE SUBJOBS. ^THIS IS EITHER BECAUSE IT WAS TYPED INCORRECTLY OR
BECAUSE THE NAME HAD NOT PREVIOUSLY BEEN ASSOCIATED WITH A
SUBJOB VIA THE ^^:DEFINE\\ COMMAND.
.B2;.I-8
^^[OPRPAF PROCESSING AUTO COMMAND FILE\\]
.B
^^OPSER\\ IS CURRENTLY PROCESSING THE AUTO FILE.
.B2;.I-8
?^^OPRSJW# IS STUCK WITH JACCT ON\\
.B
^THE OPERATOR TRIED TO RETURN TO THE MONITOR (^^:EXIT\\ OR ^^CTRL/C\\)
BUT WAS UNABLE TO DO SO, EVEN AFTER SEVERAL TRIES. ^THIS CONDITION INDICATES
A SYSTEM OR PROGRAM PROBLEM.
.B2;.I-8
?^^OPRSNA SUBJOB\\ N ^^IS NOT ACTIVE\\
.B
^A COMMAND WAS GIVEN TO SUBJOB N AND IT IS NOT ACTIVE.
.B2;.I-8
^^%OPRSPR SUPERSEDING PREVIOUS :AUTO REQUEST\\
.B
^THE OPERATOR ISSUED ANOTHER ^^:AUTO\\ COMMAND. ^THIS NEW ONE SUPERSEDES
THE ONE PREVIOUSLY ISSUED.
.LM0
.HL 1 ^&OMOUNT (FILE \\AND ^^MOUNT/DISMOUNT)\\\&
^^OMOUNT\\ IS A PROGRAM USED TO PROCESS
^^FILE\\ OR ^^MOUNT/DISMOUNT\\ COMMANDS.
^^FILE\\ COMMANDS ARE USED FOR FILE TRANSFERS TO OR FROM DISK
AND ^D^E^CTAPE. ^^MOUNT/DISMOUNT\\ COMMANDS ARE USED FOR THE
PHYSICAL MOUNTING OR DISMOUNTING OF DISK PACKS, MAGNETIC TAPES OR
^D^E^CTAPES. ^THE FOLLOWING DISCUSSION OF ^^OMOUNT\\ IS
FROM THE OPERATOR'S VIEWPOINT IN RESPONDING TO SUCH REQUESTS.
^REFER TO THE ^D^E^CSYSTEM-10 ^OPERATING 
^SYSTEM ^COMMANDS MANUAL FOR A DISCUSSION OF ^^MOUNT/DISMOUNT\\ AND ^^FILE\\
FROM THE USER'S VIEWPOINT.
(^ALSO SEE THE ^^OMOUNT\\  SPECIFICATION IN THE ^SOFTWARE
^NOTEBOOKS FOR ADDITIONAL OPERATOR INFORMATION.)
.B 1
^DEPENDING ON THE VOLUME OF FILE TRANSFERS, IT MAY BE
ADVANTAGEOUS FOR YOU TO RUN TWO ^^OMOUNT\\ PROGRAMS; ONE SPECIFICALLY FOR ^^FILE\\
COMMANDS TO MINIMIZE THE
WAITING PERIOD FOR COMPLETION OF A USER REQUEST. ^AT MONITOR
LOAD TIME, WHEN THE ^^OPSER\\ PROGRAM IS AUTOMATICALLY LOGGED IN
UNDER [1,2], ONE OR MORE ^^OMOUNT\\ JOBS CAN ALSO BE INITIALIZED
WITH THE APPROPRIATE COMMANDS IN THE ^^OPR.ATO\\ FILE.
.B
^YOU MAY ALSO START ^^OMOUNT\\ JOBS MANUALLY
IF THE NEED ARISES. ^IN THE FOLLOWING EXAMPLE, ^D^E^CTAPE
UNIT 6 IS ASSIGNED TO AN ^^OMOUNT\\ JOB NAMED ^M6.
.PG
.B1;.TS5,30
	^^STEP	EXPLANATION\\
.BR
	----	-----------
.B1;.LM30;.TS30;.I-30
_.^^R OPSER\\	^RUN THE ^^OPSER\\ PROGRAM.
.B1;.I-30
*:^^SLOG\\ 1,2	^LOG IN A SUBJOB UNDER [1,2].
.B1;.I-30
!:^^DEF M\\6=	^GIVE THE NAME ^M6 TO THE SUBJOB.
.B1;.I-30
!^M6-^^AS DTA\\6	^ASSIGN ^^DTA\\6 TO JOB ^M6.
.B1;.I-30
!^M6-R ^^OMOUNT\\	^RUN THE ^^OMOUNT\\ PROGRAM.
.B1;.I-30
!^M6-^^START\\	^CAUSE ^^OMOUNT\\ TO ACCEPT ALL
^^FILE\\ AND ^^MOUNT\\ REQUESTS SUBMITTED BY USERS.
.B1;.LM0;.RM70
^A SECOND ^^OMOUNT\\ JOB COULD BE INITIATED BY REPEATING ALL BUT THE
FIRST STEP ABOVE AND SUBSTITUTING, FOR EXAMPLE, THE NAME ^M7 FOR ^M6 AND
^^DTA\\7 FOR ^^DTA\\6.
^IF THIS SECOND ^^OMOUNT\\ JOB WAS FOR ^^FILE\\ REQUESTS
ONLY, THE ^^START\\ COMMAND WOULD BE ^^M7-START:FILE\\.
.B1
^IN MOST CASES, YOUR RESPONSE TO AN 
^^OMOUNT\\ REQUEST BY A USER IS TO PERFORM THE NECESSARY ACTION, AND
THEN TYPE THE SUBJOB NAME OR NUMBER FOLLOWED BY A HYPHEN
AND A CARRIAGE RETURN. ^A TYPICAL EXAMPLE OF A ^^FILE\\ COMMAND
FOLLOWS:
.B1;.I 5
!08:17:56(^M6)
.BR
.I 10
^^R JOB 13 TTY12 146,504 21 DSKB:,DSKB:CRBDOC.RNO
.BR;.I 10
MOUNT TAPE 21 [146,504] WRITE LOCKED ON DTA\\(6):
.BR;.I 5
!^M6-<^^CR\\>
.B1;.LM0;.RM70
^JOB ^M6 REQUESTED A ^D^E^CTAPE TO BE MOUNTED WITH THE SWITCH
ON ^^WRITE LOCK\\. ^AFTER YOU HAVE MOUNTED THE TAPE ON ^^DTA6\\,
SIMPLY TYPE ^M6- FOLLOWED BY A CARRIAGE RETURN. ^THIS ONE
RESPONSE COVERS 99% OF THE ^^OMOUNT\\ ^^FILE\\ REQUESTS. 
^EXPERIENCE AND CONTINUAL USE OF ^^OMOUNT\\ WILL FAMILIARIZE
YOU WITH THE REMAINING 1% OF REQUESTS.
^YOU CAN USE A DRIVE OTHER THAN THE ONE SUGGESTED
(^^DTA6\\ IN THIS CASE).  ^IF YOU CHOOSE TO MOUNT THE
^^DEC\\TAPE ON ^^DTA5\\ FOR THE ABOVE REQUEST, TYPE
^^M6-DTA5\\ OR ^M6-5 INSTEAD OF ^M6-<^^CR\\>.  ^IF YOU CHOOSE TO MOUNT
IT ON ^^DTB2\\, TYPE ^^M6-DTB2\\.
.B1
^YOU WILL ALSO HAVE TO PROCESS ^^MOUNT\\ AND
^^DISMOUNT\\ REQUESTS SUCH AS:
.B1;.I 5
!08:14:25(^M6)
.BR
.I 10
^^M JOB 17 TTY201 1,2 1 MOUNT DTA ACCT /WL
.BR
.I 10
WRITE-LOCKED
.BR
.I 10
ASSIGN DTA\\ (0)
.BR
.I 5
!^M6-<^^CR\\>
.BR
.I 5
!08:18:13(^M6)
.BR
.I 10
^^D JOB 17 TTY201 1,2 1 DISMOUNT DTA0
.BR
.I 10
PROCEED\\?
.BR
.I 5
!^M6-^Y<^^CR\\>
.B1
^THE RESPONSE TO A ^^MOUNT\\ COMMAND IS A <^^CR\\>
AS IN THE ^^FILE\\ COMMAND. ^AT DISMOUNT TIME, YOU ARE
ASKED THE QUESTION ^^PROCEED\\?. ^ANSWER WITH ONE OF THE
FOLLOWING:
.B1;.LM25;.TS25;.I-20
^REPLY	##########^ACTION
.BR;.I-20
-----	##########------
.B;.I-20
^^NO\\	^CANCEL THE REQUEST AND DELETE IT FROM THE QUEUE.
.B1;.I-20
^^YES\\	^PROCEED IF POSSIBLE.
.PG
.B1;.I-20
^REPLY	##########^ACTION
.BR;.I-20
-----	##########------
.B;.I-20
^^CANCEL\\	^SAME AS ^^NO\\.
.B1;.I-20
^^DEFER\\:T	^DEFER PROCESSING THIS REQUEST FOR THE SPECIFIED
AMOUNT OF TIME, WHERE T=TIME IN THE FORM: MM MINUTES (1440 MAXIMUM)
OR HH:MM HOURS AND MINUTES (24:00 MAXIMUM).
.B1;.I-20
^^HELP\\	^TYPE OUT LIST OF VALID REPLIES TO ^^PROCEED\\ QUESTION.
.B 1;.I -20
^^PAUSE\\	^WAIT FOR OPERATOR INPUT AFTER FINISHING THE
CURRENT REQUESTS.
.B 1;.I -20
^^START\\:X	^START PROCESSING X TYPE REQUESTS AFTER COMPLETING THE CURRENT ONE.
"X" CAN BE ^^FILE, MOUNT, NONE,\\ OR ^^ALL\\. ^^START\\ WITH NO ARGUMENT ASSUMES
A DEFAULT OF ^^ALL.\\
.B1;.I-20
^^STOP\\:X	^STOP PROCESSING X TYPE REQUESTS AFTER COMPLETING THE CURRENT ONE.
"X" CAN BE ^^FILE, MOUNT, NONE,\\ OR ^^ALL\\. ^^STOP\\ WITH NO ARGUMENT ASSUMES
A DEFAULT OF ^^ALL.\\
.B1;.I-20
^^WAIT\\	^DEFER THE REQUEST AND WAIT FOR
OPERATOR INPUT.
.B 1;.I -20
^^WHAT\\	^RETYPE PREVIOUS COMMAND AND ALL RESULTING
^^TTY\\ DIALOGUE.
.B1;.LM25
/^^START\\ AND /^^STOP\\ MAY ACCOMPANY OTHER REPLIES.
.B1;.LM0;.RM70
^RESPONSES TO ^^OMOUNT\\ REQUESTS, EITHER ^^FILE\\
OR ^^MOUNT\\, ARE NORMALLY SELF-EXPLANATORY. ^THERE ARE
TIMES, HOWEVER, WHEN SOME TYPE OF ERROR IS ENCOUNTERED AND 
SPECIAL ACTION IS REQUIRED. ^WHEN YOU RECEIVE AN ERROR MESSAGE,
STOP THE PARTICULAR COMMAND CAUSING THE ERROR,
ABORT IT, AND NOTIFY THE USER ABOUT THE PROBLEM. ^THE MOST 
COMMON ERRORS OCCUR ON ^^FILE\\ COMMANDS WHEN THE ^D^E^CTAPE
IS FULL, THE ^D^E^CTAPE DIRECTORY IS FULL, OR AN ERROR IS
ENCOUNTERED ON A PARTICULAR FILE. ^THE SEQUENCE OF COMMANDS
NECESSARY TO ABORT A COMMAND IS AS FOLLOWS:
.B1;.LM30;.TS30;.I-30
!:^^STOP M\\6	^THIS ^^OPSER\\ COMMAND WILL
CAUSE JOB ^M6 TO BE RETURNED TO MONITOR LEVEL.
.B1;.I-30
!^M6-^^START\\	^THIS PASSES THE MONITOR COMMAND,
^^START\\, TO JOB ^M6 TO REINITIALIZE THE 
^^OMOUNT\\ PROGRAM.
.B1;.I-30
!^M6-^^START\\	^THIS PASSES THE ^^START\\ COMMAND TO ^^OMOUNT\\ TO REPRINT THE
REQUEST THAT INITIATED THE ERROR.
.NT
^IF THE ^^OMOUNT\\ PROGRAM WAS RUNNING SPECIFIC REQUESTS, THE ^^START\\
COMMAND SHOULD CONTAIN OR IMPLY THE SAME ARGUMENT AS THE ORIGINAL ^^START\\ COMMAND. (^FOR
EXAMPLE, ^^START:FILE\\).
.EN
.PG
.B1;.I-30
!^M6-/^C	^THIS COMMAND CANCELS THE USER REQUEST CAUSING THE ERROR.
.B1;.LM0;.RM70
^YOU WOULD THEN SEND A MESSAGE TO THE USER INFORMING
HIM OF THE PROBLEM.
.B1
^REFER TO THE ^^OMOUNT\\ SPECIFICATION IN THE 
 ^SOFTWARE ^NOTEBOOKS AND THE ^^OMOUNT.HLP\\ FILE
FOR FURTHER DISCUSSION OF THE ^^OMOUNT\\ PROGRAM.
.HL 1 ^&QUEUE\&\\
^^QUEUE\\ IS A PROGRAM WHICH ALLOWS A USER TO ADD, SCHEDULE,
LIST, MODIFY, AND DELETE QUEUE ENTRIES IN THE VARIOUS SYSTEM
QUEUES. ^ALTHOUGH THE ^^QUEUE\\ COMMAND IS, FOR THE MOST PART,
A USER, RATHER THAN AN OPERATOR ORIENTED FUNCTION, YOU SHOULD
BECOME FAMILIAR WITH ALL OF ITS OPTIONS AND CAPABILITIES:
^^QUEUE\\ EVOKES MANY QUESTIONS FROM USERS, AND
YOU MUST BE READY TO OFFER THE MAXIMUM AMOUNT OF ASSISTANCE.
^A COMPLETE DISCUSSION OF ^^QUEUE\\ IS CONTAINED IN THE 
^^GALAXY O\\PERATIONS AND ^SYSTEM ^PROGRAMMING ^PROCEDURES MANUAL OF THE ^SOFTWARE ^NOTEBOOKS.
.B1
^THE ^^QUEUE\\ COMMAND QUEUES USER REQUESTS THAT ARE TO BE ACTED UPON BY CORRESPONDING SPOOLER
AND BATCH PROGRAMS. ^THE FOLLOWING SYSTEM QUEUES ARE AVAILABLE:
.B1;.TS5,30
	^^QUEUE MNEMONIC	CONTENTS\\
.B1;.LM10;.TS30
^^LPT\\	^LINE PRINTER REQUESTS
.BR
.B1
^^PTP\\	^PAPER TAPE PUNCH REQUESTS
.B1
^^INP\\	^BATCH SYSTEM REQUESTS
.BR
.B1
^^CDP\\	^CARD PUNCH REQUESTS
.BR
.B1
^^PLT\\	^PLOTTER REQUESTS
.B1;.LM0;.RM70
^BECAUSE THE LIST OF ^^QUEUE\\ SWITCHES IS EXTENSIVE, THE
ENTIRE LIST WILL NOT BE INCLUDED IN THIS DOCUMENT. ^THE
MORE COMMONLY USED SWITCHES WILL BE DISCUSSED ALONG WITH 
SEVERAL EXAMPLES. ^HOWEVER IT IS IMPORTANT THAT YOU
BECOME FAMILIAR WITH ALL THE SWITCHES CONTAINED IN THE
^^QUEUE\\ SPECIFICATION IN THE ^SOFTWARE ^NOTEBOOKS.
.B1
^THE BASIC FORMAT OF THE ^^QUEUE\\ COMMAND IS:
.B1;.I 5
_.^Q QUEUENAME:=FILESPEC/SWITCH
.B1;.LM0;.RM70
^IN THIS FORMAT, QUEUENAME REFERS TO THE QUEUE MNEMONIC, ^^LPT, PTP, INP, CDP\\,
OR ^^PLT\\.
FILESPEC REFERS TO A DISK FILE TO BE LISTED, 
PUNCHED ON PAPER TAPE, CARD PUNCHED, PLOTTED, OR
 INPUT TO THE ^BATCH CONTROLLER.
SWITCH REFERS TO ONE OR MORE OF THE
ALLOWABLE ^^QUEUE\\ SWITCHES; THE MOST COMMON ONES
ARE LISTED BELOW.
.PG;.TS5,30
	^^SWITCH	MEANING\\
.B1;.LM30;.TS30;.I-30
/^^AFTER\\:HHMM	^THE REQUEST CANNOT BE PROCESSED UNTIL AFTER
THE SPECIFIED TIME (24-HOUR TIME).
.B1;.I-30
/^^COPIES\\:N	^REPEAT THE OUTPUT N TIMES WHERE N = 1 - 63 INCLUSIVE.
.B;.I-30
^^/DEADLINE:\\HHMM	^THE REQUEST MUST BE STARTED BEFORE THE SPECIFIED
TIME (24-HOUR TIME).
.B1;.I-30
/^^DISPOSE:DELETE\\	^DELETE THE FILE AFTER SPOOLING.
.B1;.I-30
/^^DISPOSE:PRESERVE\\	^SAVE THE FILE AFTER SPOOLING.
.B1;.I-30
/^^DISPOSE:RENAME\\	^RENAME THE FILE INTO AREA [3,3] AND
DELETE AFTER SPOOLING.
.B1;.I-30
/^^KILL\\	^REMOVE THE SPECIFIED ENTRY FROM THE SPECIFIED
QUEUE.
.B1;.I-30
/^^LIMIT\\:N	^OUTPUT IS LIMITED TO THE SPECIFIED NUMBER OF PAGES,
CARDS, MINUTES OR FEET.
.B 1;.I -30
/^^LIST\\	^LIST THE ENTRIES IN THE QUEUE.
.B1;.I-30
/^^MODIFY\\/SWITCH:ARG	^CHANGE THE SPECIFIED SWITCH ENTRY TO THE NEW VALUE "ARG".
^MULTIPLE SWITCHES CAN BE ALTERED USING /^^MODIFY\\.
.B 1;.I -30
^^/PRIORITY\\:N	^GIVE THE REQUEST A PRIORITY WHERE N=0 - 62 INCLUSIVE.
.B 1;.I -30
^^/TAPE:IMAGE\\	^PUNCH THE TAPE IN IMAGE MODE (^^PTP\\ ONLY).
.B1;.LM0;.RM70
^THE FOLLOWING SWITCHES APPLY ONLY TO THE ^^INP\\ OR 
^BATCH QUEUE.
.B1;.TS5,30
	^^SWITCH	MEANING\\
.B1;.LM30;.TS30;.I-30
/^^CORE\\:N	^SET THE MAXIMUM CORE THAT THE JOB CAN USE
WHERE N=DECIMAL VALUE OF CORE IN ^K.
.B1;.I-30
/^^RESTART\\:0 OR 1	^IF 0, JOB CANNOT BE RESTARTED AFTER A
SYSTEM CRASH. ^IF 1, JOB CAN BE RESTARTED.
.B1;.I-30
/^^TIME\\:HHMMSS	^SPECIFY THE MAXIMUM AMOUNT OF ^^CPU\\
TIME ALLOWABLE FOR THE JOB IN HOURS-MIN-SEC.
.B1;.LM0;.RM70
^TO FURTHER SIMPLIFY THE QUEUE COMMANDS THE FOLLOWING ALTERNATIVES
ARE AVAILABLE:
.B1;.LM4;.TS13,22
^^PRINT\\	EQUALS	^^Q LPT\\:=
.B1
^^PUNCH\\	EQUALS	^^Q PTP\\:=
.B1
^^SUBMIT\\	EQUALS	^^Q INP\\:=
.B1
^^CPUNCH\\	EQUALS	^^Q CDP\\:=
.B1
^^TPUNCH\\	EQUALS	^^Q PTP\\:=
.B1
^^PLOT\\	EQUALS	^^Q PLT\\:=
.B1;.LM0;.RM70
^SOME EXAMPLES ARE GIVEN BELOW:
.B1;.TS5,30
	^^EXAMPLES	EXPLANATION\\
.BR
	--------	-----------
.B1;.LM30;.TS30;.I-30
_.^^PRINT FILEA,FILEB\\	^ENTER FILES ^^FILEA\\ AND ^^FILEB\\
INTO THE LINE PRINTER QUEUE.
.B1;.I-30
_.^^PUNCH FIL.BIN/TAP:IMAGE\\	^ENTER THE FILE ^^FIL.BIN\\
INTO THE PAPER TAPE QUEUE TO BE PUNCHED IN IMAGE MODE.
.B1;.I-30
_.^^SUBMIT FIL/AFTER\\:1800	^ENTER THE FILE ^^FIL.CTL\\
INTO THE INPUT QUEUE TO BE PROCESSED AFTER 6 PM.
.B1;.I-30
_.^^SUBMIT [2,167]FIL=/KILL\\	^KILL THE ENTRY ^^FIL.CTL\\
FOR USER [2,167] FROM THE INPUT QUEUE.
.B 1;.I -30
_.^Q	^LIST ALL ENTRIES OF ALL QUEUES.
.B;.I-30
_.^^PRINT FILEA/MOD/COPIES:3/FORMS:NARROW\\
.B
^MODIFY THE PRINT REQUESTS FOR ^^FILEA\\ TO PRODUCE 3 COPIES ON NARROW FORMS.
.B;.F;.J;.LM0;.RM70
^IT IS GOOD PRACTICE TO EXAMINE THE QUEUES PERIODICALLY CHECKING
FOR BACKLOGS OR JOBS THAT ARE STUCK IN QUEUE BECAUSE OF SOME HARDWARE
OR SOFTWARE PROBLEM. ^YOU CAN THEN MODIFY OR REMOVE REQUESTS OR
EVEN ALTER ^^/AFTER\\ AND ^^/DEADLINE\\ PARAMETERS TO SUIT YOUR
OPERATIONS SCHEDULE.
.HL 1 ^&GALAXY BATCH SYSTEM\&\\
\\^THE ^^GALAXY B\\ATCH SYSTEM OPERATES UNDER THE CONTROL OF THE
^^DEC\\SYSTEM-10 ^OPERATING ^SYSTEM, ^^TOPS-10\\, INCREASING THE EFFICIENCY
OF THE SYSTEM BY PROCESSING JOBS THAT DO NOT REQUIRE OPERATOR INTERACTION.
^THE TYPES OF JOBS THAT YOU SHOULD CONSIDER FOR RUNNING IN A BATCH
ENVIRONMENT ARE: LARGE, LONG-RUNNING JOBS; FREQUENTLY RUN JOBS;
JOBS REQUIRING LARGE AMOUNTS OF DATA; AND, JOBS REQUIRING NO USER INTERACTION.
.B
^THE ^^GALAXY B\\ATCH SYSTEM USES THE FOLLOWING SYSTEM COMPONENTS:
.B;.LM20;.TS20;.I-15
^^QUASAR\\	THE SYSTEM QUEUE MANAGER
.I-15
^^BATCON\\	THE BATCH JOB CONTROLLER
.I-15
^^QUEUE\\	THE SYSTEM QUEUEING PROGRAM
.I-15
^^LPTSPL\\	THE SPOOLING PROCESSOR FOR THE LINE PRINTER
.I-15
^^SPROUT\\	THE SPOOLING PROCESSOR FOR OTHER OUTPUT DEVICES
.I-15
^^SPRINT\\	THE SPOOLING PROCESSOR FOR INPUT DEVICES
.B;.LM0
^YOU CAN AUTOMATICALLY LOAD AND START ANY OF THE ABOVE PROGRAMS
AT MONITOR LOAD TIME BY INCLUDING THE APPROPRIATE ^^OPSER\\ COMMANDS
IN THE ^^SYS:OPR.ATO\\ FILE.
.HL 2 ^&^^QUASAR\&
QUASAR\\ IS THE MASTER CONTROLLER IN THE ^^GALAXY B\\ATCH SYSTEM. ^ALL
USER QUEUED AND SPOOLED REQUESTS ARE PROCESSED BY ^^QUASAR\\ AND
DIRECTED TO ^^BATCON\\ OR THE APPROPRIATE SPOOLER.
.B
^THERE IS NO DIRECT INTERACTION BETWEEN ^^QUASAR\\ AND THE OPERATOR.
^YOU COMMUNICATE WITH ^^QUASAR\\ VIA COMMANDS TO ^^BATCON\\ AND THE
SPOOLERS. ^^QUASAR\\ COMMUNICATES WITH YOU VIA MESSAGES PREFIXED WITH
"^^CTQ\\" THAT ARE ISSUED BY ^^BATCON\\ OR ONE OF THE SPOOLERS.
.B
^IF ^^QUASAR\\ IS NOT AUTOMATICALLY STARTED AT MONITOR LOAD TIME,
YOU CAN MANUALLY DO SO AS FOLLOWS:
.B;.LM20;.TS20;.I-15
^^_.R OPSER\\	TYPE THIS IF ^^OPSER\\ IS NOT RUNNING
.I-15
^^*:SLOG\\	LOG IN A SUBJOB
.I-15
^^*:DEF QUA=\\	GIVE THE SUBJOB THE NAME ^^QUA\\
.I-15
^^*QUA-R QUASAR\\	LOAD AND START ^^QUASAR\\
.B;.I-15
(NOW LOG IN AND LOAD ^^BATCON\\ AND THE SPOOLERS)
.B;.LM0
^IF ^^QUASAR\\ SHOULD STOP RUNNING FOR ANY REASON, YOU CAN SIMPLY
RESTART IT BY RELOADING IT IN THE SAME SUBJOB, FOR EXAMPLE:
.B;.I5
^^QUA-R QUASAR\\
.B
^HOWEVER, SINCE THE NEW ^^QUASAR\\ DOES NOT KNOW ABOUT THE EXISTENCE
OF ^^BATCON\\ AND THE SPOOLERS, YOU MUST GO THROUGH A ROUTINE OF KILLING
AND RESTARTING THEM, FOR EXAMPLE:
.B;.LM20;.TS20;.I-15
^^B-KILL\\	KILLS ^^BATCON
.I-15
L0-KILL\\	KILLS THE PRINTER SPOOLER
.I-15
^^SP-KILL\\	KILLS THE INPUT SPOOLER
.B;.LM0
^EACH OF THE ^^KILL\\ COMMANDS CAUSES ANY PROCESSING TO STOP IMMEDIATELY
AND SENDS A MESSAGE TO ^^QUASAR. B\\UT SINCE THESE JOBS ARE UNKNOWN TO THE
"NEW" ^^QUASAR\\, IT SENDS A MESSAGE TO YOU THROUGH THEM. ^THE MESSAGE IS
.B;.I5
^^?CTQMFQ MESSAGE FROM QUASAR#-#NOT A KNOWN COMPONENT\\
.B
^THIS MEANS THAT ALTHOUGH YOU HAVE STOPPED THE ACTUAL PROCESSING OF
THE JOBS, THE ORIGINAL REQUESTS FOR THEM STILL EXIST IN THE QUEUES.
^THEY WILL BE PROCESSED IN THE NORMAL WAY WHEN THE "NEW" ^^QUASAR\\
IS PUT IN CONTACT WITH ^^BATCON\\ AND THE SPOOLERS. ^THIS OCCURS
AS SOON AS THE PROGRAMS HAVE BEEN ^^START\\ED AS FOLLOWS:
.B;.I5
^^B-START
.I5
L0-START
.I5
SP-START\\
.B3
4.4.1.1##^&^COMPONENT-TO-^^QUASAR#M\\ESSAGES\&#-#^THE
FOLLOWING MESSAGES ARE SYSTEM ERROR MESSAGES ISSUED BY THE
INTERFACE MODULE WHICH ^^BATCON\\ AND THE SPOOLERS USE TO COMMUNICATE
WITH ^^QUASAR\\. ^MOST OF THESE MESSAGES INDICATE SERIOUS SYSTEM PROBLEMS;
YOU SHOULD BRING THEM TO THE ATTENTION OF THE SYSTEM PROGRAMMER
OR SYSTEM ADMINISTRATOR.
.B2;.LM10;.TS10;.I-10
?^^CTQCAP	CANNOT ACQUIRE A PID\\
.B
^THE PROGRAM (I.E., ^^BATCON\\ OR ONE OF THE SPOOLERS) DOES NOT
HAVE PRIVILEGES TO ACQUIRE A SYSTEM NAME FROM ^^INFO\\. ^THEY MUST BE RUN
UNDER [1,2] OR A REMOTE OPERATOR NUMBER [1XX.2].
.B2;.I-10
?^^CTQFCI	FAILURE TO CONNECT TO THE INTERRUPT SYSTEM\\
.B
^A FAILURE OCCURRED WHEN THE PROGRAM (I.E., ^^BATCON\\ OR ONE OF THE
SPOOLERS) ATTEMPTED TO ENABLE A ^^PSI\\ SYSTEM MONITOR CALL FOR
^^IPCF\\ INTERRUPTS. ^CONSULT THE SYSTEM PROGRAMMER.
.B2;.I-10
?^^CTQIRF	IPCF RECEIVE FAILURE\\
.B
^THE ^^IPCFR\\. MONITOR CALL FAILED WHEN THE PROGRAM (I.E., ^^BATCON\\ OR ONE
OF THE SPOOLERS) TRIED TO RECEIVE AN ^^IPCF\\ MESSAGE.
.B2;.I-10
?^^CTQMFQ	MESSAGE FROM QUASAR\\#-#XXX
.B
^THE XXX STANDS FOR ONE OF THE FOLLOWING MESSAGES:
.B2
^^ILLEGALLY FORMATTED DEVICE NAME\\
.B
^THE OPERATOR SPECIFIED A DEVICE NAME IN A FORMAT THAT IS UNACCEPTABLE
TO THE PROGRAM (I.E., ^^BATCON\\ OR ONE OF THE SPOOLERS).
.B2
^^ILLEGAL MESSAGE TYPE\\
.B
^THE COMPONENT (I.E., ^^BATCON\\ OR ONE OF THE SPOOLERS) SENT A MESSAGE
TO ^^QUASAR\\ IN AN INVALID FORMAT. ^THIS INDICATES A PROBLEM WITH
THE PROGRAM THAT SENT THE MESSAGE. ^CONSULT THE SYSTEM PROGRAMMER.
.B2
^^INSUFFICIENT PRIVILEGES ENABLED\\
.B
^AN ATTEMPT WAS MADE TO RUN ^^BATCON\\ OR ONE OF THE SPOOLERS BY A USER
WHO DOES NOT HAVE SUFFICIENT PRIVILEGES TO RUN THESE PROGRAMS. ^^BATCON\\
MUST BE RUN UNDER [1,2]. ^THE SPOOLERS MUST BE RUN EITHER UNDER [1,2]
OR THROUGH A REMOTE OPERATOR PROJECT-PROGRAMMER NUMBER. ^THE FORMAT
FOR A REMOTE OPERATOR PROJECT-PROGRAMMER NUMBER IS [1NN,2] WHERE
NN REPRESENTS THE REMOTE STATION NUMBER. ^FOR EXAMPLE, A REMOTE OPERATOR
AT STATION 36 WOULD LOG IN WITH A [P,PN] OF [136,2].
^IN ADDITION, ^^LPTSPL\\ MUST ALWAYS BE RUN FROM ^^SYS\\:
.B2
^^NOT A KNOWN COMPONENT
.B
QUASAR\\ IS NOT IN CONTACT WITH THE COMPONENT (I.E., ^^BATCON\\ OR
ONE OF THE SPOOLERS) THAT TRIED TO SEND A MESSAGE. ^THIS CONDITION GENERALLY
INDICATES ONE OF TWO PROBLEMS. ^EITHER THE COMPONENT ITSELF IS
DEFECTIVE OR ^^QUASAR\\ CRASHED AND WHEN IT WAS RUN AGAIN, THE OPERATOR
DID NOT PUT THE COMPONENTS BACK INTO CONTACT WITH IT. ^CONSULT THE
SYSTEM PROGRAMMER.
.B2
^^SPECIFIED REQUEST IS NOT YOURS
.B
QUASAR\\ RECEIVED A MESSAGE THAT DOES NOT APPLY TO THE REQUEST IT IS
CURRENTLY PROCESSING. ^THIS CONDITION INDICATES A DIFFICULTY WITH THE
PROGRAM THAT SENT THE MESSAGE. ^CONSULT THE SYSTEM PROGRAMMER.
.B2
^^UNKNOWN QUEUE SPECIFIED
.B
QUASAR\\ RECEIVED A MESSAGE TO PROCESS A QUEUE REQUEST BUT THE MESSAGE
SPECIFIED A QUEUE THAT IS NOT KNOWN TO ^^QUASAR\\. ^THIS CONDITION INDICATES
A DIFFICULTY WITH THE PROGRAM THAT SENT THE MESSAGE. ^CONSULT
THE SYSTEM PROGRAMMER.
.B2;.I-10
?^^CTQNGS	NO GALAXY-10 SUPPORT IN THIS MONITOR\\
.B
^THE MONITOR CURRENTLY RUNNING DOES NOT SUPPORT THE ^^GALAXY\\ SYSTEM.
^IT SHOULD BE A 6.02 OR LATER MONITOR AND HAVE ^^VMSER, PSISER,\\ AND ^^IPCSER.\\
.B2;.I-10
?^^CTQSIF	SEND TO INFO FAILED\\
.B
^THE PROGRAM (I.E., ^^BATCON\\ OR ONE OF THE SPOOLERS) TRIED TO SEND AN
^^IPCF\\ MESSAGE TO ^^INFO\\ AND THE ^^IPCFS.\\ MONITOR CALL FAILED.
^THIS IS INDICATIVE OF AN ^^IPCF\\ PROBLEM. ^CONSULT THE SYSTEM PROGRAMMER.
.B2;.I-10
?^^CTQSQF	SEND TO QUASAR FAILED\\
.B
^THE PROGRAM (I.E., ^^BATCON\\ OR ONE OF THE SPOOLERS) TRIED TO SEND AN
^^IPCF\\ MESSAGE TO ^^QUASAR\\ AND THE ^^IPCFS\\. MONITOR CALL FAILED. ^THIS
IS INDICATIVE OF AN ^^IPCF\\ PROBLEM. ^CONSULT THE SYSTEM PROGRAMMER.
.LM0
.HL 2 ^&^^BATCON\&\\
^^BATCON\\ IS A SYSTEM PROGRAM THAT READS ENTRIES FROM THE SYSTEM BATCH
QUEUE AND INITIATES AND CONTROLS BATCH JOBS. ^ENTRIES IN
THE SYSTEM BATCH QUEUE (^^INP\\:) CONSIST OF USER 
DISK FILES CONTAINING MONITOR COMMANDS, SYSTEM PROGRAM COMMANDS,
DATA NORMALLY ENTERED FROM A TERMINAL, AND ^^GALAXY\\ ^BATCH SYSTEM
COMMANDS. ^THE ACTUAL FORMAT OF THESE FILES WILL NOT BE 
DISCUSSED HERE, BUT THE OPERATOR SHOULD BECOME FAMILIAR WITH
THESE CONTROL FILES BY READING THE ^^GALAXY\\ ^BATCH ^SYSTEM  DOCUMENTATION AND
ACTUALLY CREATING THEM. ^THIS SECTION DEALS WITH HOW THE 
OPERATOR CONTROLS AND RESPONDS TO ^^BATCON\\ TO ENSURE 
MAXIMUM EFFICIENCY OF THE PROGRAM.
.B1
^^BATCON\\ CAN BE INITIALIZED AUTOMATICALLY AT MONITOR LOAD
TIME ALONG WITH THE PREVIOUSLY MENTIONED SPOOLER JOBS. ^IT IS
RECOMMENDED THAT IT BE CONTROLLED THROUGH ^^OPSER\\. ^THE 
OPERATOR INTERACTION WITH ^^BATCON\\ CONSISTS MAINLY OF 
CHANGING CERTAIN PARAMETERS AT PRESET TIMES DURING THE DAY TO
REGULATE ^^BATCON\\'S SCHEDULING OF JOBS. ^^BATCON\\ SCHEDULES
JOBS BASED ON CERTAIN PARAMETERS FOR BOTH INDIVIDUAL JOBS AND
TOTAL NUMBER OF JOBS ABLE TO BE RUN. ^A LIST OF THESE 
PARAMETERS ALONG WITH COMMONLY USED ^^BATCON\\ COMMANDS IS
PRESENTED BELOW. ^FOR A COMPLETE DISCUSSION OF ALL POSSIBLE
COMMANDS THE OPERATOR IS REFERRED TO THE ^^GALAXY B\\ATCH ^SYSTEM
DOCUMENTATION IN THE ^SOFTWARE ^NOTEBOOKS.
.B3
4.4.2.1##^&^^BATCON C\\OMMANDS\&#-#^THE
GENERAL FORMAT OF A COMMAND STRING DIRECTED TO ^^BATCON\\ THROUGH ^^OPSER\\ IS:
.B1;.TS10
	^BN-COMMAND ARGUMENT
.B1;.LM15;.TS15;.I-15
WHERE
.B;.I-10
^B	IS THE LETTER THAT MUST PRECEDE ALL COMMANDS ISSUED TO 
^^BATCON\\. ^B MUST BE THE ^^OPSER\\ DEFINED SUBJOB NAME FOR ^^BATCON\\
IF ^^BATCON\\ IS BEING RUN UNDER ^^OPSER\\.
.PG
.B1;.I-10
N	INDICATES THE ^^BATCON\\ SUBJOB NUMBER. ^IF YOU OMIT
THE N IN YOUR COMMAND STRING, ^^BATCON\\ ASSUMES THE COMMAND IS
INTENDED FOR THE LAST SUBJOB YOU SPECIFIED IN A PREVIOUS COMMAND. ^YOU
MAY SUBSTITUTE THE WORD ^^ALL\\ FOR N. ^IN THIS CASE, ALL ACTIVE BATCH
SUBJOBS ARE THE SUBJECTS OF THE COMMAND.
.B
^SOME ^^BATCON\\ COMMANDS ARE GENERAL (I.E., DO NOT APPLY TO A SPECIFIC
SUBJOB) AND HENCE DO NOT REQUIRE THE SUBJOB NUMBER. ^IN THESE CASES
YOU SHOULD OMIT THE SUBJOB NUMBER. ^THE FORMAT OF THE COMMAND THEN BECOMES:
.B;.I5
^B-COMMAND ARGUMENT
.B1;.I-10
COMMAND	IS ONE OF THE COMMANDS DESCRIBED BELOW. ^COMMANDS
MAY BE ABBREVIATED TO AS FEW LETTERS AS ARE NECESSARY TO
INDICATE A UNIQUE COMMAND.
.NT
^THERE IS AN EXCEPTION TO THIS RULE. ^^ST\\ IS AN ACCEPTED
ABBREVIATION FOR ^^START\\. ^THEREFORE, IF THE COMMAND
^^STOP\\ IS DESIRED, AT LEAST ^^STO\\ MUST BE TYPED.
.EN
.LM15;.TS15;.I-10
ARGUMENT	VARIES FOR EACH COMMAND AND
MAY BE A NUMBER, A STRING OF CHARACTERS, A KEY WORD, OR IT
MAY NOT BE REQUIRED.
.B1;.LM0;.RM70
^IF A COMMAND REQUIRES AN ARGUMENT, IT MUST BE SPECIFIED;
OTHERWISE, ^^BATCON\\ WILL ISSUE AN ERROR MESSAGE. 
^THE DEFAULT VALUE FOR AN ARGUMENT WILL BE ASSUMED ONLY 
WHEN THE COMMAND ITSELF IS NOT GIVEN.
.B1
^THE COMMANDS AVAILABLE TO THE OPERATOR FALL INTO THREE 
CATEGORIES:
.LS;.LE;^COMMANDS TO SET PARAMETERS FOR ^BATCH JOBS (REFER TO 
^TABLE 4-1),
.LE;^COMMANDS TO DISPLAY THE CURRENT PARAMETER SETTINGS (REFER
TO ^TABLE 4-2), AND
.LE;^COMMANDS TO CONTROL ^BATCH SUBJOBS (REFER TO ^TABLE 4-3).
.ELS
.PG
.B2
.C
^TABLE 4-1
.C
^COMMANDS TO ^SET ^PARAMETERS FOR ^BATCH ^JOBS
.B2;.TS2,30
	^COMMAND	^EXPLANATION
.B2;.LM15;.RM68;.TS15;.I-13
^^CORE\\ N	^LIMITS THE TOTAL CORE AVAILABLE FOR ALL ^BATCH JOBS
TO N^K, WHERE N REPRESENTS A DECIMAL NUMBER IN THE RANGE OF ZERO (0)
TO THE AMOUNT OF SWAPPING SPACE AVAILABLE. ^THE DEFAULT IS 1.5 TIMES
THE AMOUNT OF PHYSICAL MEMORY THE SYSTEM MAKES AVAILABLE TO THE USER. (^SEE NOTE 1.)
.FN3
.B;.LM2;.RM68
------------------
.BR
^NOTE 1:##^THIS COMMAND IS NOT AVAILABLE IF NO CORE ENFORCEMENT WAS SPECIFIED AT ^^GALAXY\\ SYSTEM GENERATION TIME.
.END FOOTNOTE
.B;.LM15;.RM68;.TS15;.I-13
^^EXIT\\	^CEASES SELECTION OF NEW JOBS, WAITS FOR CURRENTLY ACTIVE
JOBS TO BE COMPLETED, AND THEN RETURNS TO THE MONITOR.
.B;.I-13
^^MCORE\\ N	^LIMITS TO N^K THE CORE AVAILABLE FOR AN INDIVIDUAL ^BATCH
JOB. ^THE N STANDS FOR A DECIMAL NUMBER IN THE RANGE FROM ZERO (0)
TO ^^CORMAX\\ (THE PARAMETER SET BY THE ^^OPSER\\ COMMAND
":^^SET CORMAX\\" OR THE VALUE BUILT INTO THE SYSTEM AT ^^MONGEN\\ TIME.
^THE DEFAULT IS THE VALUE OF ^^CORMAX\\. (^SEE NOTE 1.)
.B;.I-13
^^MJOB\\ N	^LIMITS THE NUMBER OF ^BATCH JOBS THAT CAN BE RUN CONCURRENTLY
TO N, WHICH REPRESENTS A DECIMAL NUMBER IN THE RANGE ZERO (0)
TO THE VALUE OF THE ^^JOBMAX\\ ASSEMBLY PARAMETER. (^REFER TO THE ^^BATCON\\
SPECIFICATION IN THE ^SOFTWARE ^NOTEBOOKS FOR MORE INFORMATION ABOUT ^^JOBMAX\\.)
.B;.I-13
^^MTIME\\ N	^LIMITS EACH INDIVIDUAL ^BATCH JOB TO N SECONDS OF ^^CPU\\
TIME, WHERE N IS A DECIMAL NUMBER IN THE RANGE ZERO (0) TO 262,143
SECONDS. ^ANY ^BATCH JOBS IN THE INPUT QUEUE THAT HAVE ESTIMATES
LARGER THAN N WILL NOT BE SELECTED FOR EXECUTION BY ^^BATCON\\. ^THE
DEFAULT IS NO LIMIT.
.B;.I-13
^^NEXT\\ N	^SELECTS THE JOB WITH THE QUEUE SEQUENCE NUMBER N AS THE
NEXT JOB TO BE PROCESSED.
.B;.I-13
^^RESET\\	^STOPS SCHEDULING NEW JOBS, WAITS FOR ALL CURRENTLY
ACTIVE JOBS TO BE COMPLETED, AND RETURNS TO OPERATOR COMMAND WAIT. ^AT THIS POINT,
ALL PARAMETERS ARE ^^RESET\\ TO THEIR DEFAULT SETTINGS.
.B;.I-13
^^START\\	^BEGINS ^BATCH PROCESSING. ^YOU CAN ALSO USE THIS COMMAND
TO CANCEL THE EFFECT OF A ^^RESET\\ OR ^^EXIT\\ COMMAND.
.B;.I-13
^^TIME\\ N	^LIMITS THE TOTAL AMOUNT OF ^^CPU\\ TIME AVAILABLE
TO ALL ^BATCH JOBS TO N SECONDS, WHERE N REPRESENTS A NUMBER IN THE RANGE
ZERO (0) TO 262,143 SECONDS. ^THE DEFAULT IS NO LIMIT.
.LM0;.PG
.B2;.C
^TABLE 4-2
.C
^COMMANDS TO ^DISPLAY THE ^CURRENT ^PARAMETER ^SETTINGS
.B2;.LM2;.TS5,30;.F;.J
^COMMAND	^EXPLANATION\\
.B 2;.LM15;.RM68;.TS15;.I-13
^^CURRENT\\	^TYPE OUT THE CURRENT VALUES OF THE PARAMETERS
SET BY THE COMMANDS IN ^TABLE 4-1 ABOVE. ^ALSO, TYPE
OUT THE NUMBER OF THE CURRENT DEFAULT SUBJOB, THE NUMBER OF
ACTIVE JOB STREAMS AND ANY EXCEPTIONAL CONDITIONS THAT AFFECT
THE ^BATCH ^SYSTEM.
.B;.I-13
^^HELP\\	^LIST ALL THE VALID ^^BATCON\\ COMMANDS.
^ONLY THE COMMANDS THEMSELVES WILL BE LISTED; DETAILED 
DESCRIPTIONS ARE GIVEN IN THIS SECTION OF THE ^OPERATOR'S
^GUIDE.
.B1;.I-13
^^MONJOB\\	^TYPE OUT THE CORRESPONDENCE BETWEEN THE
^BATCH SUBJOB NUMBER AND THE MONITOR JOB NUMBER.
.B1;.I-13
^^WHAT\\	^TYPE OUT A DESCRIPTION OF THE CURRENT JOB:
THE SUBJOB NUMBER, THE MONITOR JOB NUMBER, THE JOB
NAME, THE PROJECT-PROGRAMMER NUMBER, THE PROGRAM RUNNING,
ITS STATE AND THE AMOUNT OF ^^CPU\\ TIME USED. ^IN ADDITION,
THIS COMMAND CAUSES THE LAST LINE OF TEXT ENTERED INTO THE
SPECIFIED JOB'S ^^LOG\\ FILE TO BE DISPLAYED.
.B2
.LM0;.C
^TABLE 4-3
.C
^COMMANDS TO ^CONTROL ^BATCH ^SUBJOBS
.B2;.LM2;.TS30
^COMMAND 	^EXPLANATION
.B2;.LM15;.TS15;.I-13
^^EXAMINE\\ N	^DISPLAY THE NEXT N LINES OF THE CONTROL FILE
OF THE SPECIFIED SUBJOB ON THE OPERATOR'S TERMINAL. ^ONLY THE
LINES CONTAINED IN THE CURRENT CORE BUFFERS CAN BE DISPLAYED.
N IS A POSITIVE, NON-ZERO, DECIMAL NUMBER AND MUST BE SPECIFIED. ^IF N
EXCEEDS THE NUMBER OF REMAINING LINES IN THE CONTROL FILE, THE DISPLAY
WILL STOP AT THE END OF THE FILE.
.B1;.I-13
^^GO\\ MESSAGE	^CONTINUE THE SPECIFIED SUBJOB THAT HAS EITHER BEEN
HALTED BY THE ^^STOP\\ COMMAND OR IS WAITING FOR A RESPONSE.
^THE MESSAGE IS OPTIONAL, BUT
IF PRESENT, IT WILL BE PLACED IN THE ^^LOG\\ FILE OF THE 
SPECIFIED SUBJOB AND BE INDICATED AS A COMMENT.
.B1;.I-13
^^KILL\\ ARGUMENT;MESSAGE
.B
^CANCEL THE SPECIFIED SUBJOB.
^ARGUMENT MUST BE ONE OF THE FOLLOWING:
.B1;.LM15;.RM68
^^FLUSH\\#-#CANCEL WITHOUT ERROR RECOVERY OR AUTOMATIC
QUEUEING OF OUTPUT (PASSES THE SWITCH /^Z:0 TO ^^KJOB\\).
.B1
^^ERROR\\#-#CANCEL WITH NORMAL USER ERROR RECOVERY.
.B1
^^NERROR\\#-#CANCEL WITHOUT ERROR RECOVERY.
.PG;.LM0;.C
^TABLE 4-3 (^CONT.)
.C
^COMMANDS TO ^CONTROL ^BATCH ^SUBJOBS
.B2;.TS30
##^COMMAND	^EXPLANATION
.B2;.LM15;.TS15
^IF THE ARGUMENT IS NOT SPECIFIED, ^^KILL ERROR\\ IS ASSUMED.
.B1
^THE MESSAGE IS OPTIONAL, BUT IF PRESENT, IT WILL APPEAR AS
A COMMENT IN THE ^^LOG\\ FILE OF THE SPECIFIED SUBJOB.
.NT
^IF THE ARGUMENT TO THIS COMMAND IS MISSING, ANY MESSAGE
MUST BE PRECEDED BY A SEMICOLON (;) OR AN EXCLAMATION POINT
(!).
.EN
.B1;.LM15;.TS15;.I-13
^^OPERATOR\\ MESSAGE
.B
^SEND THE SUPPLIED MESSAGE TO THE SPECIFIED
SUBJOB. ^THIS COMMAND IS THE RESPONSE TO DIALOGUE MODE AND HAS
NO EFFECT UNLESS THE USER HAS INCLUDED THE ^BATCH COMMAND,
_.^^OPERATOR\\, WITHIN THE CONTROL FILE. ^DIALOGUE MODE IS THE
OPERATOR-PROGRAM COMMUNICATION FACILITY PROVIDED BY ^^BATCON\\.
.B1;.I-13
^^REQUEUE\\ HH:MM
.B
^RETURN THE SPECIFIED SUBJOB TO THE
SYSTEM INPUT QUEUE FOR PROCESSING LATER. ^THE ARGUMENT HH:MM
IS USED TO GIVE THE SUBJOB AN ^^AFTER\\ PARAMETER (E.G., 
^B1-^^REQUEUE\\ 1:00, REQUEUES SUBJOB 1 AND PROVIDES AN 
^^AFTER\\ PARAMETER OF ONE HOUR). ^IF THE ARGUMENT IS MISSING,
THE ASSEMBLY PARAMETER ^^REQTIM\\ IS USED. ^CONSULT THE SYSTEM
ADMINISTRATOR TO DETERMINE THE VALUE OF THE ASSEMBLY PARAMETERS.
.NT
^WHEN SPECIFYING AN ^^AFTER\\ TIME, IF ONLY ONE SET OF NUMBERS
IS SPECIFIED,  MINUTES WILL BE ASSUMED. ^IT IS ONLY WHEN TWO
SETS OF NUMBERS, SEPARATED BY A COLON ARE SPECIFIED THAT HOURS
AND MINUTES ARE ASSUMED. ^EXAMPLES ARE GIVEN BELOW.
.EN
.LM15;.RM68
^B1-^^REQUEUE\\ 20
.B1
REQUEUES SUBJOB 1 AND PROVIDES AN ^^AFTER\\ PARAMETER OF 
20 MINUTES.
.B1
^B11-^^REQUEUE\\ 1:30
.B1
REQUEUES SUBJOB 11 AND PROVIDES AN ^^AFTER\\ PARAMETER OF 
1 HOUR AND 30 MINUTES.
.PG;.LM0;.C
^TABLE 4-3 (^CONT.)
.C
^COMMANDS TO ^CONTROL ^BATCH ^SUBJOBS
.B2;.TS30
##^COMMAND	^EXPLANATION
.B2;.LM15;.TS15
^B3-^^REQUEUE\\ 100
.B1
REQUEUES SUBJOB 3 AND PROVIDES AN ^^AFTER\\ PARAMETER OF
100 MINUTES (1 HOUR AND 40 MINUTES).
.B1;.I-13
^^ROUTE\\ A ^^TO\\ B
.B
^ROUTE ALL OUTPUT DESTINED FOR STATION "A"
TO STATION "B". ^STATION "A" REFERS TO THE USER'S LOGICAL LOCATION
AS LOGGED IN OR CHANGED VIA THE ^^LOCATE\\ COMMAND. A AND B ARE 2 DIGIT
OCTAL NODE NUMBERS IN THE RANGE, 01-77.
.NT ^^WARNING\\
\\^USE DISCRETION WHEN BUILDING CONTROL FILES USING THE ^^ROUTE\\ COMMAND;
THIS COMMAND IS LIKELY TO BE CHANGED OR SUPERSEDED IN THE FUTURE.
.EN
.B;.I-13
^^STOP\\ MESSAGE
.B
^HALT THE SPECIFIED SUBJOB. ^THE JOB
WILL NOT BE RESUMED UNTIL A ^^GO\\ COMMAND IS ISSUED. ^THE
MESSAGE IS OPTIONAL BUT IF PRESENT, IT WILL APPEAR AS A 
COMMENT IN THE ^^LOG\\ FILE OF THE SPECIFIED SUBJOB.
.B1;.I-13
^^TELL\\ MESSAGE
.B
^ENTER THE SUPPLIED TEXT AS A COMMENT IN THE
^^LOG\\ FILE OF THE SPECIFIED SUBJOB.
.LM0;.RM70;.B3
4.4.2.2##^&^^BATCON#O\\PERATION\&#-#^^BATCON\\
IS NORMALLY INITIALIZED AUTOMATICALLY AT MONITOR
LOAD TIME REQUIRING NO OPERATOR INTERVENTION. ^IF FOR
SOME REASON YOU MUST START ^^BATCON\\ MANUALLY UNDER ^^OPSER\\,
THE FOLLOWING PROCEDURE, WITH APPROPRIATE COMMANDS AND ARGUMENTS, SHOULD BE FOLLOWED:
.B1;.TS5,30
	^^STEP	EXPLANATION\\
.BR
	----	-----------
.B1;.LM30;.TS30;.I-30
!:^^SLOG\\ 1,2	^LOG IN AN ^^OPSER\\ SUBJOB UNDER [1,2].
.B1;.I-30
!:^^DEF B\\=	^GIVE THE SUBJOB THE NAME ^B. ^IT IS VERY
IMPORTANT TO NOTE HERE THAT THE LETTER ^B IS RESERVED
FOR ^^BATCON\\ AND THAT NO OTHER SUBJOB MAY BE SO DEFINED.
.B1;.I-30
!^B-^R ^^BATCON\\	^RUN THE ^^BATCON\\ PROGRAM.
.B1;.I-30
!^^B-MJOB\\ 4	^LIMIT NUMBER OF JOBS TO 4.
.PG;.TS5,30;.I-30
	^^STEP	EXPLANATION\\
.I-30
	----	-----------
.B;.TS30;.I-30
!^^B-MCORE\\ 56	^LIMIT SINGLE JOB CORE TO 56^K.(^SEE NOTE 1)
.FN5
.B
------------------
.BR
^NOTE 1:#^NOT AVAILABLE IF THE ^^DEFCOR\\ ASSEMBLY PARAMETER IS ZERO (0).
.END FOOTNOTE
.B1;.I-30
!^^B-CORE\\ 200	^LIMIT TOTAL JOB CORE TO 200^K.(^SEE NOTE 1)
.B1;.I-30
!^^B-MTIME\\ 3600	^LIMIT SINGLE JOB ^^CPU\\ TIME TO 
3600 SECONDS.
.B1;.I-30
!^^B-TIME\\ 7500	^LIMIT TOTAL JOB ^^CPU\\ TIME TO 
7500 SECONDS.
.B1;.I-30
!^^B-START\\	^START SCHEDULING JOBS.
.B1;.LM0;.RM70
^ONCE ^^BATCON\\ IS STARTED, YOU NEED ONLY
TO ADJUST PARAMETERS TO MAINTAIN OPTIMUM SYSTEM PERFORMANCE.
^AT VARIOUS TIMES DURING THE DAY THE FOLLOWING PARAMETERS
MIGHT BE EITHER INCREASED OR DECREASED DEPENDING UPON THE
CURRENT SYSTEM LOAD.
.B1;.TS5
	^^MJOB
.BR
	MTIME
.BR
	MCORE(S\\EE NOTE 1)
.BR
	^^TIME
.BR
	CORE\\(^SEE NOTE 1)
.B1
^THE INTENDED EFFECT OF ADJUSTING THESE PARAMETERS IS TO
PREVENT ^^BATCON\\ FROM OVERLOADING THE SYSTEM DURING PEAK
TIMES, AND TO DEFER THE LARGER JOBS TO THE SLACK TIMES OF
THE DAY. ^YOU SHOULD BE FAMILIAR WITH THE EFFECT THE
VARIOUS COMMANDS HAVE ON ^^BATCON\\.
.B1
^A USER CONTROL FILE INCLUDES ALL THE INSTRUCTIONS NECESSARY TO
COMPLETE A SPECIFIED TASK. ^AS PART OF THE CONTROL FILE
A USER MAY INCLUDE ^^FILE, MOUNT/DISMOUNT\\, AND ^^PLEASE\\ COMMANDS.
^THE ^^FILE\\, ^^MOUNT\\, AND ^^DISMOUNT\\ COMMANDS REQUIRE NO SPECIAL
ACTION BY YOU AS FAR AS ^^BATCON\\ IS CONCERNED. ^THEY ARE HANDLED
THROUGH THE ^^OMOUNT\\ JOBS ALONG WITH REGULAR INTERACTIVE 
USERS. ^THE ^^PLEASE\\ COMMANDS DO REQUIRE
A SPECIAL RESPONSE IN ORDER FOR THE JOB TO CONTINUE.
^WHEN A SUBJOB ISSUES A ^^PLEASE\\ COMMAND, THE OUTPUT IS 
DIRECTED TO THE TERMINAL CONTROLLING ^^BATCON\\.
^UPON RECEIPT OF SUCH A COMMAND YOU MUST TAKE WHATEVER
ACTION IS NECESSARY AND THEN INDICATE TO THE SUBJOB THAT YOU HAVE
DONE WHAT WAS NECESSARY BY TYPING ^BN-^E^S^CAPE WHERE
N IS THE SUBJOB NAME OR NUMBER. ^AN EXAMPLE OF THIS PROCESS
FOLLOWS:
.B1;.TS5
	!18:42:33 (^B)
.BR
.TS10
	^^SUBJOB_# 1####JOB_#6
.BR
.TS10
	PLEASE USE DECTAPE 2-167-1 FOR NEXT MOUNT
.BR
.TS10
	WAITING\\....
.BR
.TS5
	!^B1-$
.B1;.PS69,70
^YOUR ONLY RESPONSE IN THE EXAMPLE ABOVE WAS ^B1-^E^S^CAPE
 (^E^S^CAPE PRINTS AS $) TO INDICATE SUCCESSFUL
COMPLETION OF THE ^^PLEASE\\ REQUEST. ^AT TIMES YOU
MAY NEED TO SEND A MESSAGE TO THE USER WHO SUBMITTED THE 
BATCH REQUEST. ^THE ^^TELL\\ COMMAND IS USED TO ENTER SUCH 
A MESSAGE INTO THE USER'S ^^LOG\\ FILE. ^THE ^^LOG\\ FILE CONTAINS A RUNNING
TRANSACTION OF THE PROGRESS OF THE ^BATCH JOB AND IS PRINTED
UPON COMPLETION OF THE ^BATCH JOB. ^IN THE ABOVE EXAMPLE
IF YOU ARE UNABLE TO FIND THE USER ^D^E^CTAPE YOU 
MIGHT USE THE FOLLOWING COMMAND TO INFORM THE USER:
.PG
.B1
^B1-^^TELL CANNOT FIND TAPE 2-167-1 WILL ABORT MOUNT COMMAND\\
.BR
^B1-$
.B 1;.PS67,70
^IT IS VERY IMPORTANT THAT YOU MONITOR THE ^^BATCON\\
JOB AND ITS SUBJOBS PERIODICALLY TO ENSURE THAT ALL JOBS ARE
RUNNING AND ARE NOT HUNG IN A WAIT OR  _^^C STATE. ^IF A JOB IS
WAITING FOR OPERATOR ACTION, PERIODICALLY A MESSAGE WILL BE
TYPED ON YOUR OPERATOR TERMINAL. ^THE MESSAGE CONTAINS 
INFORMATION ABOUT THE JOB AND THE TEXT, "^^WAITING FOR RESPONSE\\",
FOLLOWED BY SEVERAL BELLS. ^THE FREQUENCY OF THIS MESSAGE 
NORMALLY IS ONE MINUTE. ^HOWEVER, THIS FEATURE MAY BE CHANGED
OR REMOVED ENTIRELY BY RESETTING THE ASSEMBLY PARAMETER,
^^PROMPT\\.
.B1
^TO MONITOR A ^^BATCON\\ JOB, YOU SHOULD USE THE FOLLOWING COMMANDS:
.TS 30;.B1;.LM 30;.I -25
!:^^WHAT B\\	^PRINTS OUT THE STATUS OF ^^BATCON\\	(AN ^^OPSER\\ COMMAND)
.B1;.I -25
!^^B-CURR\\	^PRINTS OUT THE CURRENT VALUES OF THE ^^BATCON\\ PARAMETERS.
.B1;.I -25
!^^BALL-WHAT\\	^PRINTS OUT THE STATUS OF ALL ^^BATCON\\ SUBJOBS
.B1;.I -25
!^BN-^^WHAT\\	^PRINTS OUT THE STATUS OF ^^BATCON\\ SUBJOB N
.B 1;.LM 0
^YOU CAN THEN DETERMINE FROM THE OUTPUT OF THESE
COMMANDS ANY IRREGULARITIES AND TAKE THE NECESSARY ACTION TO
CORRECT THE PROBLEM. ^IF FOR SOME REASON YOU MUST
ABORT A ^BATCH JOB, THE FOLLOWING ACTION IS REQUIRED:
.B1;.I 5
^^BALL-WHAT\\
.B1
^FROM THE INFORMATION PRINTED OUT, YOU CAN DETERMINE
THE ^BATCH SUBJOB NUMBER. ^KNOWING THE SUBJOB NUMBER IS VERY IMPORTANT.
^YOU MUST BE ABSOLUTELY SURE THAT YOU ARE ABORTING
THE CORRECT ONE.
.B1;.I 5
^BN-^^KILL\\
.B1
^THIS CAUSES SUBJOB N TO BE ABORTED AND USES THE DEFAULT
ARGUMENT ^^ERROR\\ WHICH ALLOWS FOR ERROR PROCESSING.
.B1
^WHENEVER YOU USE THE ^^TELL\\ OR  ^^KILL\\ COMMAND
A RECORD OF THIS APPEARS IN THE USER'S ^^LOG\\ FILE. ^IT IS
THEREFORE VERY IMPORTANT THAT YOU USE THE ^^TELL\\
COMMAND TO INFORM THE USER OF ANY ABNORMALITIES ENCOUNTERED.
^THIS COMMAND DOES NOT HINDER THE PROCESSING OF THE JOB BUT
SERVES AS A MEANS OF COMMUNICATION WITH THE USER EVEN THOUGH
HE IS NOT NECESSARILY PRESENT ON THE SYSTEM.
.B3
4.4.2.3##^&^^BATCON#O\\PERATOR#^MESSAGES\&#-#^THE
FOLLOWING MESSAGES FROM ^^BATCON\\ CAN APPEAR ON YOUR
OPERATOR CONSOLE.
.B;.LM5;.TS5;.I-5
^^ARGUMENT IS OUT OF RANGE\\
.B
^THE NUMERIC ARGUMENT SPECIFIED IS GREATER THAN OR LESSER THAN THE
LIMITS PERMITTED FOR THAT COMMAND.
.B;.I-5
^^BATCON UNABLE TO KJOB\\
.B
^THE JOB COULD NOT BE ^^KJOB\\ED. ^THIS MESSAGE IS ISSUED AFTER
^^BATCON\\ HAS MADE TWO ATTEMPTS TO SEND A ^^KJOB\\ COMMAND.
^FURTHER MESSAGES GIVE ALTERNATIVE ACTIONS.
.PG
.B;.I-5
^^COMMAND IS AMBIGUOUS\\
.B
^THE OPERATOR HAS ENTERED AN ABBREVIATION THAT DOES NOT SPECIFY A UNIQUE COMMAND.
.B;.I-5
^^ILLEGAL NUMBER FORMAT\\
.B;.PS67,70
^ILLEGAL CHARACTERS APPEAR IN A FIELD THAT MUST CONTAIN ONLY NUMERICS.
.B;.I-5

^^ILLEGAL SUBJOB SPECIFIED\\
.B
^THE OPERATOR SPECIFIED A SUBJOB NUMBER THAT WAS LESS THAN 1 OR
BEYOND THE ASSEMBLY PARAMETER ^^JOBMAX.\\
.B;.I-5
^^JOB CANNOT BE PUT IN MONITOR MODE\\
.B
^A SUBJOB DID NOT RETURN TO MONITOR MODE AFTER IT SENT A _^^C. ^FURTHER
MESSAGES GIVE ALTERNATIVE ACTIONS.
.B;.I-5
^^MISSING ARGUMENT OR ILLEGAL DELIMITER\\
.B
^A COMMAND THAT REQUIRES AN ARGUMENT WAS ENTERED WITHOUT ONE OR WITH A PUNCTUATION ERROR.
.B;.I-5
^^NO SUBJOBS ARE ACTIVE\\
.B
^A SUBJOB COMMAND HAS BEEN ISSUED BUT NO SUBJOBS ARE CURRENTLY RUNNING.
.B;.I-5
.B;.I-5
^^RESPOND B\\N-^^GO \\(OR ^^KILL\\)
.B
^SUBJOB N IS WAITING FOR A RESPONSE. ^THIS MESSAGE USUALLY APPEARS
AFTER A ^^PLEASE\\ COMMAND.
.B;.I-5
^^RESPOND B\\N-^^OPR\\ LINE
.B
^SUBJOB N IS REQUESTING A RESPONSE TO DIALOGUE MODE.
.B;.I-5
^^SUBJOB IS NOT ACTIVE\\
.B
"N" SPECIFIES A SUBJOB THAT IS NOT CURRENTLY RUNNING.
.B.I-5
^^SUBJOB\\ _#N#^^JOB\\ _#N
.B
^THIS IS A GENERAL HEADING TO CLARIFY THE SOURCE OF MORE MESSAGES.
.B;.I-5
^^UNKNOWN BATCON COMMAND\\
.B
^THE COMMAND ENTERED CANNOT BE RECOGNIZED BY ^^BATCON\\.
.B;.LM 0
^UNDER CERTAIN EXCEPTIONAL CONDITIONS, THERE MAY BE NO ^^LOG\\
FILE FOR ^^BATCON\\ TO WRITE TO (E.G., AFTER A ^^KJOB\\
COMMAND IS ISSUED). ^WHEN THIS IS THE CASE, ANY OUTPUT SENT
FROM THE SUBJOB IS TYPED (WITH A HEADING) ON YOUR OPERATOR
CONSOLE. ^ALTHOUGH THIS CAN SOMETIMES BE ANNOYING, THERE IS
A GOOD CHANCE THAT THE OUTPUT WILL CONTAIN ERROR INFORMATION
THAT YOU WILL NEED IN DIAGNOSING THE PROBLEM THAT
OCCURRED (E.G., ?^^SWAP READ ERROR\\ DURING ^^KJOB/LOGOUT\\).
.HL 1 ^&OUTPUT SPOOLERS\&\\
\\^THE OUTPUT SPOOLERS
ACCESS THE SYSTEM OUTPUT QUEUES AND ACT UPON
SPECIFIC REQUESTS TO CREATE THE SPECIFIED OUTPUT.  
.B
^THE OUTPUT SPOOLERS CONSIST OF ^^LPTSPL\\ FOR LINE PRINTER OUTPUT
AND ^^SPROUT\\ FOR CARD PUNCH, PAPER TAPE PUNCH, OR PLOTTER OUTPUT.
.B
^THE SPOOLER PROGRAMS ARE USUALLY INITIATED BY ^^OPSER\\ AUTOMATICALLY AT MONITOR
LOAD TIME (DEPENDING ON THE CONTENTS OF THE AUTO FILE) AND ARE
CONTROLLED FROM THE TERMINAL ALONG WITH SEVERAL OTHER SYSTEM
JOBS.  ^THE COMMANDS IN THE EXAMPLES DISCUSSED IN THIS SECTION
APPLY TO ^^LPTSPL\\, THE LINE PRINTER SPOOLER,
AND TO THE CARD PUNCH OPTION OF ^^SPROUT\\:
.B
^IN THE EXAMPLES BELOW,
^THE CARD PUNCH JOB IS CALLED ^C^P.  ^THE ^^LPTSPL\\ JOB WHICH OUTPUTS
TO ^^LPT0\\ IS CALLED ^L0 AND THE ^^LPTSPL\\ JOB WHICH OUTPUTS
TO ^^LPT1\\ IS CALLED ^L1.
 ^THESE NAMES ARE ARBITRARY, BUT THEY  BECOME VERY IMPORTANT IN THE ISSUING OF
COMMANDS TO THE VARIOUS SPOOLERS.  ^BECAUSE THESE JOBS ARE
RUN UNDER ^^OPSER\\, THE JOB NAME  DETERMINES THE DESTINATION OF
THE COMMAND.
.B
^IF THE SPOOLERS ARE AUTOMATICALLY INITIATED, YOU NEED ONLY
START THESE JOBS FROM SCRATCH IN THE CASE OF SOME ERROR.
^THE FOLLOWING STEPS EXPLAIN HOW TO
INITIALIZE THE LINE PRINTER AND CARD PUNCH SPOOLERS.
.B;.LM30;.TS30;.I-25
^^STEP	EXPLANATION
.I-25
----	-----------
.B;.I-30
!:^^SLOG#1,2\\	^LOG IN A SUBJOB UNDER [1,2].
.B;.I-30
!:^^DEFINE#L1=\\	^GIVE THIS SUBJOB THE NAME ^L1.
.B;.I-30
!^L1-^^ASSIGN LPT1\\	^ASSIGN ^^LPT1\\ TO JOB ^L1.
.B;.I-30
!^^L1-R LPTSPL\\	^RUN THE LINE PRINTER SPOOLER PROGRAM.
.B;.I-30
!^^L1-MLIMIT\\ 100	^SET THE INITIAL PAGE LIMIT ON ^^LPT1\\ TO 100.
.B;.I-30
!^^L1-START LPT1:\\	^BEGIN OUTPUTTING TO ^^LPT1\\.
.B;.I-30
!:^^SLOG 1,2\\	^LOG IN A SUBJOB UNDER [1,2].
.B;.I-30
!:^^DEFINE L0=\\	^GIVE THIS SUBJOB THE NAME ^L0.
.B;.I-30
!^^L0-ASSIGN LPT0\\	^ASSIGN ^^LPT0\\ TO JOB ^L0.
.B;.I-30
!^^L0-R LPTSPL\\	^RUN THE LINE PRINTER SPOOLER PROGRAM.
.B;.I-30
!^^L0-MLIMIT 2000\\	^SET THE INITIAL PAGE LIMIT ON ^^LPT0\\ TO 2000.
.B;.I-30
!^^L0-START LPT0:\\	^BEGIN OUTPUTTING TO ^^LPT0\\.
.B;.I-30
!:^^SLOG 1,2\\	^LOG IN A SUBJOB UNDER [1,2].
.B;.I-30
!:^^DEFINE CP=\\	^GIVE THIS SUBJOB THE NAME ^^CP\\.
.B;.I-30
!^^CP-R#SPROUT\\	^RUN THE ^^SPROUT\\ PROGRAM.
.B;.I-30
!^^CP-MLIMIT 2000	S\\ET THE INITIAL LIMIT ON THE CARD PUNCH
TO 2000 CARDS.
.PG;.I-25
^^STEP	EXPLANATION\\
.I-25
----	-----------
.B;.I-30
!^^CP-LOCK\\	^PAUSE AFTER EACH JOB.
.B;.I-30
^^!CP-MESSAGE FILE\\	^PRINT FILE IDENTIFICATION AS EACH FILE IS PROCESSED.
.B;.I-30
^^!CP-CARDS\\	^START THE CARD PUNCH SPOOLER.
.B;.LM0;.PS67,70
^ONCE THE SPOOLERS HAVE BEEN STARTED, THEY WILL AUTOMATICALLY ACT UPON
REQUESTS THAT HAVE BEEN QUEUED BY THE USERS. ^YOU NEED ALTER PARAMETERS
OR ISSUE SPOOLER COMMANDS ONLY TO ENSURE THE MOST EFFICIENT OPERATION
OF THE SPOOLER DEVICES.
^A LIST OF COMMANDS IS GIVEN BELOW.
^FOR EACH COMMAND THE LIST GIVES THE NAME OF THE COMMAND,
AN EXPLANATION OF THE EFFECT OF THE COMMAND, AND THE SPOOLER(S) TO WHICH THE COMMAND APPLIES.
^^LPTSPL\\ OR ^^SPROUT\\ IMPLIES THAT THE COMMAND IS APPLICABLE ONLY TO
THE LINE PRINTER OR ^^SPROUT\\ DEVICES RESPECTIVELY; ^^ALL\\ IMPLIES THAT
THE COMMAND CAN APPLY TO ANY OUTPUT DEVICE.
.B3;.LM20;.TS25,60;.NF;.NJ;.I-19
^^COMMAND	EXPLANATION	SPOOLER\\
.B2;.TS20,60;.I-19
^^ALIGN\\ FILE	^OUTPUT A TEST FILE FOR A
SPECIFIC FORM  ON THE LINE	^^LPTSPL\\
PRINTER. ^THIS COMMAND IS USED
TO AID THE OPERATOR IN CHECKING
THE ALIGNMENT OF THE PAPER WITH
THE CARRIAGE TAPE. ^THE DEFAULT
FILE IS <CURRENT FORM TYPE>.^^ALP\\, 
UNLESS THERE IS A /^^ALIGN\\ SWITCH
FOR THE FORM IN ^^SYS:LPFORM.INI\\
^SEE ^SECTION 4.5.1.
.B 3;.I-19
^^BACKSPACE\\#N	^BACKSPACE THE FILE N PAGES AND	^^LPTSPL\\
BEGIN PRINTING THERE.
.B 3;.I-19
^^CARDS\\	^START ^^SPROUT\\ PROCESSING FILES	^^SPROUT\\
QUEUED TO THE CARD PUNCH.
.B3;.I-19
^^CHKPNT\\ LABEL	^SAVE THE LINE IN THE CONTROL FILE	^^ALL\\
IDENTIFIED BY "LABEL" AS A
POTENTIAL RESTART POINT IN THE
EVENT OF A SYSTEM FAILURE.
.B 3;.PS69,70;.I-19
^^CURRENT\\	^PRINT OUT THE CURRENT VALUE OF	^^ALL\\
ALL PARAMETERS THAT CAN BE
CONTROLLED BY THE OPERATOR.
.B 3;.I-19
^^EXIT\\	^CAUSE THE SPOOLER TO RETURN	^^ALL\\
TO THE MONITOR IF THE SPOOLER
IS IDLE. ^IF THIS COMMAND IS
GIVEN WHILE THE SPOOLER IS ACTIVE,
AN ERROR MESSAGE IS ISSUED.
.PG;.I-19
^^COMMAND	#####EXPLANATION	SPOOLER\\
.B 2;.I-19
^^FORMS\\ FORMSNAME		^^ALL\\
^INFORM THE SPOOLER THAT FORM
"FORMSNAME" IS NOW MOUNTED.
^THE DEFAULT IS ^^NORMAL\\.
.PS67,70
.B 3;.I-19
^^FORWARD#\\N	^FORWARD SPACE THE FILE N PAGES	^^LPTSPL\\
AND BEGIN PRINTING THERE.
.B 3;.I-19
^^FREEZE\\	^CAUSE THE CURRENTLY MOUNTED 	^^ALL\\
FORMS (CARDS, LINE PRINTER,
PAPER TAPE, OR PLOTTER PAPER) TO BE
"FROZEN". ^THE SPOOLERS WILL NOT
SCHEDULE A DIFFERENT TYPE OF FORM.
.B 3;.I-19
^^GO\\	^CONTINUE PROCESSING AFTER	^^ALL\\
A ^^LOCK, PAUSE,\\ OR ^^STOP\\ HAS BEEN
ISSUED.
.B 3;.I-19
^^HELP\\	^TYPE OUT A LIST OF ALL THE	^^ALL\\
SPOOLER COMMANDS.
.B 3;.I-19
^^KILL\\	^ABORT THE CURRENT JOB AND GO	^^ALL\\
TO THE NEXT JOB.
.B 3;.I-19
^^LIMIT\\ N	^CHANGE THE LIMIT FOR THE CURRENT	^^ALL\\
JOB TO N PAGES, CARDS, FEET, OR
MINUTES.
.B 3;.I-19
^^LOCK\\	^^PAUSE\\ AUTOMATICALLY AFTER EACH	^^ALL\\
JOB.
.B3;.I-19
^^MESSAGE #ERROR\\	^TYPE ONLY THE SPECIFIED MESSAGES	^^ALL\\
.I-10
^^FILE\\	ON THE OPERATOR'S CONSOLE.
.I-10
^^JOB\\	WHERE:
.I-10
^^ALL\\
.LM27;.TS20,27;.I-17
^^NONE	ERROR\\	PRINTS ALL FATAL ERRORS
THAT OCCUR WHILE PROCESSING.
.B;.I-7
^^FILE\\	PRINTS THE FILE IDENTIFICATION
OF EACH FILE PROCESSED.
.B;.I-7
^^JOB\\	PRINTS JOB INFORMATION AT
THE BEGINNING AND END OF
EACH JOB. (^^LPTSPL\\ ONLY)
.PG;.TS25,60;.I-27
#^^COMMAND	EXPLANATION	SPOOLER\\
.B2;.LM27;.TS20,27;.I-7
^^ALL\\	PRINTS THE INFORMATION
SPECIFIED ON ALL THREE
OF THE ABOVE.
.B;.I-7
^^NONE\\	CANCELS ANY PREVIOUS
ARGUMENTS OF THE ^^MESSAGE\\
COMMAND.
.B2;.LM0;.F;.J;.C
^^NOTE\\
.B;.LM10;.RM60
^THE ^^MESSAGE\\ COMMAND SUPPORTS MULTIPLE ARGUMENTS SEPARATED BY
COMMAS. ^HOWEVER, THE ARGUMENTS ARE PROCESSED IN ORDER FROM
LEFT TO RIGHT. ^THEREFORE IF CONFLICTING ARGUMENTS ARE SPECIFIED, THE
LAST VALID ONE WILL APPLY. ^FOR EXAMPLE:
.BR;.B;.TS35
^^MESSAGE ALL, FILE\\	^NO CONFLICT; ^^ALL\\ APPLIES
.B
^^MESSAGE FILE, JOB, NONE	C\\ONFLICT; ^^NONE A\\PPLIES
.B2;.NF;.NJ;.LM20;.RM68;.TS20,60;.I-19
^^MLIMIT#\\N	^DO NOT RUN ANY JOB WHICH	^^ALL\\
OUTPUTS MORE THAN N PAGES, FEET,
OR CARDS, OR WHICH USES MORE
THAN N MINUTES OF PLOTTER TIME.
^THIS COMMAND HAS NO EFFECT ON
THE JOB CURRENTLY BEING
PROCESSED. (N IS A DECIMAL NUMBER)
.B 3;.I-19
^^NEXT\\ N	^SELECT THE JOB WITH THE QUEUE	^^ALL\\
SEQUENCE NUMBER N AS THE NEXT
JOB TO BE PROCESSED.
.B3;.I-19
^^NOSUPPRESS	R\\EMOVE THE EFFECT OF THE	^^LPTSPL\\
^^SUPPRESS\\ COMMAND IMMEDIATELY.
^^NOSUPPRESS\\ IS IN EFFECT
AT THE TIME THE SPOOLER IS
INITIALIZED.
.B 3;.I-19
^^PAUSE\\	^FINISH PROCESSING THE CURRENT	^^ALL\\
JOB AND THEN STOP.
.B 3;.I-19
^^PLOT	S\\TART ^^SPROUT\\ PROCESSING FILES	^^SPROUT\\
QUEUED TO THE PLOTTER.
.B2;.I-19
^^REPRINT\\	^STOP PROCESSING THE CURRENT	^^ALL\\
COPY OF THE CURRENT FILE
IMMEDIATELY AND START IT OVER.
.PG;.I-19
^^COMMAND	#####EXPLANATION	SPOOLER\\
.B2;.I-19
^^REQUEUE\\/SWITCHES	^STOP WRITING NOW AND PLACE THE	^^ALL\\
JOB BACK INTO THE QUEUE FOR
LATER PROCESSING.
.B
^NOTE THAT DIFFERENT SWITCHES
APPLY TO DIFFERENT SPOOLERS
AS INDICATED IN THE RIGHT-HAND
COLUMN. ^THE SWITCHES ARE
OPTIONAL AND CAN BE OMITTED.
.B
^THE DEFAULT FOR ^^LPTSPL\\ IS TO START
REPROCESSING AT THE CURRENT
POSITION OF THE FILE.
.B
^THE DEFAULT FOR ^^SPROUT\\ IS TO START
REPROCESSING AT THE BEGINNING OF
THE JOB.
.B 2;.I -10
^SWITCHES:
.BR
/^A:N	^^ALL\\
^START REPROCESSING AFTER N
MINUTES.
.B 2
/^B:N	^^LPTSPL\\
^START REPROCESSING N PAGES
BACK IN THE FILE.
.B 2
/^F:N	^^LPTSPL\\
^START REPROCESSING N PAGES
FORWARD IN THE FILE.
.B 2
/^H	^^ALL\\
^START REPROCESSING AFTER
12 HOURS.
.B 2
/^T	^^ALL\\
^START REPROCESSING AT THE 
BEGINNING OF THE JOB.
^THIS IS THE DEFAULT FOR ^^SPROUT\\.
.B3;.LM20;.TS20,60;.I-19
^^RESET\\	^REINITIALIZE THE SPOOLER.	^^ALL\\
^IF THE SPOOLER IS IDLE WHEN
A ^^RESET\\ COMMAND IS ISSUED,
THE COMMAND WILL BE PROCESSED.
^IF JOBS ARE ACTIVE, AN ERROR
MESSAGE IS ISSUED.
.PG;.I-19
^^COMMAND	#####EXPLANATION	SPOOLER\\
.B 2;.I-19
^^SKPCOPY\\	^STOP PROCESSING THE CURRENT	^^ALL\\
COPY OF THE CURRENT FILE
IMMEDIATELY AND BEGIN THE
NEXT COPY.   ^IF THE LAST OR
ONLY COPY IS BEING PROCESSED
AT THE TIME THIS COMMAND IS
ISSUED, START THE NEXT FILE
IN THE REQUEST.
.B 3;.I-19
^^SKPFILE\\	^STOP PROCESSING THE CURRENT COPY	^^ALL\\
OF THE CURRENT FILE IMMEDIATELY
AND BEGIN PROCESSING THE NEXT
FILE IN THE REQUEST.
.B 3;.I-19
^^START\\ OUTPUT-DEV=QUEUED-DEV		^^LPTSPL\\
.B;.LM 20
^IMMEDIATELY START PROCESSING FILES
QUEUED TO THE QUEUED DEVICE AND
OUTPUT THEM ON THE OUTPUT DEVICE.
.B
^IF NO OUTPUT DEVICE IS SPECIFIED,
^^LPTSPL\\ ASSUMES ^^LPT:\\ AS THE DEFAULT.
.B
^IF NO QUEUED DEVICE IS SPECIFIED,
^^LPTSPL\\ ASSUMES THE OUTPUT DEVICE
AS THE DEFAULT.
.B3;.I-19
^^STOP\\	^STOP IMMEDIATELY.	^^ALL\\
.B 2
#############^^NOTE\\
.B 1
^^"ST"\\ IS AN ACCEPTABLE ABBREVIATION
FOR THE ^^START\\ COMMAND. ^THEREFORE,
IF ^^STOP\\ IS DESIRED, AT LEAST
^^"STO"\\ MUST BE TYPED.
.B 3;.I-19
^^SUPPRESS\\/SWITCH	^CAUSE THE SPOOLER TO IGNORE	^^LPTSPL\\
ALL VERTICAL PAPER MOTION
CHARACTERS EXCEPT FOR THE LINE
FEED. ^THIS COMMAND HAS THE FOLLOWING
TWO SWITCH OPTIONS THAT CONTROL THE
SCOPE OF THE COMMAND. ^THE ^^FILE\\
OPTION IS THE DEFAULT.
.B 2;.I -10
^SWITCH:
.B;.I-10
^^FILE\\	^THE ^^SUPPRESS\\ COMMAND APPLIES ONLY TO
THE CURRENT FILE. ^THIS IS
THE DEFAULT.
.PG;.I-19
^^COMMAND	#####EXPLANATION	SPOOLER\\
.B 2;.I-10
^^JOB\\	^THE ^^SUPPRESS\\ COMMAND APPLIES TO THE
ENTIRE PRINT JOB.
.B3;.I-19
^^TAPE\\	^STARTS ^^SPROUT\\ PROCESSING FILES	^^SPROUT\\
QUEUED TO THE PAPER-TAPE PUNCH.
.B3;.I-19
^^UNFREEZE	R\\EMOVE THE EFFECT OF THE ^^FREEZE\\	^^ALL\\
COMMAND.
.B3;.I-19
^^UNLOCK	R\\EMOVE THE EFFECT OF THE ^^LOCK	ALL\\
COMMAND SO THAT THE SPOOLER WILL
CONTINUE AUTOMATICALLY AFTER  
EACH JOB.
.B 3;.I-19
^^WHAT\\	^TYPE OUT ON THE OPERATOR'S	^^ALL\\
CONSOLE THE PRESENT STATUS OF
THE SPOOLER.  ^THIS INFORMATION
CONSISTS OF  THE JOB NAME, THE
USER'S NAME, HIS PROJECT-
PROGRAMMER NUMBER, THE JOB'S
SEQUENCE NUMBER, AND INFORMATION
ABOUT THE FILE BEING PROCESSED.
.B 3;.LM0;.RM70;.F;.J
^ONCE YOU HAVE FAMILIARIZED YOURSELF WITH THE GENERAL SPOOLER
COMMANDS IT BECOMES IMPORTANT TO KNOW WHEN TO USE THEM.
^FOLLOWING IS A DISCUSSION OF SOME APPLICATIONS
OF THE SPOOLERS.
.HL 2 ^&^^LPTSPL\&\\
^^LPTSPL\\ IS THE PROGRAM WHICH HANDLES
ALL ^^PRINT\\ REQUESTS SUBMITTED 
FOR THE LINE PRINTER THROUGH ^^QUEUE\\. ^IN THE DISCUSSION BELOW,
TWO LINE PRINTERS ARE ASSUMED TO BE IN USE.
^^LPT0\\ PRINTS, SAY, AT A RATE OF 1000 LINES PER MINUTE AND ^^LPT1\\
PRINTS 600 LINES PER MINUTE.  ^BECAUSE OF THE DIFFERENCE IN SPEED,
A HIGHER LIMIT MIGHT BE SET  ON THE JOB CONTROLLING ^^LPT0\\.  ^THIS DOES NOT
MEAN, HOWEVER, THAT THE LIMIT ON ^^LPT1\\ MUST ALWAYS BE LOWER THAN ^^LPT0.\\
.B
^THE COMMANDS WHICH FOLLOW COULD APPLY TO BOTH JOBS ^L0 AND ^L1
ALTHOUGH THE EXAMPLES WILL BE BASED ON ONE OR THE OTHER.
.B
^INITIALLY, WHEN THE MONITOR IS LOADED, BOTH SPOOLER JOBS COULD BE STARTED
AUTOMATICALLY WITH A LINE PRINTER ASSIGNED TO EACH AND WITH THE
FOLLOWING PAGE LIMITS:
.B;.I5
^^L0-MLIMIT 2000\\
.B;.I5
^^L1-MLIMIT 100\\
.PG
.B
^DURING THE NORMAL DAILY OPERATION, YOUR ONLY INTERACTION
WITH THE SPOOLERS WOULD BE TO INCREASE OR DECREASE THE ^^MLIMIT\\
OF A PARTICULAR JOB.  ^THIS IS NOT NORMALLY DONE DURING PRIME TIME
UNLESS THE SPOOLERS ARE IDLE AND A USER MUST HAVE A LISTING WHICH IS OVER
THE CURRENT LIMIT.  ^IN THIS CASE YOU WOULD TYPE:
.B;.I5
^L0-^^MLIMIT\\ N
.B
WHERE N IS THE NEW VALUE OF ^^MLIMIT.\\
.B
^^LPTSPL\\ IS SO DESIGNED THAT WHEN AN OUT-OF-PAPER CONDITION ON A
LINE PRINTER IS DETECTED, IT WILL NOTIFY YOU, AND 
THEN WAIT UNTIL THE SITUATION IS CORRECTED. ^THE SPOOLER WILL
THEN CONTINUE AUTOMATICALLY.  ^YOU NEED NOT ISSUE ANY COMMANDS.
^ALL YOU MUST DO IS CORRECT THE PROBLEM AND THE SOFTWARE 
WILL DO THE REST.  ^IN THE EVENT OF SUCH A CONDITION ON ^^LPT1\\, YOU WILL
RECEIVE THE FOLLOWING MESSAGE ON THE TERMINAL:
.B;.I5
!13:27:05(^L1)
.I10
% ^^DEVICE LPT1 IS NOT READY\\
.I5
!
.B
^ONCE THE PROBLEM IS CORRECTED THE LINE PRINTER WILL AUTOMATICALLY CONTINUE.
.BLANK 1
^THERE ARE SOME ERROR CONDITIONS WHICH MAY CAUSE THE SPOOLER TO BE RETURNED
TO MONITOR LEVEL.
^THESE CONDITIONS ARE OBSCURE AND WOULD SERVE NO
USEFUL PURPOSE BEING EXPLAINED HERE.
^THE SPOOLER WILL OUTPUT AN ERROR MESSAGE  INDICATING THE PROBLEM, AND THE END RESULT IS
 THAT THE  SPOOLER WILL BE RETURNED TO
MONITOR OR _^^C LEVEL.  ^IF  THIS OCCURS, THE SPOOLER PROGRAM
MUST BE RESTARTED BEFORE IT CAN CONTINUE PROCESSING REQUESTS.  ^WHEN IN
DOUBT AS TO THE STATE OF THE SPOOLER, YOU NEED ONLY TYPE:
.B;.I5
:^^WHAT L0\\
.BLANK 1
TO PRINT OUT THE STATUS OF THE JOB.  ^IF THE SPOOLER IS IN A _^^C STATE
IT MUST BE RESTARTED AS FOLLOWS:
.B2;.LM30;.TS30;.I-25
^^STEP	EXPLANATION\\
.I -25
----	----------
.I-30
!^^L0-R#LPTSPL	R\\UN THE SPOOLER PROGRAM.
.B;.I-30
!^^L0-MLIMIT\\#1020	^SET THE PAGE LIMIT.
.B;.I-30
!^^L0-START LPT0:\\	^START PROCESSING PRINT REQUESTS.
.B;.LM0
^IT IS VERY SIMPLE TO REMOVE COMPLETED LISTINGS WITHOUT
HAMPERING THE OPERATION OF THE LINE PRINTER.  ^YOU MAY, HOWEVER,
STOP AND START THE SPOOLER TO REMOVE LISTINGS OR CLEAR UP A JAM. ^USE THE COMMANDS:
.B.I5
!^^L0-STOP\\
.B;.I5
!^^L0-GO\\
.B;.PS69,70
^THESE ARE THE ONLY COMMANDS NEEDED TO STOP AND CONTINUE THE SPOOLER PROGRAM.
.B
^THE ^^MLIMIT\\ PARAMETER CAN BE RAISED DURING A PERIOD THAT IS NOT VERY BUSY, TO ALLOW LARGE
LISTINGS TO BE PRINTED. ^YOU CAN ASK THE SPOOLER TO
TYPE OUT ITS CURRENT STATUS TO ENSURE THAT ^^MLIMIT\\ HAS BEEN CHANGED CORRECTLY.
^THE FOLLOWING EXAMPLE SHOWS THE ^^MLIMIT\\ BEING RAISED TO 3500 AND THEN CHECKED:
.PG
.B;.LM30;.TS30;.I-25
^^STEP	EXPLANATION\\
.I-25
----	-----------
.I-30
!^^L0-MLIMIT\\ 3500	^RAISE THE PAGE LIMIT TO 3500.
.B;.I-30
!^^L0-CURRENT\\	^THIS CAUSES THE SPOOLER
TO TYPE OUT THE CURRENT VALUES
OF ^^MLIMIT\\ AND OTHER OPERATOR-SET PARAMETERS.
.B 1;.LM 0;.PS67,70
^THERE MAY BE A TIME WHEN THE PRINTER IS DOWN FOR REPAIRS.  ^IF
FILES STILL NEED TO BE OUTPUT, PERHAPS TO FREE SOME DISK SPACE,
THEY CAN TEMPORARILY BE OUTPUT TO MAGNETIC TAPE
AND PRINTED AT A LATER TIME.  ^THE COMMANDS TO DIVERT ^^LPT0\\ OUTPUT
ONTO ^^MTA0\\ ARE:
.B 1;.LM 30;.TS 30;.I -25
^^STEP	EXPLANATION\\
.I -25
----	-----------
.B 1;.NF;.NJ;.I -30
!^L0-^^R LPTSPL\\	^HAVE SUBJOB ^L0 RUN ^^LPTSPL\\.
.B
.I -30
!^^L0-START MTA0:=LPT0:\\	^SET THE OUTPUT DEVICE TO ^^MTA0.\\
.B;.LM0
^THEN, AFTER THE LINE PRINTER IS REPAIRED, REQUEUE THE FILES ONTO THE PRINTER QUEUE AS FOLLOWS.
.B;.LM30;.TS30;.I-30
!^^L0-EXIT\\	^EXIT TO THE MONITOR AT THE END OF THE CURRENT JOB.
.B;.I-30
!^^L0-REWIND MTA0:\\	^REWIND THE TAPE.
.B;.I-30
^^!L0-R PIP\\	^USING ^^PIP\\, TRANSFER THE FILES FROM
.I-30
!^^L0-LPT0:/X=MTA0:*.*\\	MAGNETIC TAPE TO THE PRINTER QUEUE.
.I-30
!^L0-_^^A	^^CTRL/A\\ TO THE SUBJOB ACTS LIKE A ^^CTRL/C\\ TO RETURN TO MONITOR.
.B;.I-30
^^!L0-R LPTSPL\\	^RELOAD ^^LPTSPL\\.
.B;.I-30
^^!L0-START LPT0:\\	^START THE LINE PRINTER SPOOLER.
.B2;.LM0;.F;.J
^OCCASIONALLY A USER WILL INADVERTENTLY ^^QUEUE\\ A FILE TO BE 
PRINTED WHICH IS NOT IN THE CORRECT FORM SUCH AS A BINARY FILE.  ^IF IT IS
DISCOVERED BEFORE PRINTING OF THE FILE BEGINS, THE PRINT REQUEST MAY BE DELETED FROM THE ^^QUEUE\\
VIA THE ^^QUEUE\\/^^KILL\\ COMMAND DISCUSSED EARLIER.
^WHEN THIS IS NOT DISCOVERED UNTIL THE FILE BEGINS TO PRINT,
THE LINE PRINTER WILL RAPIDLY EJECT PAGES, PRINT GROUPS
OF UNRECOGNIZABLE CHARACTERS, OR CONTINUALLY HANG UP.  ^YOU
MUST THEN USE THE SPOOLER ^^KILL\\ COMMAND AS FOLLOWS:
.B;.I5
!^^L0-KILL\\
.BLANK 1
^THIS WILL ABORT THE CURRENT PRINT REQUEST AND PROCEED TO THE NEXT
REQUEST.  ^THIS COMMAND MUST BE USED WITH CAUTION AS IT CAN CAUSE
THE USER'S DISK FILE TO BE DELETED ALONG WITH THE REQUEST.
.BLANK 1
^AS MENTIONED EARLIER, WHEN A SYSTEM  IS OPERATING WITH OPERATOR
COVERAGE, THE SPOOLER JOBS HAVE THE LINE PRINTERS ASSIGNED.  ^THIS MEANS THAT
A USER MAY NOT OUTPUT DIRECTLY TO THE LINE PRINTER EVEN WHEN THE SPOOLERS
ARE IDLE.  ^WHILE THIS IS REASONABLE AS LONG AS THERE IS OPERATOR COVERAGE,
IT IS NOT DESIRABLE DURING THOSE TIMES WHEN THE SYSTEM IS RUNNING WITH
NO OPERATOR COVERAGE.  ^THE FOLLOWING STEPS DESCRIBE THE ACTION NECESSARY
TO RELEASE THE LINE PRINTERS FROM ASSIGNMENT TO THE SPOOLER JOBS
AND MAKE THEM AVAILABLE FOR GENERAL USE.  ^THE SPOOLERS WILL OUTPUT
TO THE LINE PRINTERS UPON RECEIPT OF A QUEUE REQUEST EVEN THOUGH
THE LINE PRINTERS ARE NOT ASSIGNED TO THE SPOOLER JOBS.
.B;.LM30;.TS30;.I-25
^^STEP	EXPLANATION\\
.I-25
----	-----------
.I-30
!:^^STOP#L0\\	^STOP THE SPOOLER.
.B;.I-30
!^^L0-FINISH#LPT0:\\	^THE ^^FINISH\\ COMMAND EFFECTIVELY DEASSIGNS THE
LINE PRINTER.
.B;.I-30
!^^L0-R#LPTSPL\\	^RUN THE SPOOLER PROGRAM.
.B.I-30
!^^L0-START#LPT0:\\	^READY THE SPOOLER TO OUTPUT TO ^^LPT0\\ UPON
RECEIPT OF A PRINT REQUEST.
.B;.LM0
^THE  STEPS ABOVE WOULD BE REPEATED FOR JOB ^L1 SUBSTITUTING
^L1 FOR ^L0 AND ^^LPT1:\\ FOR ^^LPT0\\:.
.B 1
^THE SPECIAL
FORMS HANDLER IN ^^LPTSPL\\ PROVIDES A MEANS BY WHICH VARIOUS
PARAMETERS MAY BE SET AUTOMATICALLY ON THE BASIS OF FORM NAMES.
^THIS IS ACCOMPLISHED THROUGH THE USE OF A DISK FILE,
^^SYS:LPFORM.INI,\\ WHICH CONTAINS A LIST OF FORMS AND DEFAULT SWITCHES.
.B 1
^EACH LINE IN ^^LPFORM.INI\\ IS OF THE FORM:
.B 1;.I 10
FORMNAME/SW1/SW2/SW3...
.B 1;.I 20
OR
.B 1;.I 10
FORMNAME:LOCATOR/SW1/SW2/SW3...
.B
.LM 20;.TS 17,20;.I -20
FORMNAME		A 1- TO 6- CHARACTER FORM NAME.  
^THE SYSTEM ADMINISTRATOR IS FREE TO SPECIFY FORM NAMES
DESCRIPTIVE OF THE TYPES OF FORMS USED AT THE INSTALLATON.
.B 1;.I -20
LOCATOR		A FIELD USED TO DESCRIBE ONE OR MORE PRINTERS TO BE AFFECTED BY VARIOUS PARAMETERS.
^LEGAL VALUES FOR THE LOCATOR FIELD ARE:
.B 1
.TS 30
^^ALL\\	ALL LINE PRINTERS
.BR
^^LOCAL\\	ALL LOCAL LINE PRINTERS
.BR
^^REMOTE\\	ALL REMOTE LINE PRINTERS
.BR
^SNN	ALL PRINTERS AT STATION NN (OCTAL)
.BR
^^LPT\\N	THE SPECIFIC LINE PRINTER N
.B 1
^IF THE LOCATOR FIELD IS OMITTED, ^^ALL\\ IS ASSUMED.
^IF MORE THAN ONE LOCATOR FIELD IS USED,
EACH MUST BE SEPARATED BY A COMMA AND
THE LIST ENCLOSED IN PARENTHESES.  ^SOME EXAMPLES ARE GIVEN BELOW:
.B 1
	FORMNAME:^^LOCAL\\/SW1/SW2
.B 1
	FORMNAME:(^^LOCAL,S\\2)/SW1/SW2
.B1;.LM20;.TS20;.I-20
/SW1/SW2/SW3...	ONE OR MORE SWITCHES USED TO DESCRIBE THE MANNER
IN WHICH THE FORMS ARE TO BE PRINTED.
.B 3
.TS 20
.I -20
^^SWITCH	##########MEANING\\
.B2;.TS20;.PS69,70;.I-20
/^^ALCNT:\\NN	NN SPECIFIES THE NUMBER OF TIMES THAT THE FORMS ALIGNMENT
FILE IS TO BE PRINTED. ^THIS SWITCH IS USED IN CONJUNCTION
WITH THE ^^ALIGN\\ COMMAND.
.B
^TYPING ANY CHARACTER TO ^^LPTSPL\\ WILL TERMINATE FORMS ALIGNMENT
PRINTING.
.PG;.TS30;.I-20
^^SWITCH	MEANING\\
.B2;.TS20;.I-20
^^/ALIGN\\:SS	SS IS A 1- TO 6-CHARACTER ^^ASCII\\ STRING THAT
SPECIFIES THE NAME OF THE DEFAULT FORMS ALIGNMENT FILE (EXTENSION.^^ALP\\) TO BE USED TO POSITION THIS FORMS TYPE.  ^THIS SWITCH
IS USED IN CONJUNCTION WITH THE ^^ALIGN\\ COMMAND.
.B;.I-20
^^/ALSLP\\:NN	NN SPECIFIES THE NUMBER OF SECONDS BETWEEN EACH
PRINTING OF THE FORMS ALIGNMENT FILE. ^THIS SWITCH IS USED IN
CONJUNCTION WITH THE ^^ALIGN\\ COMMAND.
.B;.I-20
/^^BANNER\\:NN	NN SPECIFIES THE NUMBER OF BANNER PAGES (JOB HEADERS) DESIRED.
.B 1;.I -20
^^/CHAIN\\:SS	SS IS A 1- TO 6-CHARACTER ^^ASCII\\ #STRING THAT SPEC-
.I -17
OR	IFIES #THE CHAIN OR #DRUM TO BE #USED ON #THE LINE
.I -20
^^/DRUM\\:SS	PRINTER.  ^THE SWITCH NAME AND ARGUMENT ARE TYPED
ON THE OPERATOR'S CONSOLE WHEN THE FORMS ARE SCHEDULED.  ^IF BOTH THE ^^/CHAIN\\
AND THE ^^/DRUM\\ SWITCHES ARE SPECIFIED FOR THE SAME ENTRY IN
THE ^^LPFORM.INI\\ FILE, THE SPOOLER WILL TYPE ONLY THE LAST 
ONE IT ENCOUNTERED.
.B 1;.I -20
/^^HEADER:\\NN	NN SPECIFIES THE NUMBER OF FILE HEADERS (PICTURE PAGES) DESIRED.
.B 1;.I -20
/^^LINES\\:NN	NN SPECIFIES THE NUMBER OF LINES TO BE PRINTED ON THE BANNER,
TRAILER, AND HEADER PAGES.  ^THE ARGUMENT IS USED FOR INTERNAL CALCULATIONS
AND DOES NOT AFFECT THE FILE TO BE PRINTED.
.B 1;.I -20
^^/NOTE\\:AA	AA IS A MESSAGE OF UP TO 50 CHARACTERS THAT IS SENT
TO THE OPERATOR AT THE TIME THE FORMS ARE SCHEDULED.
.B 1;.I -20
^^/PAUSE\\	^CAUSES THE SPOOLER TO PAUSE BEFORE EACH JOB
USING THE TYPE OF FORM SPECIFIED.  ^THIS SWITCH OVERRIDES
THE ^^UNLOCK\\ OPERATOR COMMAND.
.B 1;.I -20
^^/RIBBON\\:SS	SS IS A 1- TO 6-CHARACTER ^^ASCII\\ STRING
THAT SPECIFIES THE TYPE OF RIBBON TO BE USED ON THE LINE
PRINTER.  ^THE SWITCH NAME AND ARGUMENT ARE TYPED ON THE OPERATOR'S CONSOLE
AT THE TIME THAT THE FORMS ARE SCHEDULED.
.B 1;.I -20
^^/TAPE\\:XXX	XXX IS A 1- TO 6-CHARACTER ^^ASCII\\ STRING THAT SPECIFIES
THE NAME OF THE VERTICAL FORMS UNIT CONTROL TO BE USED. ^IF THE PRINTER
HAS AN OPTICAL VERTICAL FORMS UNIT (USES PAPER CARRIAGE TAPES), A MESSAGE
IS SENT TO THE OPERATOR TO MOUNT THE CARRIAGE TAPE NAMED XXX. ^IF THE
PRINTER HAS A DIRECT ACCESS VERTICAL FORMS UNIT (^^DAVFU\\), ^^LPTSPL\\
WILL ATTEMPT TO LOAD THE ^^DAVFU\\ WITH THE FILE ^^SYS:\\XXX.^^VFU\\.
^IF ^^LPTSPL\\ FINDS THE FILE, IT NOTIFIES THE OPERATOR THAT THE FILE IS
BEING LOADED. ^IF THE FILE CANNOT BE FOUND, AN ERROR MESSAGE INFORMS
THE OPERATOR THAT THE JOB HAS BEEN REQUEUED.
.B
^IF THE /^^TAPE\\ SWITCH IS NOT SPECIFIED, THE NAME DEFAULTS TO ^^NORMAL\\.
.PG;.TS30;.I-20
^^SWITCH	MEANING\\
.B2;.TS20;.I-20
^^/TRAILER\\:NN	NN SPECIFIES THE NUMBER OF JOB TRAILER (PAGES) DESIRED.
.B 1;.I -20
^^/VFU\\:XXX	^THIS SWITCH PERFORMS THE SAME FUNCTION AS ^^/TAPE\\:XXX.
.B;.I-20
/^^WHAT\\	^CAUSES THE SPOOLER TO TYPE A SHORT ^^WHAT\\ MESSAGE
TO THE OPERATOR FOR EACH JOB PRINTED.  ^THIS MESSAGE
CONSISTS OF THE JOB NAME, THE USER'S NAME AND PROJECT-PROGRAMMER
NUMBER, AND THE SEQUENCE NUMBER.
.B 1;.I -20
/^^WIDTH\\:NN	^THE VALUE OF NN IS USED FOR INTERNAL CALCULATIONS TO
DETERMINE A WIDTH CLASS.  ^THE WIDTH CLASS SPECIFIES THE NUMBER
OF CHARACTERS PER LINE TO BE PRINTED ON THE BANNER, HEADER,
AND TRAILER PAGES.  ^THERE ARE THREE WIDTH CLASSES.
.B 1
.LM 24;.I -4
1.##^WIDTH CLASS 1 (NN=0-60) SPECIFIES THAT UP TO 66 CHARACTERS PER LINE WILL BE PRINTED
ON THE BANNER, HEADER, AND TRAILER PAGES.
.B 1;.I -4
2.##^WIDTH CLASS 2 (NN=61-100) SPECIFIES THAT UP TO 90 CHARACTERS PER LINE WILL BE PRINTED
ON THE BANNER, HEADER, AND TRAILER PAGES.
.B 1;.I -4
3.##^WIDTH CLASS 3 (NN=101-132) SPECIFIES THAT UP TO 129 CHARACTERS PER LINE
WILL BE PRINTED ON THE BANNER, HEADER, AND TRAILER PAGES.
.LM 20;.TS 20;.B 1;.I -20
.LM 0;.B 3
^THE ^^LPFORM.INI\\ FILE IS SEARCHED UNTIL THE FIRST
OCCURRENCE OF A LINE THAT CONTAINS BOTH THE NAME OF THE FORMS
CURRENTLY MOUNTED AND A LOCATOR FIELD (EITHER IMPLICIT OR EXPLICIT)
THAT IS IN AGREEMENT WITH THE PRINTER SPECIFIED IN THE ^^START\\
COMMAND.
 ^THE PARAMETER SWITCH SETTINGS ON
THIS MATCHING LINE ARE THEN USED.
^SO, THE SEQUENCE,
.NF;.NJ
.B 1;.I 5
^^NARROW\\/SW1/SW2#######(EQUIVALENT TO ^^NARROW:ALL\\/SW1/SW2)
.BR
.I 5
^^NARROW:LOCAL\\/SW1/SW2
.B1;.LM0;.RM70;.F;.J
WOULD NEVER REACH THE SECOND LINE, SINCE THE FIRST LINE WILL
ALWAYS MATCH.
.B1
^THE SPOOLER WILL REQUEST THE OPERATOR TO CHANGE THE FORMS
ONLY IF THE FIRST FOUR CHARACTERS OF THE NEW FORM NAME DIFFER
FROM THE FIRST FOUR CHARACTERS OF THE OLD FORM NAME. ^THIS
ALLOWS ENTRIES IN ^^LPFORM.INI\\ OF THE FORM:
.B1;.I 10
^^NARROW/HEADER:1/BANNER:1/TRAILER:1
.BR
.I 10
NARR01/HEADER:0/BANNER:1/TRAILER:1
.BR
.I 10
NARR02/HEADER:0/BANNER:0/TRAILER:0/WHAT\\
.BR
.B1;.LM0;.RM70
^THE SPOOLER WILL SCHEDULE ANY OF THE THREE TYPES OF FORMS,
^^NARROW, NARR01, \\OR ^^NARR02, \\WITHOUT ASKING THE OPERATOR
TO CHANGE THE FORMS (PROVIDED THAT ONE OF THE SPECIFIED FORMS
ALREADY IS MOUNTED).
^HOWEVER, THE SWITCHES WILL BE DIFFERENT FOR EACH OF THE SPECIFIED FORMS.
.PG
.B2;.C
----------^EXAMPLE----------
.B
^ASSUME THAT THE ^^LPFORM.INI\\ FILE CONTAINS THE FOLLOWING ENTRY:
.B2;.LM10;.TS10;.I-10
^^LABELS:LPT1/CHAIN:96CHRS/RIBBON:CARBON/VFU:LBLDAV/NOTE:USE 4-UP LABELS\\
.B
^IF YOU ISSUE A COMMAND SUCH AS:
.B2;.I-10
^^PRINT NAFILE/FORM:LABELS\\
.B
^THE PRINT REQUEST IS QUEUED ON THE PRINTER QUEUE. ^WHEN THE REQUEST IS SCHEDULED TO BE
PROCESSED, ^^LPTSPL\\ SEARCHES THE ^^LPFORM.INI\\ FILE FOR A FORMSNAME
MATCHING THE /^^FORM\\: SWITCH ARGUMENT. ^FINDING THE ^^LABELS\\ ENTRY,
^^LPTSPL\\ OUTPUTS THE FOLLOWING:
.B2;.I-10
^^MOUNT LABELS FORMS THEN TYPE GO\\
.B
^YOU WILL ALSO BE REMINDED OF THE SWITCH SETTINGS VIA THE FOLLOWING MESSAGES:
.B2;.I-10
[^^DRUM(CHAIN):96CHRS]
.I-10
[RIBBON:CARBON]
.I-10
[NOTE:USE 4-UP LABELS]\\
.B
^IF ^^LPT1\\ HAS A DIRECT ACCESS VERTICAL FORMS UNIT (^^DAVFU\\),
^^LPTSPL\\ ATTEMPTS TO LOAD IT WITH THE FILE, ^^LBLDAV.VFU\\. ^IF THE FILE
IS FOUND, THE FOLLOWING MESSAGE IS ISSUED:
.B2;.I-10
[^^LPTLVF LOADING VFU LBLDAV IN LPT1]\\
.B
^IF THE FILE CANNOT BE FOUND, THE FOLLOWING MESSAGE IS ISSUED:
.B2;.I-10
%^^LPTCFV CANNOT FIND VFU LBLDAV FOR LPT1, REQUEUING JOB\\
.B
^YOU CAN THEN EITHER LOCATE THE FILE, KILL THE JOB, OR CHANGE THE
/^^VFU:\\ SWITCH.
.B
^IF ^^LPT1\\ DOES NOT HAVE A ^^DAVFU\\, ^^LPTSPL\\ ASSUMES THAT A PAPER
CARRIAGE TAPE IS TO BE MOUNTED. ^YOU WILL RECEIVE THE FOLLOWING MESSAGE:
.B2;.I-10
^^PLEASE PUT VFU TAPE LBLDAV IN LPT1\\
.LM0;.B3
4.5.1.1##^&^^LPTSPL O\\PERATOR ^MESSAGES\&#-#^THE
FOLLOWING MESSAGES FROM ^^LPTSPL\\ CAN APPEAR ON THE OPERATOR'S CONSOLE.
.B2;.LM9;.TS9;.I-9
^^?LPTAWN	ACCOUNTING WILL NOT BE DONE\\#-#MSG
.B
^WHERE MSG REPRESENTS ONE OF THE FOLLOWING TWO MESSAGES:
.PG
.LS;.LE;^^NO PRIVILEGES\\#-# ^THE OPERATOR HAS NO PRIVILEGES TO
WRITE THE ^^FACT\\ FILE, AND
.LE;^^DAEMON NOT RUNNING\\#-#^THE ^^DAEMON\\ PROGRAM HAS NOT BEEN
INITIALIZED. ^IT MUST BE STARTED BY THE OPERATOR TO ALLOW
ENTRIES TO BE WRITTEN INTO THE ^^FACT.SYS\\ FILE.
.ELS
.LM9;.TS9;.I-9
^^?LPTCAF	CAN'T ACCESS FILE\\ FILENAME, ^^CODE\\ NNN#-#XXX
.B
^^LPTSPL\\ ENCOUNTERED AN ERROR WHILE LOOKING UP THE FILE IT WAS TRYING
TO PRINT. NNN AND XXX ARE THE CODE NUMBER AND TEXT RESPECTIVELY OF ONE OF THE
ERROR CODES LISTED IN THE ^MONITOR ^CALLS MANUAL.
.B2;.I-9
^^%LPTCCF	CAN'T CHANGE FORMS IN THE MIDDLE OF A JOB\\
.B
^THE OPERATOR ISSUED A ^^FORMS\\ COMMAND WHILE A JOB WAS BEING PROCESSED.
^TYPE ^^PAUSE\\ AND WAIT FOR THE CURRENT JOB TO BE COMPLETED.
.B2;.I-9
^^%LPTCCL	CCL ENTRY IS NOT SUPPORTED\\
.B
^^LPTSPL\\ DOES NOT SUPPORT ^^CCL\\ ENTRY (I.E., ^^RUN\\ WITH AN
INCREMENT OF 1). ^IT IS TREATED AS A STANDARD ^^RUN\\.
.B2;.I-9
^^?LPTCFA	CAN'T FIND ALIGN FILE\\: FILENAME
.B
^^LPTSPL\\ WAS UNABLE TO FIND THE SPECIFIED ALIGNMENT FILE. ^THE
FILE MUST BE ON ^^SYS:.\\
.B2;.I-9
%^^LPTCFD	CANNOT FIND DEFAULT VFU FILE FOR\\ DEV,
^^LOADING HARDWARE VFU AS DEFAULT\\
.B
^^LPTSPL\\ CAN'T FIND THE DEFAULT ^^VFU\\ FILE AND IS LOADING THE HARDWARE
^^VFU\\ INSTEAD. ^THE OPERATOR SHOULD REALIGN THE FORMS AND PLACE THE
PRINTER ON LINE.
.B2;.I-9
%^^LPTCFV	CANNOT FIND VFU\\ FILENAME ^^FOR\\ DEV, ^^REQUEING JOB\\
.B
^^LPTSPL\\ CANNOT FIND THE SPECIFIED ^^DAVFU\\ FILE FOR THE DEVICE. ^IF THE
FILE IS NOT AVAILABLE, KILL THE JOB OR CHANGE THE ^^LPFORM.INI\\
FILE ENTRY TO REMOVE THAT ^^DAVFU\\ REFERENCE.
.B2;.I-9
^^[LPTCPC	CLEARING PENDING EXIT, RESET, AND PAUSE COMMANDS\\]
.B
^THE OPERATOR ISSUED A ^^"START\\" COMMAND WHILE ^^LPTSPL\\ WAS ALREADY
STARTED AND THERE WERE OTHER COMMANDS PENDING. ^^LPTSPL\\ CLEARS
THE COMMAND(S) AND CONTINUES PROCESSING.
.B2;.I-9
^^?LPTDDE	DEVICE\\ DEV ^^DOES NOT EXIST\\
.B
^THE DEVICE SPECIFIED IN THE ^^START\\ COMMAND DOES NOT EXIST.
^THE DEVICE DESIGNATION WAS TYPED INCORRECTLY OR THE DEVICE
WAS NOT ASSIGNED TO THIS JOB.
.PG
.B2;.I-9
^^?LPTDIS	DEVICE\\ DEV ^^IS SPOOLED\\
.B
^THE DEVICE SPECIFIED IN THE ^^START\\ COMMAND IS SPOOLED.
^^LPTSPL\\ CAN WRITE ONLY ON PHYSICAL DEVICES.
.B2;.I-9
^^%LPTEWL	ERROR WRITING LOG FILE, STATUS\\ NNN
.B
^^LPTSPL\\ ENCOUNTERED AN ERROR WHILE IT WAS TRYING TO WRITE OUT THE ^^LOG\\ FILE.
.B2;.I-9
^^[LPTFAF\\	FORMSNAME ^^FORMS ARE FROZEN]\\
.B
^INFORMS THE OPERATOR THAT THE SPECIFIED FORMS ARE NOW FROZEN.
.B2;.I-9
%^^LPTFPM	FORMS PARAMETER FILE LPFORM.INI IS MISSING\\
.B
^^LPTSPL\\ CAN'T FIND THE ^^LPFORM.INI\\ FILE AND WILL USE THE DEFAULT VALUES.
.B2;.I-9
^^?LPTFSD	FILE SKIPPED DUE TO I/O ERRORS, STATUS\\ NNN
.B
^^LPTSPL\\ SKIPPED THE FILE IT WAS PROCESSING BECAUSE IT ENCOUNTERED TOO
MANY ^I/^O ERRORS. ^THE ALLOWABLE NUMBER OF ERROR RECOVERIES (%^^LPTIDE\\),
BEFORE THIS MESSAGE IS ISSUED, IS A CONDITIONAL ASSEMBLY PARAMETER OF ^^LPTSPL\\
AND IS SET BY THE SYSTEM ADMINISTRATOR. ^THE DEFAULT NUMBER IS FIVE.
.B2;.I-9
^^?LPTICA	ILLEGAL COMMAND ARGUMENT\\ ARG
.B
^THE ARGUMENT IS EITHER MISSPELLED OR IS NOT A VALID ARGUMENT FOR THIS COMMAND.
.B2;.I-9
^^%LPTIDE	INPUT DATA ERROR\\ NNN, ^^RECOVERY ATTEMPTED\\
.B
^AN ERROR WAS ENCOUNTERED WHILE ^^LPTSPL\\ WAS READING THE FILE
IT WAS TRYING TO OUTPUT. ^THE NNN REFLECTS THE ^I/^O STATUS.
.B2;.I-9
^^%LPTLAS	LPTSPL IS ALREADY START'ED ON\\ DEV
.B
^THE OPERATOR ISSUED A ^^START\\ COMMAND TO A DEVICE THAT WAS ALREADY RUNNING ^^LPTSPL\\.
.B2;.I-9
^^[LPTLIR	LPTSPL IS RESET ON\\ DEV]
.B
^THE COPY OF ^^LPTSPL\\ THAT WAS PROCESSING ON ANOTHER DEVICE
HAS BEEN ^^RESET\\ ON THE SPECIFIED DEVICE BY THE OPERATOR AND IS AWAITING A NEW ^^START\\ COMMAND.
.B2;.I-9
[^^LPTLVF	LOADING VFU\\ FILENAME ^^IN\\ DEV]
.B
^THIS MESSAGE INFORMS THE OPERATOR THAT ^^LPTSPL\\ IS
LOADING THE ^^DAVFU\\ FILE FILENAME INTO THE DEVICE DEV.
.PG
.B2;.I-9
[^^LPTLWP	LPTSPL WILL PAUSE AT END OF JOB\\]
.B
^THE OPERATOR ISSUED A ^^PAUSE\\ COMMAND TO ^^LPTSPL\\ WHILE IT WAS IN THE MIDDLE
OF A JOB. ^THIS MESSAGE OCCURS IN RESPONSE TO A ^^WHAT\\ COMMAND.
.B2;.I-9
^^[LPTSIS	SPOOLER IS STOP'ED OR PAUSE'ING]\\
.B
^THIS MESSAGE IS OUTPUT IN RESPONSE TO THE ^^WHAT\\ OPERATOR COMMAND.
.B2;.I-9
^^%LPTURC\\	CMD ^^IS AN UNRECOGNIZED COMMAND\\
.B
^THE OPERATOR ISSUED A COMMAND THAT IS UNKNOWN TO ^^LPTSPL.\\
.B2;.I-9
?^^LPTVFE		VFU ERROR ON\\ DEV, ^^PLEASE REALIGN THE FORMS\\
.B
^THE DEVICE DEV HAD A FORMAT ERROR IN THE ^^DAVFU\\ AND THE PRINTER
IS NOW OFF-LINE. ^RESET FORMS TO TOP-OF-FORM POSITION BEFORE TURNING
PRINTER ON-LINE.
.B2;.I-9
^^[LPTWFF	WAITING FOR\\ FORMSNAME ^^FORMS TO BE MOUNTED\\]
.B
^THE SPOOLER IS WAITING FOR THE OPERATOR TO MOUNT THE SPECIFIED FORMS. ^THE
OPERATOR MUST CHANGE THE FORMS AND TYPE ^^GO. T\\HIS MESSAGE
IS OUTPUT IN RESPONSE TO THE ^^WHAT\\ OPERATOR COMMAND.
.B2;.I-9
^^[LPTWFS	WAITING FOR A START COMMAND\\]
.B
^THE OPERATOR MUST ISSUE A ^^START\\ COMMAND TO CAUSE ^^LPTSPL\\ TO BEGIN
PROCESSING. ^THIS MESSAGE IS OUTPUT IN RESPONSE TO THE ^^WHAT\\ OPERATOR COMMAND.
.LM0;.F;.J
.HL 2 ^&^^SPROUT\&\\
^^SPROUT\\, THE SPOOLING PROCESSOR FOR OUTPUT, IS A PROGRAM THAT HANDLES
ALL FILES QUEUED TO SPOOLED OUTPUT DEVICES OTHER THAN THE LINE PRINTER;
BOTH THOSE SUBMITTED THROUGH ^^QUEUE\\ AND SPOOLED REQUESTS GENERATED
BY USER PROGRAMS. ^THE SPOOLED DEVICES FOR WHICH ^^SPROUT\\ PROCESSES FILES
ARE THE PAPER-TAPE PUNCH, THE CARD PUNCH, AND THE PLOTTER.
^ONCE ^^SPROUT\\ IS RUNNING, ^^QUASAR\\, THE MASTER CONTROLLER, HANDLES THE SCHEDULING 
OF JOBS TO BE PROCESSED.
.B
^YOUR PRIMARY RESPONSIBILITIES ARE TO START UP ONE OR MORE COPIES
OF ^^SPROUT\\ TO PROCESS OUTPUT FILES ON APPROPRIATE
DEVICES; ADJUST VARIOUS SYSTEM PARAMETERS WHEN NECESSARY TO ENSURE OPTIMUM
SYSTEM PERFORMANCE; MONITOR THE SUPPLY OF TAPE, CARDS, AND/OR
PLOTTER PAPER; ATTEND TO JAMS IN THE DEVICES; AND, DISTRIBUTE THE OUTPUT
IF IT IS THE PRACTICE AT YOUR INSTALLATION FOR THE OPERATOR TO DO SO.
.B;.PS69,70
^ONE OR MORE COPIES OF ^^SPROUT\\ ARE USUALLY BROUGHT UP AUTOMATICALLY
(VIA THE ^^OPR.ATO\\ FILE, ^SECTION 4.1.1.2) WHEN THE ^^TOPS-10\\ MONITOR IS LOADED. ^IF
IT BECOMES NECESSARY TO START ^^SPROUT\\ MANUALLY, YOU MAY USE
THE PROCEDURE(S) GIVEN BELOW. ^REMEMBER THAT A SEPARATE ^^SPROUT\\ JOB MUST BE LOADED AND STARTED
FOR EACH TYPE OF SPOOLED OUTPUT DEVICE. ^YOU CANNOT HAVE FILES
QUEUED TO MORE THAN ONE TYPE OF OUTPUT DEVICE RUNNING UNDER A SINGLE
COPY OF ^^SPROUT.\\
.PG
.B
^IF ^^OPSER\\ IS NOT ALREADY RUNNING, START IT UP BY TYPING ^^R OPSER\\.
^NEXT, TYPE ONE OR MORE OF THE FOLLOWING PROCEDURES TO ^^OPSER.\\
.PS67,70;.B;.LM25;.TS25;.I-20
^^*:SLOG\\ 1,2	LOG IN A SUBJOB
.I-20
^^!:DEF CP=\\	GIVE THE SUBJOB THE NAME ^C^P
.I-20
^^!CP-R SPROUT\\	LOAD ^^SPROUT\\
.B;.I-25
AND WHEN ^^SPROUT\\ PROMPTS WITH A SLASH, TYPE
.B;.I-20
^^!CP-CARDS\\	START THE CARD-PUNCH SPOOLER
.B;.I-25
^TO START THE PLOTTER SPOOLER:
.B;.I-20
^^*:SLOG\\ 1,2	LOG IN ANOTHER SUBJOB
.I-20
^^!:DEF PL=\\	GIVE THIS SUBJOB THE NAME ^P^L
.I-20
^^!PL-R SPROUT\\	LOAD ^^SPROUT\\
.B;.I-25
AND WHEN ^^SPROUT\\ PROMPTS WITH A SLASH, TYPE
.B;.I-20
^^!PL-PLOT\\	START THE PLOTTER SPOOLER
.B;.LM0
^SHOULD ANY OF THE SPOOLED DEVICES SUPPORTED BY ^^SPROUT\\ BECOME
INOPERATIVE, OUTPUT CAN BE DIVERTED TO MAGNETIC TAPE. ^FOR EXAMPLE,
IF THE CARD PUNCH GOES DOWN YOU CAN TYPE THE FOLLOWING:
.B;.I5
^^*CP-R SPROUT
.B;.I5
!CP-CARDS MTA0:=CDP0:\\
.B
AND THE CARD IMAGES INTENDED FOR THE CARD PUNCH WILL BE DIVERTED
TO MAGNETIC TAPE DEVICE 0.
.B
^FOR ADDITIONAL INFORMATION, INCLUDING ERROR PROCEDURES, REFER
TO THE ^^SPROUT\\ CHAPTER IN THE "^^GALAXY\\ ^OPERATIONS AND ^SYSTEM
^PROGRAMMING ^PROCEDURES" IN THE ^SOFTWARE ^NOTEBOOKS.
.B3
4.5.2.1##^&^^SPROUT#O\\PERATOR#^MESSAGES\&#-#^THE
FOLLOWING MESSAGES FROM ^^SPROUT\\ CAN APPEAR ON THE OPERATOR'S TERMINAL.
.B2;.LM9;.TS9;.I-9
^^?SPOAWN	ACCOUNTING WILL NOT BE DONE\\ - MSG
.B
^WHERE MSG REPRESENTS ONE OF THE FOLLOWING TWO MESSAGES:
.LS;.LE;^^NO PRIVILEGES\\#-#^THE OPERATOR HAS NO PRIVILEGES TO WRITE THE FACT FILE, AND
.LE;^^DAEMON NOT RUNNING\\#-#^THE ^^DAEMON\\ PROGRAM HAS NOT BEEN INITIALIZED.
^IT MUST BE STARTED BY THE OPERATOR TO ALLOW ENTRIES TO BE WRITTEN INTO
THE ^^FACT.SYS\\ FILE.
.ELS
.I-9
^^?SPOCAF	CAN'T ACCESS FILE\\ FILENAME, ^^CODE\\ NNN=XXX
.B;.PS69,70
^^SPROUT\\ ENCOUNTERED AN ERROR WHILE LOOKING UP THE FILE IT WAS ATTEMPTING
TO OUTPUT. NNN AND XXX REFER TO THE NUMBER AND TEXT RESPECTIVELY
OF ONE OF THE ERROR CODES LISTED IN THE ^MONITOR ^CALLS MANUAL.
.B2;.I-9
^^%SPOCCF	CAN'T CHANGE FORMS IN THE MIDDLE OF A JOB\\
.B
^THE OPERATOR ISSUED A ^^FORMS\\ COMMAND WHILE A JOB WAS BEING PROCESSED.
^TYPE ^^PAUSE\\ AND WAIT FOR THE CURRENT JOB TO BE COMPLETED.
.PG
.B2;.I-9
^^%SPOCCL	CCL ENTRY IS NOT SUPPORTED\\
.B;.PS67,70
^^SPROUT\\ DOES NOT SUPPORT ^^CCL\\ ENTRY (I.E., ^^RUN\\ WITH
AN INCREMENT OF 1). ^IT IS TREATED AS A STANDARD ^^RUN.\\
.B2;.I-9
^^[SPOCPC	CLEARING PENDING EXIT, RESET, AND PAUSE COMMANDS!]\\
^THE OPERATOR ISSUED A ^^START\\ CLASS COMMAND WHILE THE SPOOLER WAS
ALREADY ^^START\\ED AND THERE WERE OTHER COMMANDS PENDING. ^THE SPOOLER
CLEARS THE COMMAND(S) AND CONTINUES PROCESSING.
.B2;.I-9
^^?SPODDE	DEVICE\\ DEV ^^DOES NOT EXIST\\
.B
^THE DEVICE SPECIFIED IN THE START-CLASS COMMAND (I.E., ^^CARDS,
PLOT\\, OR ^^TAPE\\) DOES NOT EXIST; EITHER BECAUSE IT WAS TYPED
INCORRECTLY OR BECAUSE THE DEVICE WAS NOT ASSIGNED TO THIS JOB.
.B2;.I-9
^^?SPODIS	DEVICE\\ DEV ^^IS SPOOLED\\
.B
^THE DEVICE SPECIFIED IN THE START-CLASS COMMAND (I.E.,
^^CARDS, PLOT\\, OR ^^TAPE\\) IS SPOOLED. ^^SPROUT\\ CAN WRITE ONLY ON
PHYSICAL DEVICES.
.B2;.I-9
^^[SPOFAF\\	FORMSNAME ^^FORMS ARE FROZEN!]\\
.B
^INFORMS THE OPERATOR THAT THE SPECIFIED FORMS ARE NOW FROZEN.
.B2;.I-9
^^?SPOFLE	FORMS LIMIT EXCEEDED ON DEVICE\\ DEV
.B
^^SPROUT\\ HAS PROCESSED A FILE ON A DEVICE WHICH HAS JUST
EXCEEDED ITS OUTPUT FORMS LIMIT.
.B2;.I-9
^^?SPOFSD	FILE SKIPPED DUE TO I/O ERRORS, STATUS\\ NNN
.B
^^SPROUT\\ SKIPPED THE FILE IT WAS PROCESSING BECAUSE IT ENCOUNTERED
TOO MANY ^I/^O ERRORS. ^THE ALLOWABLE NUMBER OF ERROR RECOVERIES
(%^^SPOIDE\\) BEFORE THIS MESSAGE IS ISSUED IS A CONDITIONAL ASSEMBLY
PARAMETER OF ^^SPROUT\\ AND IS SET BY THE SYSTEM ADMINISTRATOR. ^THE
DEFAULT NUMBER IS FIVE.
.B2;.I-9
^^?SPOICA	ILLEGAL COMMAND ARGUMENT\\ ARG
.B
^THE ARGUMENT IS EITHER MISSPELLED OR IS NOT A VALID ARGUMENT
FOR THIS COMMAND.
.B2;.I-9
^^%SPOIDE	INPUT DATA ERROR\\ NNN, ^^RECOVERY ATTEMPTED\\
.B
^AN ERROR WAS ENCOUNTERED WHILE ^^SPROUT\\ WAS READING
THE FILE IT WAS TRYING TO OUTPUT. ^THE NNN REFLECTS THE ^I/^O STATUS.
.B2;.I-9
^^?SPOODE	OUTPUT DEVICE ERROR ON\\ DEV, ^^STATUS\\ NNN
.B
^AN ERROR WAS ENCOUNTERED WHILE ^^SPROUT\\ WAS TRYING TO WRITE ON THE SPECIFIED DEVICE.
.PG
.B2;.I-9
^^%SPORUU	REQUEST USES UNIMPLEMENTED FORMAT\\
.B
^AN OUTPUT REQUEST WAS QUEUED THAT SPECIFIED AN OPTION THAT IS
NOT AVAILABLE IN THE CURRENT VERSION OF ^^SPROUT.\\
.B2;.I-9
^^%SPOSAS	SPROUT IS ALREADY STARTED ON \\DEV!]
.B
^THE OPERATOR ISSUED A START-CLASS COMMAND (I.E., ^^CARDS, PLOT,\\
OR ^^TAPE\\) WHEN ^^SPROUT\\ WAS ALREADY PROCESSING ON THE DEVICE.
.B2;.I-9
^^[SPOSIS	SPOOLER IS STOP'ED OR PAUSE'ING\\]
.B
^THIS MESSAGE IS OUTPUT IN RESPONSE TO THE ^^WHAT\\ OPERATOR COMMAND.
.B2;.I-9
^^[SPOSIR	SPROUT IS RESET ON\\ DEV]
.B
^THE COPY OF ^^SPROUT\\ WHICH WAS PROCESSING ON ANOTHER DEVICE HAS BEEN
^^RESET\\ BY THE OPERATOR ON THE SPECIFIED DEVICE AND IS AWAITING A NEW
START-CLASS COMMAND (I.E., ^^CARDS, PLOT\\, OR ^^TAPE\\).
.B2;.I-9
^^[SPOSWP	SPROUT WILL PAUSE AT END OF JOB!]\\
.B
^THE OPERATOR ISSUED A ^^PAUSE\\ COMMAND TO ^^SPROUT\\ WHILE IT WAS
IN THE MIDDLE OF A JOB. ^THIS MESSAGE IS OUTPUT IN RESPONSE TO
THE ^^WHAT\\ OPERATOR COMMAND.
.B2;.I-9
^^[SPOWFF	WAITING FOR\\ FORMSNAME ^^FORMS TO BE MOUNTED!]\\
.B
^THE SPOOLER IS WAITING FOR THE OPERATOR TO MOUNT THE SPECIFIED FORMS. ^THE
OPERATOR MUST CHANGE THE FORMS AND TYPE ^^GO. T\\HIS MESSAGE IS OUTPUT
IN RESPONSE TO THE ^^WHAT\\ OPERATOR COMMAND.
.B2;.I-9
^^[SPOWFS	WAITING FOR START-CLASS COMMAND!]\\
.B
^THE OPERATOR MUST ISSUE A START-CLASS COMMAND (I.E.,
^^CARDS, PLOT\\, OR ^^TAPE\\) TO CAUSE ^^SPROUT\\ TO BEGIN PROCESSING. ^THIS
MESSAGE IS OUTPUT IN RESPONSE TO THE ^^WHAT\\ OPERATOR COMMAND.
.LM0
.HL 1 ^&INPUT SPOOLER (SPRINT)\&\\
^^SPRINT\\ IS A ^D^E^CSYSTEM-10 SYSTEM PROGRAM WHICH READS
ANY SEQUENTIAL INPUT STREAM AND ENTERS JOBS INTO THE ^^BATCON\\
INPUT QUEUE. ^NORMALLY THE INPUT STREAM IS FROM A CARD
READER, BUT DISK AND MAGNETIC TAPE ALSO CAN BE HANDLED.
^^SPRINT\\ ANALYZES THE INPUT STREAM FOR CARD READER SPOOLER
CONTROL CARDS (COLUMN 1=$) AND PROCESSES THEM. ^THE REMAINING
CARDS ARE COPIED TO VARIOUS FILES FOR PROCESSING BY THE
USER JOB. ^^SPRINT\\ CREATES THE JOB'S ^^LOG\\ FILE AND
ENTERS A REPORT OF PROCESSING INTO THIS FILE. ^OTHER INFORMATION
MAY BE ENTERED INTO THIS FILE EITHER BY MEANS OF USER CONTROL
CARDS OR BY MEANS OF OPERATOR INTERVENTION.
.B1
^^SPRINT\\ MAY BE RUN EITHER AS A DIRECTLY-CONTROLLED
TIMESHARING JOB OR AS A SUBJOB OF ^^OPSER\\.
.PG
.B1
^TO START ^^SPRINT\\ RUNNING AS A TIMESHARING JOB,
TYPE:
.B1;.TS10
	^^_.R SPRINT\\
.B1
TO WHICH ^^SPRINT\\ RESPONDS WITH:
.B1;.TS10
	/
.B1
^TO START ^^SPRINT\\ RUNNING AS AN ^^OPSER\\ SUBJOB,
TYPE THE FOLLOWING TO ^^OPSER\\:
.B1;.TS10
	*:^^SLOG 1,2
.BR
	*:^^DEF S=
.BR
	*:S-^R ^^SPRINT\\
.B1
 ^^OPSER\\ RESPONDS WITH THE TIMESTAMP
.B1;.TS10
	!^^HH:MM(S)\\
.B1
FOLLOWED BY ^^SPRINT\\'S RESPONSE
.B1;.TS10
	/
.B1
^WHEN ^^SPRINT\\ RESPONDS WITH A SLASH,
^^SPRINT\\ IS READY TO RECEIVE COMMANDS FROM THE OPERATOR'S
CONSOLE. ^THE FOLLOWING SAMPLE OF CONSOLE LOG OUTPUT IS THE RESULT OF LOADING AND
STARTING ^^SPRINT\\ AND THEN QUERYING ITS STATUS.
^THE ^^SPRINT\\ COMMANDS ARE DESCRIBED IN DETAIL BELOW.
.B1;.TS5,35
	!^S-^R ^^SPRINT\\	OPERATOR COMMAND TO LOAD ^^SPRINT\\
.BR
	!13:20(^S)	^^OPSER\\ TIMESTAMP
.BR
	#######/	^^SPRINT\\ PROMPT
.BR
	!^^S-START\\	OPERATOR COMMAND TO START ^^SPRINT\\
.BR
	!13:20(^S)	^^OPSER\\ TIMESTAMP
.BR
	#######!	^^SPRINT\\ PROMPT
.BR
	!^^S-WHAT\\	OPERATOR COMMAND TO QUERY SUBJOB
.BR
	!13:21(^S)	^^OPSER\\ TIMESTAMP
.BR;.TS12,35
	^^SPRINT IS IDLE ON CDRO	SPRINT\\ RESPONSE
.TS12,35
.BR
	!	^^SPRINT\\ PROMPT
.B1
^THE ^^START\\ COMMAND TELLS ^^SPRINT\\ TO BEGIN 
PROCESSING. ^THE FORMAT OF THE ^^START\\ COMMAND IS:
.B1;.TS10
	^^START\\ DEV:FILENAME.EXT
.B1
^IF THE ENTIRE ARGUMENT IS OMITTED,
THE COMMAND /^^START\\ IS INTERPRETED AS /^^START\\ 
^^CDR\\:. ^IF ONLY THE FILENAME AND EXTENSION ARE TYPED,
THE COMMAND /^^START MYFILE.SPT\\
IS INTERPRETED AS /^^START DSK:MYFILE.SPT\\.
.B1
^^SPRINT\\ SPECIFICALLY SUPPORTS THREE DEVICES FOR INPUT;
THE CARD-READER, MAGNETIC TAPE AND DISK. ^EACH OF THE THREE
INPUT DEVICES IS HANDLED DIFFERENTLY WITH RESPECT TO INPUT
MODE AND IN RESPONSE TO END-OF-FILE AS DESCRIBED IN ^TABLE 4-4.
.PG
.B 2;.C
^TABLE 4-4
.C
^INPUT ^DEVICE ^CHARACTERISTICS
.B2;.LM2;.RM68;.TS12,30
^DEVICE	^MODE	^RESPONSE ^TO ^^EOF\\
.B2;.LM28;.TS12,28;.I-26
^^CDR\\	^SUPER-^IMAGE	^TRIES TO READ NEXT JOB. ^IF NONE IS
FOUND, SLEEPS FOR 10 SECONDS, AND TRIES AGAIN.
.B1;.I-26
^^MTA	ASCII\\	^WAITS FOR ANOTHER ^^START\\ COMMAND.
.B1;.I-26
^^DSK	ASCII\\	^WAITS FOR ANOTHER ^^START\\ COMMAND.
.B2;.LM0;.RM70
^^SPRINT\\ RESPONDS TO ALL COMMANDS WITH EITHER A SLASH (/)
OR AN EXCLAMATION POINT (!). ^A SLASH IS USED WHEN ^^SPRINT\\
IS NOT PROCESSING AND IS AWAITING OPERATOR INPUT. ^AN EXCLAMATION
POINT IS USED WHEN ^^SPRINT\\ IS PROCESSING A JOB BUT IS
ALSO WAITING FOR A TYPE-IN.
.B1
^BEFORE EACH CARD, DISK BLOCK, OR TAPE BLOCK IS READ, ^^SPRINT\\ CHECKS
FOR THE PRESENCE OF AN OPERATOR COMMAND.
^IF A COMMAND HAS BEEN
TYPED, ^^SPRINT\\ PROCESSES IT IMMEDIATELY (EXCEPT AS
NOTED IN THE DESCRIPTION OF THE COMMAND). ^YOU MAY
CONTINUE A COMMAND ON A SUBSEQUENT LINE (OR LINES) BY USING
THE STANDARD CONTINUATION CHARACTER, THE HYPHEN (-) AS THE
LAST NON-^^TAB\\, NON-SPACE, OR NON-COMMENT CHARACTER ON THE
LINE (OR LINES) TO BE CONTINUED. ^^SPRINT\\ RESPONDS TO A
CONTINUATION WITH A NUMBER SIGN (_#) PROMPT. ^THE FOLLOWING
SEQUENCE OF COMMANDS ILLUSTRATES THE USE OF THE CONTINUATION
CHARACTER;
.B1;.TS10
	/^^START DSKB:INPUT\\.-
.BR
	_#^^SPT\\[77,77]
.HL 2 ^&^^SPRINT C\\OMMANDS\&
\\^THE ^^SPRINT\\ COMMANDS ARE:
.B1;.TS30
^^COMMAND	DESCRIPTION\\
.F;.J;.B1;.LM25;.TS25;.I-25
^^EXIT\\(^SEE NOTE 1)	^GO TO MONITOR COMMAND LEVEL. ^THIS COMMAND TAKES
.FN5
.B
------------------
.BR
^NOTE 1:#^IF THIS COMMAND IS ISSUED WHILE ^^SPRINT\\ IS STOPPED IN
THE MIDDLE OF A JOB, IT WILL CAUSE AN AUTOMATIC ^G^O.
.END FOOTNOTE
EFFECT AT THE END OF THE CURRENT JOB.
.B1;.I-25
^^GO\\	^CONTINUE AFTER A ^^PAUSE\\ OR A ^^STOP\\ COMMAND.
.B1;.I-25
^^HELP\\	^TYPE THIS LIST OF COMMANDS AND THEIR ACTIONS.
.B1;.I-25
^^KILL\\(^SEE NOTE 1)	^KILL THE CURRENT JOB NOW AND FLUSH THE INPUT
STREAM UNTIL THE NEXT JOB IS ENCOUNTERED.
.B1
.I-25
^^MCORE\\ N	^SET THE MAXIMUM ALLOWABLE CORE LIMIT TO N^K
FOR ALL SUBSEQUENT JOBS. ^THIS COMMAND TAKES EFFECT AT THE
END OF THE CURRENT JOB.
.B1;.I-25
^^MSGLVL\\ ABC	^CONTROLS WHICH MESSAGES
^^SPRINT\\ TYPES TO THE OPERATOR.
.PG;.TS30;.I-25
^^COMMAND	DESCRIPTION\\
.B1;.LM25;.TS25
A=0##^TYPE SHORT MESSAGES TO OPERATOR.
.BR
##1##^TYPE LONG MESSAGES TO OPERATOR.
.BR
B=0##^SUPPRESS USER ERROR CARDS.
.BR
##1##^TYPE THE FIRST FATAL ERROR CARD OF
.BR
#####THE JOB.
.BR
##2##^TYPE EACH ERROR CARD.
.BR
C=0##^DO NOT TYPE ANY CARDS TO THE OPERATOR.
.BR
##1##^TYPE EACH $^^JOB\\ CARD.
.BR
##2##^TYPE EACH $ CARD.
.BR
##3##^TYPE ALL CARDS.
.B1
^THE DEFAULT IS 100 (TYPE LONG MESSAGES
BUT DO NOT TYPE USER ERRORS OR CARDS.)
.B1;.I-25
^^PAUSE\\	^PAUSE AT THE END OF THE CURRENT JOB.
.B1;.I-25
^^RESET\\(^SEE NOTE 1)	^RE-INITIALIZE ^^SPRINT\\. ^THIS HAS THE
.FN4
.B
------------------
.BR
^NOTE 1:#^IF THIS COMMAND IS ISSUED WHILE ^^SPRINT\\ IS STOPPED
IN THE MIDDLE OF A JOB, IT WILL CAUSE AN AUTOMATIC ^G^O.
.END FOOTNOTE
SAME EFFECT AS ^^CTRL/C\\ ^^CTRL/C\\ ^^START\\
(_^^C _^^C ^^START\\). ^THIS COMMAND IS DELAYED TO THE END
OF THE CURRENT JOB.
.B1;.LM25;.TS25;.I-25
^^START\\	^START ^^SPRINT\\ PROCESSING. ^THIS COMMAND
MAY NOT BE TYPED ONCE ^^SPRINT\\ HAS BEGUN PROCESSING UNLESS
A ^^RESET\\ IS TYPED FIRST AND NO JOBS ARE ACTIVE.
.B1;.I-25
^^STOP\\	^STOP READING IMMEDIATELY AND WAIT FOR FURTHER
COMMANDS. ^THE ^^GO\\ COMMAND WILL CAUSE PROCESSING TO CONTINUE
WITH NO ILL EFFECTS.
.B1;.I-25
^^TELL\\ MSG	^THIS COMMAND PLACES THE MESSAGE (MSG)
IN THE CURRENT JOB'S ^^LOG\\ FILE.
.B1;.I-25
^^WHAT\\	^GIVES THE CURRENT STATUS OF THE JOB.
.LM0;.RM70
.HL 2 ^&^^SPRINT O\\PERATOR MESSAGES\&\\
\\^THE FOLLOWING IS A LIST OF THE ^^SPRINT\\ DIAGNOSTIC AND
ERROR MESSAGES.
.B1;.LM10;.TS10;.I-10
%^^SPTAWN ACCOUNTING WILL NOT BE DONE\\ - MSG
.B1
^WHERE MSG REPRESENTS ONE OF THE FOLLOWING TWO MESSAGES:
.LS;.LE;^^NO PRIVILEGES\\#-#^THE OPERATOR HAS NO PRIVILEGES
TO WRITE THE FACT FILE, AND
.LE;^^DAEMON NOT RUNNING\\#-#^THE ^^DAEMON\\ PROGRAM HAS
NOT BEEN INITIALIZED. ^IT MUST BE STARTED BY THE OPERATOR
TO ALLOW ENTRIES TO BE WRITTEN INTO THE ^^FACT.SYS\\ FILE.
.ELS
.I-10
?^^SPTBFA BAD FORMAT FOR ACCOUNTING FILE\\
.B1
^THE ACCOUNTING FILE ^^ACCT.SYS\\ IS NOT IN A FORMAT UNDERSTOOD
BY ^^SPRINT\\. ^^SPRINT\\ ONLY RECOGNIZES ^^ACCT.SYS\\ FORMATS
2, 3, AND 4.
.B1;.I-10
?^^SPTCCC CAN'T CREATE CTL OR LOG FILE\\ - MSG
.B1
^^SPRINT\\ IS UNABLE TO CREATE EITHER THE CONTROL OR ^^LOG\\ FILE.
MSG REPRESENTS ONE OF THE MESSAGES EXPLAINED IN THE ERROR MESSAGE
SECTION OF THE ^COMMANDS ^MANUAL IN THE ^SOFTWARE ^NOTEBOOKS.
.B1;.I-10
?^^SPTCCI CAN'T CLEAR UFD INTERLOCK\\
.B1
^^SPRINT\\ INVOKED A SOFTWARE INTERLOCK WHEN CREATING
A USER'S ^^UFD\\, AND COULD NOT RELEASE THE INTERLOCK 
AFTERWARDS. ^CONSULT YOUR SYSTEM PROGRAMMER ABOUT THIS PROBLEM.
.B1;.I-10
%^^SPTCCL CCL ENTRY IS NOT SUPPORTED\\
.B1
^^SPRINT\\ DOES NOT SUPPORT ^^CCL\\ ENTRY (I.E., ^^RUN\\
WITH AN INCREMENT OF 1). ^IT IS TREATED AS A STANDARD ^^RUN\\.
.B1;.I-10
%^^SPTCDI DEVICE\\ DEV ^^CAN'T DO INPUT\\
.B1
^INPUT CANNOT BE PERFORMED ON THE DEVICE SPECIFIED IN THE
^^START\\ COMMAND. ^FOR EXAMPLE, INPUT MAY HAVE BEEN REQUESTED
FOR A DEVICE THAT CAN DO ONLY OUTPUT, SUCH AS THE LINE-PRINTER
(E.G., ^^START LPT\\:).
.B1;.I-10
?^^SPTCEC CAN'T EXPAND CORE\\
.B1
^^SPRINT\\ REQUESTED AN AMOUNT OF CORE THAT THE MONITOR WAS
UNABLE TO GIVE IT.
.B1;.I-10
?^^SPTCER COMMAND ERROR - RETYPE LINE\\
.B1
^THERE IS A SYNTAX ERROR IN THE COMMAND STRING.
.B1;.I-10
%^^SPTCME CARD-MOTION ERROR ON CDR\\N
.B1
^A CARD WAS NOT READ CORRECTLY. ^RESET THE LAST CARD AND
PRESS THE ^^RESET\\ BUTTON ON THE CARD READER.
.B1;.I-10
?^^SPTCOD CAN'T OPEN THE DISK\\
.B1
^AN ^^OPEN\\ CALL ON DEVICE ^^DSK\\ FAILED. ^THIS IS 
GENERALLY A SYMPTOM OF A MORE SERIOUS MONITOR PROBLEM.
.B1;.I-10
?^^SPTCRA CAN'T READ ACCOUNTING FILE\\
.B1
^^SPRINT\\ ENCOUNTERED DIFFICULTIES WHILE ATTEMPTING TO READ
THE ACCOUNTING FILE. ^CONSULT THE
SYSTEM ADMINISTRATOR.
.B1;.I-10
?^^SPTDDI DOUBLE DIRECTORY ILLEGAL\\
.B1
^TWO DIRECTORY NAMES CANNOT APPEAR WITHOUT AN INTERVENING
FILENAME.
.B1;.I-10
?^^SPTDDV DOUBLE DEVICE ILLEGAL\\
.B1
^TWO NAMES APPEARED IN A ROW WIHOUT AN INTERVENING FILENAME
(E.G., ^^LPT:PTP\\:) OR, TWO COLONS APPEARED IN A ROW
(E.G., ^^DSKA::FILEX\\).
.B1;.I-10
?^^SPTDEX DOUBLE EXTENSION ILLEGAL\\
.B1
^TWO EXTENSIONS CANNOT APPEAR IN A ROW WITHOUT AN INTERVENING
FILENAME OR COMMA (,).
.B1;.I-10
?^^SPTDFN DOUBLE FILENAME ILLEGAL\\
.B1
^TWO FILENAMES APPEARED IN A ROW (E.G., $^^COBOL TEST1
 TEST2) \\OR, TWO PERIODS APPEARED IN A ROW
(E.G., ^^TEST\\..^^CBL\\).
.B1;.I-10
[^^SPTDNR INPUT DEVICE\\ DEV ^^NOT READY\\]
.B1
^THE SPECIFIED INPUT DEVICE REQUIRES OPERATOR ACTION TO 
PREPARE IT FOR READING.
.B1;.I-10
%^^SPTDTM DATA MISSED ERROR ON CDR\\N
.B1
^A CARD WAS NOT READ CORRECTLY. ^RESET THE LAST CARD
AND PRESS THE ^^RESET\\ BUTTON.
.B1;.I-10
%^^SPTDUF DAEMON UUO FAILED - CODE\\ NNN
.B1
^AN ERROR EXISTED WHEN ^^SPRINT\\ CALLED ^^DAEMON\\ TO
DO JOB ACCOUNTING. ^REFER TO
THE ^D^E^CSYSTEM-10 ^MONITOR ^CALLS MANUAL FOR AN EXPLANATION
OF THE ERROR CODE NNN. ^REPORT ANY OCCURRENCES OF THIS MESSAGE
TO YOUR SYSTEM ADMINISTRATOR.
.B1;.I-10
%^^SPTDVE INPUT DEVICE ERROR  ON CDR\\N
.B1
^A CARD WAS NOT READ CORRECTLY. ^RESET THE LAST CARD AND PRESS
THE ^^RESET\\ BUTTON ON THE CARD READER.
.B1;.I-10
?^^SPTERA ERROR READING ACCOUNTING FILE\\
.B1
^^SPRINT\\ ENCOUNTERED DIFFICULTIES WHILE ATTEMPTING
TO READ THE ACCOUNTING FILE. ^CONSULT YOUR SYSTEM ADMINISTRATOR.
.B1;.I-10
^^%SPTHPE HOPPER EMPTY OR STACKER FULL ON CDR\\N
.B
^ONE OF THE FOLLOWING TWO CONDITIONS EXIST:
.LS;.LE;^THE INPUT HOPPER IS EMPTY AND ^^SPRINT\\ IS EXPECTING MORE
CARDS BECAUSE THE END OF JOB HAS NOT BEEN REACHED, OR
.LE;^THE OUTPUT STACKER IS FULL AND ^^SPRINT\\ CANNOT READ
ANY MORE CARDS UNTIL ROOM IS MADE FOR THEM.
.ELS
^IN EITHER CASE, CORRECT THE CONDITION AND PRESS THE ^^RESET\\ BUTTON.
.B;.I-10
?^^SPTIDS ILLEGAL DIRECTORY SPECIFICATION\\
.B1
^THE FORMAT OF THE DIRECTORY INFORMATION ENCLOSED WITHIN THE
SQUARE ([]) OR ANGLE (<>) BRACKETS IS INCORRECT.
.B1;.I-10
?^^SPTILU ILLEGAL LUUO IN SPRINT\\
.B1
^THIS IS CAUSED BY AN INTERNAL ERROR IN ^^SPRINT\\. ^RERUN
THE JOB.
.B1;.I-10
?^^SPTIOE I/O ERROR WRITING LOG OR CTL FILE\\
.B1
^AN ^I/^O ERROR OCCURRED WHILE WRITING THE ^^LOG\\ OR THE
^^CTL\\ FILE. ^THE JOB MUST BE RERUN.
.B1;.I-10
?^^SPTLKE LOOKUP/ENTER ERROR\\ NNN - XXX
.B1
^^SPRINT\\ ENCOUNTERED AN ERROR WHILE LOOKING UP A FILE
SPECIFIED BY THE OPERATOR IN THE ^^START\\ COMMAND. NNN AND XXX REFER TO
THE NUMBER AND TEXT RESPECTIVELY OF ONE
OF THE MESSAGES EXPLAINED IN THE ^D^E^CSYSTEM-10
^OPERATING ^SYSTEM ^COMMANDS ^MANUAL (^D^E^C-10-^^OSCMA-A-B-D\\).
.B1;.I-10
?^^SPTNCA NO CORE FOR ACCT.SYS INDEX\\
.B1
^^SPRINT\\ BUILDS AN IN-CORE INDEX OF THE ACCOUNTING FILE
^^ACCT.SYS\\. ^THIS MESSAGE INDICATES THAT ^^SPRINT\\
COULD NOT EXPAND ITS CORE AREA SUFFICIENTLY TO BUILD THE
INDEX.
.B1;.I-10
?^^SPTNDV NULL DEVICE ILLEGAL\\
.B1
^A COLON HAS BEEN FOUND WITHOUT A PRECEDING DEVICE NAME.
.B1;.I-10
?^^SPTNHS NO HIGH SEGMENT - TYPE R SPRINT\\
.B1
^^SPRINT\\ WAS NOT INVOKED VIA A ^^RUN\\ OR A ^^GET\\ 
COMMAND OR A ^^RUN \\MONITOR CALL. ^RELOAD, SAVE IT, AND THEN 
^^START\\ OR ^^RUN\\.
.B1;.I-10
?^^SPTNJA NO JOBS ACTIVE\\
.B1
^A COMMAND WAS GIVEN BY THE OPERATOR TO PERFORM AN ACTION
(^^KILL, TELL\\, ETC.) FOR THE CURRENT JOB, BUT ^^SPRINT\\
WAS NOT PROCESSING ANY JOBS AT THE TIME THE COMMAND WAS
ISSUED.
.B1;.I-10
?^^SPTNSD NO SUCH DEVICE\\ DEV
.B1
^THE DEVICE DOES NOT EXIST OR IT WAS NOT ASSIGNED TO 
THIS JOB.
.B1;.I-10
%^^SPTNST SPRINT IS NOT START'ED\\
.B1
^THE OPERATOR MUST TYPE ^^START\\ (REFER TO THE ^^START\\
COMMAND IN SECTION 4.6.1) TO CAUSE ^^SPRINT\\ TO BEGIN
PROCESSING.
.B1;.I-10
?^^SPTNYP SPECIFIED PPN IS NOT YOURS\\
.B1
^THE PROJECT-PROGRAMMER NUMBER ON THE $^^JOB\\ CARD IS
DIFFERENT FROM THE ONE USED TO LOG IN. ^THIS OCCURS ONLY
WHEN A USER, RATHER THAN THE SYSTEM OPERATOR IS RUNNING
^^SPRINT\\.
.B1;.I-10
[^^SPTOIR OPERATOR INTERACTION REQUIRED\\]
.B1
^THIS IS THE RESPONSE TO THE ^^WHAT\\ COMMAND IF OPERATOR
INTERACTION IS REQUIRED TO CONTINUE PROCESSING.
.B1;.I-10
^^%SPTPKF PICK FAILURE ON CDR\\N
.B
^THE CARD ABOUT TO BE READ CANNOT BE DRAWN THROUGH THE CARD READER. ^CHECK THE FIRST
CARD IN THE INPUT HOPPER AND TAKE APPROPRIATE
ACTION. ^TO CONTINUE READING, REPLACE THE CARD, OR A DUPLICATE, BACK IN THE INPUT HOPPER AND PRESS THE ^^RESET\\ BUTTON.
.B;.I-10
%^^SPTRCK READ CHECK ON CDR\\N
.B1
^A CARD WAS NOT READ CORRECTLY. ^RESET THE LAST CARD AND 
PRESS THE ^^RESET\\ BUTTON ON THE CARD READER.
.B1;.I-10
[^^SPTRLC RESET THE LAST CARD AND PRESS THE RESET BUTTON\\]
.B1
^A CARD WENT THROUGH THE CARD-READER BUT WAS NOT READ CORRECTLY.
^THIS MESSAGE IS ALWAYS PRECEDED BY ONE OF THE FOLLOWING FOUR
MESSAGES:
.B1;.TS25
	1.##%^^SPTCME
.BR
	2.##%SPTDTM
.BR
	3.##%SPTDVE
.BR
	4.##%SPTRCK\\
.BR
.B1;.I-10
?^^SPTROM REMOTE OPERATOR MUST RUN SYSTEM SPRINT\\
.B1
^THE OPERATOR AT A REMOTE ^BATCH STATION ATTEMPTED TO RUN
A VERSION OF ^^SPRINT\\ THAT DID NOT RESIDE ON ^^SYS\\:.
.B1;.I-10
?^^SPTSND SFD NESTING TOO DEEP\\
.B1
^THE DIRECTORY SPECIFICATION IN A FILESPEC REQUIRED A DIRECTORY
PATH WHICH CONTAINED MORE THAN THE MAXIMUM PERMISSABLE NUMBER
OF ^^SFD\\'S.
.B1;.I-10
%^^SPTSPL DEVICE\\ DEV ^^IS SPOOLED\\
.B1
^THE INPUT DEVICE SPECIFIED IN THE ^^START\\ COMMAND
IS SPOOLED. ^^SPRINT\\ SHOULD READ ONLY FROM PHYSICAL 
DEVICES.
.B1;.I-10
%^^SPTSTD SPRINT IS ALREADY START'ED ON\\ DEV
.B1
^^A START\\ COMMAND WAS ISSUED WHEN ^^SPRINT\\ WAS ALREADY
PROCESSING ON THE DEVICE.
.B1;.I-10
?^^SPTUIE UNRECOVERABLE INPUT DEVICE ERROR - STATUS\\ NNN
.B1
^^SPRINT\\ RECEIVED AN INPUT ERROR INDICATION FROM WHICH
IT COULD NOT RECOVER. ^THE ^I/^O STATUS WAS NNN.
.LM0;.RM70
.HL 1 ^&^^OPERATOR/USER COMMUNICATION\&\\
\\^THE COMMUNICATION BETWEEN THE OPERATOR AND AN INTERACTIVE USER
IS HANDLED BY TWO COMMANDS: THE ^^PLEASE\\ COMMAND AND THE 
^^SEND\\ COMMAND. ^BOTH COMMANDS ARE DISCUSSED BELOW.
.HL 2 ^&^^PLEASE\&\\
\\^THE ^^PLEASE\\ COMMAND PROVIDES FOR TWO-WAY COMMUNICATION
BETWEEN YOU AND THE USER. ^IT IS INITIATED BY THE USER
TYPING AT MONITOR LEVEL:
.B1;.I 5
_.^^PLEASE\\ TEXT<^C^R>
.B1;.LM0;.RM70
^THE TEXT IS OUTPUT ON YOUR OPERATOR TERMINAL (^^CTY\\). ^AFTER YOU HAVE
PERFORMED WHATEVER ACTION IS REQUESTED, YOU CAN ANSWER THE USER BY SIMPLY
TYPING A MESSAGE FOLLOWED BY A <^^CR\\>.
.B
^WHENEVER YOU RECEIVE A MESSAGE VIA THE ^^PLEASE\\ COMMAND, THE USER ISSUING THE COMMAND IS IDENTIFIED BY JOB NUMBER, PROJECT PROGRAMMER
NUMBER, TERMINAL NUMBER AND NAME. ^FOR EXAMPLE:
.B1
^USER [40,64] TYPES THE FOLLOWING LINE:
.B1;.I 5
_.^^PLEASE MOUNT SA029 ON DTA3 W/E <CR\\>
.B1
^THE MESSAGE IS TRANSMITTED TO THE ^^CTY\\ AND APPEARS AS
FOLLOWS:
.B1;.I 5
**^^PLEASE JOB 44 [40,64] TTY150 USER SPS
.I 5
MOUNT SA029 ON DTA3 W/E\\
.B1
^YOU MOUNT THE TAPE AND ANSWER:
.B1;.I 5
^^OK GO AHEAD <CR\\>
.B1
^YOUR REPLY APPEARS ON THE USER'S TERMINAL TO INFORM HIM 
OF THE COMPLETION OF HIS REQUEST.
.B1
^AT THIS TIME EITHER YOU OR THE USER MAY TYPE ^^ESC\\APE
TO RETURN BOTH TERMINALS TO THE MONITOR STATE. ^IT IS
ESSENTIAL THAT AN ^^ESC\\APE BE TYPED TO ALLOW
YOUR ^^CTY\\ TO RECEIVE ANOTHER ^^PLEASE\\ COMMAND. ^THE
NEXT IMPORTANT POINT YOU MUST REMEMBER IS THAT A JOB
MUST NEVER BE LOGGED IN ON THE OPERATOR'S ^^PLEASE\\ COMMAND
TERMINAL. ^THIS WILL CAUSE THE USER TO RECEIVE A BUSY MESSAGE
FROM ^^PLEASE\\ AND HIS COMMAND WILL NOT BE TRANSMITTED.
^IT IS ALSO IMPORTANT THAT YOU RESPOND TO THE ^^PLEASE\\
COMMANDS AS QUICKLY AS POSSIBLE FOR IN MOST CASES THE
USER CANNOT PROCEED TO OTHER WORK UNTIL HIS REQUEST IS COMPLETED.
.HL 2 ^&^^SEND\&\\
\\^THE ^^SEND\\ COMMAND PROVIDES A MEANS OF ONE-WAY
INTER-TERMINAL COMMUNICATION. ^ONE LINE OF INFORMATION AT A TIME IS
TRANSMITTED FROM ONE TERMINAL TO THE OTHER. ^THE FORMAT OF
THE ^^SEND\\ COMMAND IS:
.B1;.I 5
_.^^SEND TTY\\N:TEXT##WHERE N= THE ^^TTY\\ LINE NUMBER
.B;.I 5
_.^^SEND JOB\\ N TEXT###WHERE N= THE USER'S JOB NUMBER
.B1;.LM0
^YOU, AS THE OPERATOR, CAN USE THIS COMMAND TO TRANSMIT INFORMATION
TO EITHER A PARTICULAR USER OR TO ALL USERS SIMULTANEOUSLY.
^A USER, HOWEVER, CAN ONLY INITIATE A ^^SEND\\ COMMAND TO THE OPERATOR OR TO ANOTHER USER.
^IN THE CASE OF SENDING TO ONE PARTICULAR USER, YOU
WOULD FIRST DETERMINE THE CORRECT TERMINAL OR JOB NUMBER
USING ^^SYSTAT\\ AND THEN SEND A MESSAGE FROM THE ^^CTY\\ AS
FOLLOWS:
.B1;.I 5
_.^^SEND TTY150 I CANNOT FIND TAPE\\ 5
.B1;.LM0
^THE USER ON LINE 150 WOULD RECEIVE THE FOLLOWING MESSAGE ON HIS TERMINAL:
.B1;.I 5
;;^^CTY:#-#I CANNOT FIND TAPE\\ 5
.B1
^IN THE EVENT OF A PROSPECTIVE MONITOR RELOAD, YOU CAN
INFORM ALL USERS AS FOLLOWS:
.B1;.I 5
_.^^SEND ALL THE SYSTEM WILL BE RELOADED IN 5 MINS\\
.B1
^ALL TERMINALS THAT ARE TURNED ON WILL RECEIVE:
.B1;.I 5
;;^^CTY:#-#THE SYSTEM WILL BE RELOADED IN 5 MINS\\
.B1
^WHEN A USER SENDS YOU A MESSAGE, THE ^^CTY\\ WILL RECEIVE
.B1;.I 5
;;^^TTY150 - TAPE 5 IS ON TOP OF THE DTA CABINET\\
.B1;.PS69,70
^YOU WILL KNOW WHICH TERMINAL INITIATED THE COMMAND
BY THE LINE NUMBER.
.B1
^YOU HAVE SPECIAL PRIVILEGES THAT THE
USER DOES NOT HAVE. ^YOU CAN SEND A MESSAGE TO ANY TERMINAL
REGARDLESS OF THE STATE OF THE JOB ON THAT TERMINAL. ^A USER
WILL RECEIVE A ?^^BUSY\\ MESSAGE IF THE RECEIVING TERMINAL
IS NOT AT MONITOR COMMAND LEVEL AND THE ^^GAG\\ SWITCH 
IS SET (^^SET TTY GAG\\ IS THE INITIAL STATE).
.B
^THE ^^SEND\\ COMMAND DOES NOT REQUIRE A JOB TO BE LOGGED IN TO BE INITIATED FROM A TERMINAL.
.PG
.PS67,70;.LM0;.RM70;.F;.J;.SP 1
.NUMBER CHAPTER 5
.CH ^&OPERATOR TASKS\&\\
\\^THE PROCEDURES EXPLAINED IN THIS CHAPTER ARE PERFORMED PERIODICALLY TO PROVIDE THE
INSTALLATION WITH INFORMATION ABOUT SYSTEM USAGE AND PERFORMANCE
AND A MEANS OF ENSURING THE INTEGRITY OF THE SYSTEM. ^MOST OF THE PROCEDURES
CAN BE ACCOMPLISHED USING THE ^^GALAXY B\\ATCH ^SYSTEM, THEREBY
REQUIRING A MINIMUM OF OPERATOR INTERVENTION. ^HOWEVER, THERE ARE SOME
PROCEDURES THAT MUST BE PERFORMED MANUALLY BECAUSE OF SPECIFIC PROGRAM
RESPONSES REQUIRED OF THE OPERATOR. ^THE TASKS AS THEY ARE DESCRIBED IN
THIS CHAPTER INCLUDE EXPLANATIONS OF WHAT THE PROGRAMS DO AND WHY
THEY ARE RUN, ALONG WITH THE STEPS REQUIRED TO EXECUTE THEM. ^IT WILL BE YOUR RESPONSIBILITY
TO BE ABLE TO RUN ALL THESE PROCEDURES WITHOUT USING THE ^BATCH ^SYSTEM,
IF THE NEED ARISES.
.HL 1 ^&DAILY TASKS\&\\
\\^THE FOLLOWING OPERATOR TASKS ARE USUALLY RUN ON A DAILY SCHEDULE.
.HL 2 ^&UPDATE \\THE MESSAGE \\OF \\THE DAY\&\\
\\^THE FILE ^^NOTICE.TXT\\, LOCATED IN THE ^^SYS\\:[1,4] AREA OF THE DISK,
CONTAINS MESSAGES THAT ARE TRANSMITTED TO USERS AS THEY LOG IN. ^THESE
MESSAGES, NORMALLY PRECEDED BY THE DATE ON WHICH THEY FIRST APPEAR,
ARE USUALLY BRIEF AND CONTAIN IMPORTANT SYSTEM INFORMATION.
^FOR EXAMPLE, A MESSAGE MAY SPECIFY THE HOURS THAT THE SYSTEM WILL BE ON THE
AIR, OR STATE WHEN THE DISKS WILL BE REFRESHED, OR MENTION NEW SYSTEM
FEATURES. ^YOU CAN CHANGE ^^NOTICE.TXT\\ DURING THE DAY TO
WARN USERS OF PROBLEMS ON THE SYSTEM, TO NOTIFY THEM OF YOUR INTENTION
TO STOP TIMESHARING, OR TO DIRECT USERS TO A MORE LENGTHY FILE FOR
ADDITIONAL INFORMATION.
.B
^TO CHANGE, ADD, OR DELETE A MESSAGE IN THE FILE ^^NOTICE.TXT\\,
YOU CAN LOG IN ON [1,2] AND RUN AN EDITING PROGRAM SUCH AS ^^TECO\\.
(^REFER TO ^INTRODUCTION TO ^^TECO\\ AND ^^TECO\\ IN THE ^SOFTWARE
^NOTEBOOKS.) ^FOR EXAMPLE, TO ADD A MESSAGE AS OF ^APRIL 12TH AND DELETE
A 3-LINE MESSAGE DATED ^MARCH 18TH, YOU WOULD ENTER:
.B2;.LM45;.TS45;.I-45
_.^^R TECO\\	^RUN ^^TECO\\ AND SPECIFY THAT
.I-45
*^^ER SYS:NOTICE.TXT$EW SYS:NOTICE.TXT$Y$$\\	FILE ^^NOTICE.TXT\\ IS TO BE
UPDATED. ^^SYS:\\ EQUALS DISK AREA [1,4].
.PG
.B;.I-45
*^^IAPR 12##THIS IS AN EXAMPLE OF<CR>\\	^THE# COMMAND# "^I" PLACES
.I-45
^^A TWO LINE MESSAGE.<CR>\\	YOU# IN# INPUT# MODE# AND
.I-45
<^^CR>\\	INSERTS EVERYTHING# FOL-
.I-45
$$	LOWING IT UP TO, BUT NOT INCLUDING, THE FIRST
^^ESC\\APE, INTO THE MESSAGE FILE. ^IF "^I" IS THE FIRST COMMAND AFTER
ENTERING ^^TECO\\, THE INSERTION IS MADE AT THE BEGINNING OF THE FILE. ^NEW MESSAGES ARE
ALWAYS PLACED AT THE BEGINNING OF THE ^^NOTICE.TXT\\ FILE.
^^ESC\\APE PRINTS AS $. ^THE DOUBLE ^^ESC\\APE ENDS
THE INSERTION COMMAND.
.B;.I-45
*^^SMAR 18$0L3K$$\\	^THIS COMMAND STRING SEARCHES FOR THE LINE CONTAINING THE TEXT
"^^MAR\\ 18", UNIQUELY IDENTIFYING THE OLD MESSAGE, AND DELETES THAT LINE PLUS THE NEXT TWO.
.B;.I-45
*^^EX$$\\	^A NEW ^^NOTICE.TXT\\ IS
.I-45
_.	FILED; THE OLD VERSION IS
AUTOMATICALLY SAVED AS ^^NOTICE.BAK\\; AND YOU EXIT ^^TECO\\ AND
RETURN TO MONITOR LEVEL.
.B2;.LM0
^NOTE THAT THE ABOVE COMMANDS COULD HAVE BEEN STRUNG TOGETHER AS FOLLOWS:
.B;.LM5;.NF;.NJ
_.^^R TECO
*ER SYS:NOTICE.TXT$EW SYS:NOTICE.TXT$Y$$
*IAPR 12##THIS IS AN EXAMPLE OF<CR>
A TWO LINE MESSAGE.<CR>
<CR>
$$
*SMAR 18$0L3K$EX$$\\
_.
.LM0;.F;.J
.HL 2 ^&^^SPACE \\WITH /^^FACT S\\WITCH\&\\
\\^THE ^^SPACE\\ PROGRAM IS RUN TO PROVIDE DISK USAGE INFORMATION.
^A LISTING IS PRODUCED SHOWING EACH USER'S QUOTAS AND ACTUAL USAGE.
^ENTRIES PERTAINING TO DISK USAGE ARE ENTERED INTO THE SYSTEM ^^FACT\\ FILE
FOR LATER USE. ^^SPACE\\ IS USUALLY RUN AS PART OF THE DAILY ^BATCH ^JOB
SUBMITTED TO THE BATCH INPUT QUEUE WITH A ^^SUBMIT\\ COMMAND, E.G.,
^^SUBMIT TASKS\\. ^TO RUN ^^SPACE\\ MANUALLY, YOU MUST BE LOGGED IN UNDER
[1,2] AND TYPE THE FOLLOWING COMMANDS:
.PG
.B2;.NF;.NJ;.TS4,46
	^^COMMAND	FUNCTION\\
.BR
	-------	--------
.BR
.B;.F;.J;.LM30;.TS30;.I-30
_.^^R SPACE\\	^RUN THE ^^SPACE\\ PROGRAM.
.B;.I-30
*^^DSK:=/FACT\\	^CREATE A DISK FILE WITH A DEFAULT FILENAME
OF ^^SPACE.LST\\ AND MAKE APPROPRIATE ENTRIES IN THE SYSTEM ^^FACT\\ FILE.
.B;.I-30
*_^^C	^RETURN TO MONITOR LEVEL.
.B;.I-30
_.^^PRINT SPACE.LST\\	^QUEUE ^^SPACE.LST\\ TO BE PRINTED.
.B;.LM0
^IF THE ^^MONEY\\ PROGRAM IS NOT TO BE RUN AT THIS TIME, COPY THE
^^FACT.SYS\\ FILE TO A BACK-UP TAPE AND SAVE IT FOR LATER PROCESSING.
.B
^USE THE /^^HELP\\ SWITCH IN THE ^^SPACE\\ PROGRAM OR TYPE THE MONITOR
COMMAND ^^HELP SPACE\\ FOR MORE INFORMATION ON THIS PROGRAM. ^RUNNING
^^SPACE\\ WITH THE ^^BATCH\\ SWITCH IS ILLUSTRATED FURTHER ON IN THIS CHAPTER.
.B
^THE ^^MONEY\\ PROCEDURE PRODUCES A LISTING SHOWING INDIVIDUAL USER CHARGES.
^THE COMMAND SEQUENCE THAT FOLLOWS USES ^^DEC\\TAPE AS THE BACK-UP MEDIUM;
IF MAGNETIC TAPE IS TO BE THE BACK-UP MEDIUM, USE THE ^^BACKUP\\
PROGRAM DESCRIBED IN THE ^SOFTWARE ^NOTEBOOKS.
.B2;.TS4,46
	^^COMMAND	FUNCTION\\
.BR
	-------	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^AS DTA\\N	^ASSIGN ^^DEC\\TAPE UNIT N (N=0-7) AND MOUNT THE
ACCUMULATED ^^FACT\\ FILES ON IT.
.B;.I-30
_.^^COPY FACT.SYS=DTA\\N:*.*	^CREATE A SINGLE DISK FILE, ^^FACT.SYS\\,
FROM THE ^^DEC\\TAPE FILES.
.B;.TS48
	^^NOTE\\
.B;.LM35;.RM65
^IF YOU ARE PROCESSING ONLY THE ^^FACT.SYS\\ FILE THAT YOU HAVE JUST
CREATED WITH THE ^^SPACE\\ PROGRAM, YOU CAN OMIT THE ABOVE TWO STEPS.
.B;.LM30;.RM70;.TS30;.I-30
_.^^AS DSK SYS	A\\SSIGN DISK LOGICAL NAME OF ^^SYS\\ TO CAUSE
THE ^^MONEY\\ PROGRAM TO LOOK AT YOUR DISK AREA FOR THE ^^FACT\\ FILE.
.B;.I-30
_.^^RUN MONEY\\[1,4]	^RUN THE ^^MONEY\\ PROGRAM ON [1,4]. ^THIS
WILL PRODUCE THE ^^MONEY\\ LISTINGS ON DISK.
.B;.I-30
_.^^DEA SYS\\	^REMOVE LOGICAL NAME ^^SYS\\ FROM DISK.
.B;.I-30
_.^^PRINT MONEY.SUM,*.LPT\\	^QUEUE THE MONEY LISTINGS TO BE PRINTED.
.B;.I-30
_.^^DEL FACT.SYS\\	^DELETE ^^FACT.SYS\\ FROM THE DISK.
.B;.TS48
	^^NOTE\\
.B;.LM35;.RM65;.PS69,70
^WHEN ^^MONEY\\ IS RUN THROUGH ^^BATCON\\, THE COMMAND ^^AS DTA\\N IS
REPLACED BY ^^MOUNT DTA:FACT/VID:FACTFILE\\ AND ANY REFERENCE TO ^^DTA\\N:
IS REPLACED BY ^^FACT:\\.
.LM0;.RM70;.PG
.HL 2 ^&UPDATE ACCOUNT FILES\&\\
.NT ^^CAUTION\\
\\^NO ATTEMPT SHOULD BE MADE TO UPDATE THE ACCOUNTING FILES UNLESS THE
OPERATOR IS COMPLETELY FAMILIAR WITH THE OPERATION OF THE ^^REACT\\ PROGRAM.
^THE DISCUSSION BELOW GIVES A FEW COMMON EXAMPLES USING ^^REACT\\.
^A COMPLETE DISCUSSION OF THE ^^REACT\\ PROGRAM IS CONTAINED IN THE ^^RUNREA\\ SPECIFICATION
FOUND IN THE ^SUPPLEMENTARY ^OPERATOR'S ^PROCEDURES OF THE
^SOFTWARE ^NOTEBOOKS. ^THERE ARE NO SAFEGUARDS BUILT INTO THE ^^REACT\\
PROGRAM AND A MISTAKE COULD PROVE TO BE QUITE SERIOUS. ^FOR THIS
REASON ALL ACCOUNTING FILE UPDATES SHOULD BE PERFORMED BY QUALIFIED
OPERATORS ONLY.
.EN
.PS67,70
^UPDATES ARE MADE TO THE SYSTEM FILES ON DISK AND ALSO TO BACKUP COPIES
OF THESE FILES ON ^^DEC\\TAPE OR MAGNETIC TAPE.
^FOLLOWING IS A LIST OF THE CURRENT
ACCOUNTING FILES:
.B2;.TS3,46
	^^FILE	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
^^ACCT.SYS\\	^CONTAINS THE USERS' PROJECT PROGRAMMER NUMBERS AND
ASSOCIATED DATA NECESSARY FOR USERS TO LOG ONTO THE SYSTEM.
.B;.I-30
^^AUXACC.SYS\\	^CONTAINS THE ALLOWABLE DISK QUOTAS FOR EACH USER.
.B;.I-30
^^QUOTA.SYS\\	^CONTAINS USER DISK QUOTAS ON OTHER THAN THE STANDARD
SYSTEM FILE STRUCTURES.
.B;.I-30
^^STRLST.SYS\\	^CONTAINS ENTRIES FOR ALL FILE STRUCTURES SHOWING THE
STRUCTURE OWNER, CONFIGURATION AND STRUCTURE TYPE.
.B;.LM0
^THE FUNCTIONS PERFORMED BY THE OPERATOR ARE TO INSERT NEW ENTRIES,
DELETE EXISTING ENTRIES, OR CHANGE EXISTING ENTRIES. ^SEVERAL
EXAMPLES ARE SHOWN BELOW.
.B
^EXAMPLE 1:#^INSERTING AN ENTRY IN ^^ACCT.SYS\\.
.B
^ADD A NEW USER [50,1234] TO THE ^^ACCT.SYS\\ FILE.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^R	^READ ^^ACCT.SYS\\ FROM ^^SYS\\ INTO THE ^^REACT\\ BUFFER.
.B;.I-30
*^I 50,1234	^INSERT# 50,1234# INTO# THE# FILE. ^^REACT\\
.I-30
^^NAME:JONES<CR>\\	WILL THEN# PROMPT# YOU# FOR# THE# USER'S
.PG;.TS3,46;.I-30
	^^STEP	FUNCTION\\
.I-30
	----	--------
.B;.TS30;.I-30
^^CODE:ABC$\\	NAME. ^ENTER THE NAME FOLLOWED BY A <^^CR\\>. ^^REACT\\ THEN
PROMPTS YOU FOR THE CODE (PASSWORD). ^ENTER THE PASSWORD FOLLOWED BY AN ^^ESC\\APE.
^AN ^^ESC\\APE CHARACTER INSTRUCTS ^^REACT\\ TO ASSUME THE DEFAULT
CONDITIONS FOR ALL OTHER PARAMETERS.
.B;.I-30
*^W	^WRITE THE UPDATED BUFFER BACK ONTO ^^SYS\\ AS ^^ACCT.SYS\\.
.B;.LM0
^EXAMPLE 2:#^INSERTING AN ENTRY IN ^^AUXACC.SYS\\.
.B
^ADD AN ENTRY FOR USER [50,1234] TO THE ^^AUXACC.SYS\\ FILE.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^A	^READ ^^AUXACC.SYS\\ FROM ^^SYS\\ INTO THE ^^REACT\\ BUFFER.
.B;.I-30
*^I 50,1234	^INSERT 50,1234 INTO THE FILE. ^THEN
.I-30
^^NUM STRS:1<CR>\\	ANSWER QUESTIONS AS TO NUMBER OF
.I-30
^^STR NAME:DSKB<CR>\\	STRUCTURES, DISK QUOTAS, AND STATUS
.I-30
^^RESRVD:0<CR>\\	BITS. ^THIS INFORMATION IS CONTAINED ON
.I-30
^^FCFS:1000<CR>\\	AN ACCESS FORM WHICH IS PREPARED IN THE
.I-30
^^QUOTA OUT:500<CR>\\	OFFICE.
.I-30
^^STATUS BITS:0<CR>\\
.B;.I-30
*^W	^WRITE THE UPDATED BUFFER BACK ONTO ^^SYS\\ AS ^^AUXACC.SYS\\.
.B;.LM0
^EXAMPLE 3:#^DELETING ENTRIES.
.B
^DELETE [2,167] FROM THE ^^ACCT.SYS\\ FILE.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^R	^READ ^^ACCT.SYS\\ INTO THE ^^REACT\\ BUFFER.
.B;.I-30
*^K 2,167	^KILL (DELETE) THE ENTRY FOR 2,167.
.B;.I-30
*^W	^WRITE UPDATED FILE BACK ONTO ^^SYS\\.
.B;.LM0
^EXAMPLE 4:#^CHANGING ENTRIES.
.B
^CHANGE THE ^^FCFS\\ FOR ^^DSKB\\ TO 1000 FOR USER [2,167]
IN ^^AUXACC.SYS\\.
.PG
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^A	^READ ^^AUXACC.SYS\\ INTO THE ^^ACT\\ BUFFER.
.B;.I-30
*^C 2,167	^CHANGE 2,167. ^^REACT\\ WILL NOW PROMPT FOR
.I-30
^^CHANGE:FCF\\	INFORMATION ON WHAT IS TO BE CHANGED AND
.I-30
^^ARGS:DSKB:1000$\\	WHAT THE NEW VALUE (^^ARG\\) IS TO BE. ^REPLY
TO THE PROMPTS.
.B;.I-30
*^W	^WRITE THE UPDATED FILE BACK ONTO ^^SYS\\.
.B;.LM0
^EXAMPLE 5:#^INSERTING AN ENTRY IN ^^QUOTA.SYS\\.
.B
^ADD A QUOTA ENTRY FOR USER 10,110 ON DISK ^^DSKC\\.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^^Q DSKC\\:[1,4]	^READ ^^QUOTA.SYS\\ FROM ^^DSKC.\\
.B;.I-30
*^I 10,110	^INSERT USER 10,110.
.B;.I-30
*^^RESRVD:0\\	^REPLY TO THE PROMPT WITH A RESERVED QUOTA OF 0 FOR
THE USER ON THIS FILE STRUCTURE.
.B;.I-30
*^^FCFS:\\1000	^REPLY TO THE PROMPT WITH A LOGGED-IN QUOTA OF
1000 BLOCKS.
.B;.I-30
*^^QUOTA OUT:\\500	^REPLY TO THE PROMPT WITH A LOGGED-OUT QUOTA
OF 500 BLOCKS.
.B;.LM0
^EXAMPLE 6:#^INSERTING A FILE STRUCTURE ENTRY IN ^^STRLST.SYS\\.
.B
^ADD FILE STRUCTURE ^^DSKC\\ FOR USER 10,110.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^S	^READ ^^STRLST.SYS\\.
.B;.I-30
*^^I DSKC\\	^INSERT STRUCTURE ^^DSKC\\.
.B;.I-30
^^PROJ,PROG:\\10,110	^REPLY TO A SERIES OF PROMPTS WITH P, PN,
.B;.I-30
^^NAME:SMITH\\	^USER NAME,
.B;.I-30
^^NUM UNITS\\:2	^NUMBER OF UNITS IN THE FILE STRUCTURE,
.B;.I-30
^^UNIT ID:1RP003\\	^UNIT IDENTIFICATION,
.B;.I-30
^^KONT TYPE:DP\\	^CONTROLLER TYPE,
.B;.I-30
^^UNIT TYPE:2\\	^UNIT TYPE
.PG;.TS3,46;.I-30
	^^STEP	FUNCTION\\
.I-30
	----	--------
.B;.TS30;.I-30
^^CLASS:0\\	^CLASS OF FILE STRUCTURE.
.B;.I-30
^^UNIT ID:2RP004\\	^^REACT\\ THEN REPEATS THE LAST FOUR PROMPTS
FOR AS MANY UNITS AS SPECIFIED IN ^^NUM UNITS\\:.
.B;.I-30
^^KONT TYPE:DP
.B;.I-30
UNIT TYPE:\\3
.B;.I-30
^^CLASS:0\\
.B;.I-30
*^W	^WRITE THE UPDATED FILE BACK ONTO ^^SYS\\.
.B;.LM0
^THE ENTIRE ^^REACT\\ DIALOGUE IS QUITE COMPLEX. ^YOU SHOULD REFER TO
THE ^^RUNREA\\ AND ^^REACT\\ DOCUMENTS IN THE ^SOFTWARE ^NOTEBOOKS
AND BECOME ACQUAINTED WITH ALL THE POSSIBLE PROMPTS AND RESPONSES.
.HL 2 ^&^^FILCOM\\ ACCOUNT FILES\&\\
\\^AT SPECIFIED TIMES, RUN THE FILE COMPARE PROGRAM (^^FILCOM\\) BETWEEN
DISK [1,4] VERSIONS, AND BACKUP TAPE VERSIONS OF THE ^^ACCT.SYS\\
AND ^^AUXACC.SYS\\ FILES. ^THESE FILES CONTAIN THE ENTRIES NECESSARY FOR A
USER TO LOG ONTO THE SYSTEM AS WELL AS THE USER DISK QUOTA ENTRIES.
^THIS PROCEDURE NOTES ANY DISCREPANCIES IN THE TWO FILES AND IS USED TO
PREVENT ANY USER'S TAMPERING WITH THE ACCOUNTING FILES. ^FOR ADDITIONAL SECURITY, THE
^^REACT\\ PROGRAM USED IN THE FOLLOWING COMMAND SEQUENCE CAN BE
RENAMED OR REMOVED FROM DISK ENTIRELY AND KEPT ON TAPE. ^THE
^^FILCOM\\ CAN BE PERFORMED AS PART OF A DAILY ^BATCH JOB.
^THE FOLLOWING PROCEDURE ASSUMES THAT BACKUP FILES ARE ON ^^DEC\\TAPE;
IF THEY ARE ON MAGNETIC TAPE, REPLACE ^^DTA\\ WITH ^^MTA\\.
.B2;.TS4,46
	^^COMMAND	FUNCTION\\
.BR
	-------	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^AS DTA\\X	^ASSIGN ^^DEC\\TAPE DRIVE X WHERE X=0-7.
^MOUNT THE ^^ACCT DEC\\TAPE ON ^^DTA\\X.
.B;.I-30
_.^^AS DSK LPT\\	^ASSIGN THE DISK A LOGICAL NAME OF ^^LPT\\ SO
THAT OUTPUT LISTINGS WILL GO TO THE DISK.
.B;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^R	^READ THE SYSTEM FILE ^^ACCT.SYS\\ FROM THE DISK.
.B;.I-30
*^P	^PURGE ANY EXPIRED ACCOUNT NUMBERS.
.B;.I-30
*^^L ACT.DSK\\	^CREATE A DISK FILE ^^ACT.DSK\\ CONTAINING
.I-30
^^LIST CODES?:Y\\	ALL THE ENTRIES PLUS PASSWORDS FROM THE SYSTEM FILE.
.B;.I-30
*^^R DTA\\X:	^READ ^^ACCT.SYS\\ FROM THE ^^DEC\\TAPE.
.B;.I-30
*^P	^PURGE ANY EXPIRED ACCOUNT NUMBERS.
.PG;.TS4,46;.I-30
	^^COMMAND	FUNCTION\\
.I-30
	-------	--------
.B;.TS30;.I-30
*^^L ACT.DTA\\	^CREATE A DISK FILE ^^ACT.DTA\\ CONTAINING
.I-30
#^^LIST-CODES?:Y\\	ALL THE ENTRIES PLUS PASSWORDS FROM THE ^^DEC\\TAPE FILE.
.B;.I-30
*^A	^READ THE SYSTEM FILE ^^AUXACC.SYS\\ FROM THE DISK.
.B;.I-30
*^^L AUX.DSK\\	^CREATE A DISK FILE ^^AUX.DSK\\ CONTAINING ALL THE
ENTRIES FROM THE SYSTEM FILE.
.B;.I-30
*^^A DTA\\X:	^READ ^^AUXACC.SYS\\ FROM THE ^^DEC\\TAPE.
.B;.I-30
*^^L AUX.DTA\\	^CREATE A DISK FILE ^^AUX.DTA\\ CONTAINING ALL THE
ENTRIES FROM THE ^^DEC\\TAPE FILE.
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND RUN THE ^^FILCOM\\
.I-30
_.^^R FILCOM\\	PROGRAM.
.B;.I-30
*^^ACCT=ACT.DSK,ACT.DTA\\	^CREATE A DISK FILE ^^ACCT.SCM\\
CONTAINING ANY DIFFERENCES IN THE ^^ACCT.SYS\\ FILES.
.B;.I-30
*^^AUX=AUX.DSK,AUX.DTA\\	^CREATE A DISK FILE ^^AUX.SCM\\
CONTAINING ANY DIFFERENCES IN THE ^^AUXACC.SYS\\ FILES.
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND QUEUE THE
.I-30
_.^^PRINT ACCT.SCM,AUX.SCM\\	_.^^SCM\\ FILES TO BE PRINTED.
.B;.I-30
_.^^DELETE *.DSK,*.DTA\\	^DELETE THE FILES CREATED ABOVE
BY THE ^^REACT\\ PROGRAM.
.B;.TS48
	^^NOTE\\
.B;.LM35;.RM65
^WHEN THIS JOB IS RUN USING ^^BATCON\\, THE FIRST COMMAND ^^AS DTA\\X
IS REPLACED WITH ^^MOUNT DTA:ACCT/WL\\ AND ANY REFERENCE TO ^^DTA\\X:
IS REPLACED BY ^^ACCT:.\\
.LM0;.RM70
.HL 2 ^&DETACHED JOB PROCEDURE\&\\
\\^THE PURPOSE OF THIS PROCEDURE IS TO RID THE SYSTEM OF INACTIVE JOBS
AT SPECIFIED TIMES DURING THE DAY. ^THE ACTION DESCRIBED HERE IS FOR A FIRST SHIFT OPERATOR.
.B
^AT 9 A.M., 12 NOON, AND 3 P.M., FOR EXAMPLE, YOU CAN RUN A ^^SYSTAT\\
ON THE ^^CTY\\. ^THE ^^SYSTAT\\ WILL SHOW ANY JOBS THAT ARE IN A
DETACHED STATE. ^THE 9 A.M. ^^SYSTAT\\ IS FILED. ^AT 12 NOON, A SECOND
^^SYSTAT\\ IS RUN AND COMPARED WITH THE 9 A.M. ^^SYSTAT\\. ^YOU
THEN DETERMINE IF THERE ARE ANY JOBS WHICH HAVE BEEN DETACHED AND
INACTIVE FOR THE COMPLETE 3-HOUR PERIOD. ^THIS CAN BE DETERMINED BY COMPARING
JOB NUMBER, PROJECT PROGRAMMER NUMBER, PROGRAM, STATE, AND RUNTIME.
^THE 3 P.M. ^^SYSTAT\\ CAN LIKEWISE BE COMPARED TO THE 12 NOON ^^SYSTAT\\.
^YOU CAN THEN ATTACH TO THE INACTIVE JOBS, FROM THE ^^CTY\\, AND
ATTEMPT TO LOG OFF THE JOB AS FOLLOWS:
.PG
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^AT\\ 5[4,111]	^ATTACH TO JOB 5, USER [4,111].
.I-30
^FROM ^JOB 2	^MONITOR RESPONSE.
.B;.I-30
_._^^C	^RETURN TO MONITOR AND
.I-30
_.^^SET SPOOL NONE\\	REMOVE SPOOLING TO ELIMINATE ANY OUTPUT.
.B;.I-30
_.^^K/F\\	^LOG OFF JOB WITH THE ^F OPTION.
.B;.LM0
^MAKE A NOTE ON THE ^^SYSTAT\\ OUTPUT CONCERNING THE ACTION TAKEN AND
FILE THE ^^SYSTAT\\ IN THE LOGBOOK. ^IF YOU ARE UNABLE TO KILL THE
JOB, FOR EXAMPLE, IF THE USER IS OVER QUOTA, YOU CAN TAKE THE
FOLLOWING ACTION:
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_._^^C	^RETURN TO THE MONITOR AND DETACH THE
.I-30
_.^^DET\\	JOB. ^THE SECOND SHIFT OPERATOR WILL
.I-30
^FROM JOB 5	TAKE CARE OF THIS JOB AT 10 P.M.
.B;.LM0
^MAKE A NOTE ON THE ^^SYSTAT\\ TO THE EFFECT THAT THE JOB COULD NOT
BE LOGGED OFF AND FILE THE ^^SYSTAT\\ IN THE LOGBOOK FOR LATER USE.
.B
^THE SECOND SHIFT OPERATOR CAN THEN COMPLETE THE DETACHED PROCEDURE
INITIATED ON THE FIRST SHIFT. ^THE OPERATOR CAN RUN A ^^SYSTAT\\ AT 6 P.M. AND AT 10 P.M. ^THESE ^^SYSTAT\\S CAN BE COMPARED TO THE
PREVIOUS ^^SYSTAT\\S TO DETERMINE IF THERE ARE ANY INACTIVE JOBS.
^AT 6 P.M. THE OPERATOR CAN FOLLOW THE SAME PROCEDURE AS THE FIRST
SHIFT OPERATOR. ^HE CAN ATTACH TO THE JOB AND ATTEMPT TO LOG IT OFF.
^AT 10 P.M. THE OPERATOR ACTION BECOMES MORE INVOLVED. ^UP UNTIL 10 P.M.,
JOBS WHICH CANNOT BE LOGGED OFF ARE SIMPLY DETACHED. ^AT 10 P.M.
IT IS THE OPERATOR'S RESPONSIBILITY TO GET RID OF THESE JOBS. ^BY CHECKING
A LIST OF FIRST AND SECOND OFFENDERS, THE OPERATOR CAN DECIDE THE
APPROPRIATE ACTION TO TAKE. ^IF THIS IS THE FIRST TIME A USER IS DETACHED
OVER QUOTA, THE FOLLOWING ACTION MIGHT BE TAKEN:
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^A	^READ ^^AUXACC.SYS\\ IN THE ^^REACT\\ BUFFER.
.B;.I-30
*^T PROJ,PROG	^TYPE THE DISK QUOTAS OF THE OFFENDING USER.
.B;.I-30
*^C PROJ,PROG	^CHANGE# THE #VALUES SO THAT THE #CURRENT
.I-30
^^CHANGE:FCF\\	LOGGED-OUT## QUOTA## BECOMES## THE## NEW
.I-30
^^ARGS:DSKB\\:NEW VALUE	LOGGED-IN### VALUE### AND# THE## CURRENT
.I-30
^^CHANGE:OUT\\	LOGGED-IN QUOTA###BECOMES### THE### NEW
.I-30
^^ARGS:DSKB:\\NEW VALUE$	LOGGED-OUT VALUE.
.B;.I-30
*^W	^WRITE THE UPDATED FILE BACK ONTO THE SYSTEM.
.B;.LM0
^ONCE THE QUOTAS HAVE BEEN INTERCHANGED, THE OPERATOR CAN LOG IN A
SECOND JOB UNDER THE OFFENDER'S PROJECT PROGRAMMER NUMBER. ^THE ORIGINAL
DETACHED JOB MAY NOW BE KILLED AND THE OPERATOR CAN THEN KILL THE SECOND JOB.
.B
^IF THE USER IN QUESTION IS A SECOND OFFENDER, THE OPERATOR CAN TAKE
THE FOLLOWING ACTION AFTER ATTACHING TO THE JOB.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_._^^C	^RETURN TO THE MONITOR AND LOG OFF THE
.I-30
^^K/W/B\\	JOB WITH THE /^W/^B OPTION. ^THIS WILL CAUSE THE LOGOUT
TO AUTOMATICALLY DELETE FILES TO GET THE USER UNDER QUOTA AND LOG
OFF THE JOB.
.B;.LM0
^IT IS VERY IMPORTANT THAT ALL TERMINAL OUTPUT CONCERNING THE DETACHED
JOB PROCEDURE BE FILED IN THE LOGBOOK FOR REFERENCE SHOULD ANY
QUESTIONS ARISE.
.HL 2 ^&^^BACKUP\\ (^DAILY)\&\\
\\^AT SOME PRESCRIBED TIME OF THE DAY, YOU SHOULD ARRANGE TO HAVE THE CONTENTS
OF THE DISKS SAVED ON MAGNETIC TAPE USING THE ^^BACKUP\\ PROGRAM.
^THIS WILL ALLOW YOU TO RECONSTRUCT A SYSTEM, IN THE EVENT OF AN UNFORESEEN
CRASH, AND LIMIT THE LOSS OF FILES TO THOSE ENTERED OR MODIFIED SINCE
THE PREVIOUS ^^BACKUP\\ PROCEDURE.
.B
^IF SAVING ALL FILES EVERY DAY SEEMS TOO TIME CONSUMING, DAILY
^^BACKUP\\S CAN BE RUN TO SAVE ONLY THOSE FILES THAT WERE CREATED OR
MODIFIED SINCE A SPECIFIC TIME THE DAY BEFORE. ^THE ENTIRE SYSTEM
NEED BE SAVED ONLY ONCE A WEEK; THE WEEKLY PROCEDURE IS EXPLAINED
LATER IN THIS CHAPTER.
.B
^THE ^^CTY\\ LOG OUTPUT OF ALL ^^BACKUP\\ PROCEDURES SHOULD BE FILED
IN THE ^SYSTEM ^LOGBOOK. ^WHEN FILES ARE LOST DURING A SYSTEM CRASH,
YOU CAN REFER TO THE ^^BACKUP\\ LOGS TO DETERMINE WHICH MAGNETIC TAPES
CONTAIN THE FILES TO BE RESTORED. ^THIS IMPLIES THAT YOU SET UP SOME
SYSTEM OF EXTERNALLY LABELING THE MAGNETIC TAPES AND THAT YOU ENTER
CORRESPONDING TAPE IDENTIFICATION ON THE ^^CTY\\ LOGS.
.B
^THE PROCEDURES INCLUDED BELOW COVER ONLY A FEW OF THE FEATURES AVAILABLE
IN ^^BACKUP\\. (^FOR A COMPLETE DESCRIPTION OF ALL ^^BACKUP\\ COMMANDS
AND SWITCHES, REFER TO THE ^^BACKUP\\ SPECIFICATION IN THE ^SOFTWARE ^NOTEBOOKS.)
.B
^EXAMPLE 1:#^SAVE SYSTEM DISK ^^DSKB\\.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R BACKUP\\	^RUN THE ^^BACKUP\\ PROGRAM.
.I-30
/^^TAPE MTA\\0	^USE TAPE ON ^^MTA\\0.
.I-30
/^^REWIND\\	^REWIND TO THE BEGINNING OF TAPE.
.I-30
/^^LIST DSK:\\	^PRODUCE DIRECTORY LISTING ON DISK (DEFAULT FILE NAME IS
^^BACKUP.LOG\\).
.I-30
/^^SAVE DSKB\\:	^SAVE ENTIRE CONTENTS OF ^^DSKB\\.
.I-30
!1,2 ^^DSKB\\	^^BACKUP\\ TYPES OUT EACH ^^UFD\\
.I-30
#1,3	AS IT BEGINS TO SAVE FILES
.I-30
#1,4	FROM THAT AREA.
.I-30
##_.
.I-30
##_.
.I-30
##_.
.B;.LM0
^IF THE TAPE BECOMES FULL BEFORE THE ^^SAVE\\ IS COMPLETED, ^^BACKUP\\ STOPS,
TYPES OUT THE FULL FILE IDENTIFICATION AND BLOCK NUMBER OF THE CURRENT
FILE BEING SAVED, REWINDS AND UNLOADS THE TAPE, AND TYPES THE MESSAGE:
.B;.I5
$^^BKPEOT REACHED EOT -- MOUNT NEW TAPE THEN TYPE "GO"\\
.B
^REMOVE THE FULL TAPE, MOUNT A NEW TAPE, AND TYPE ^^GO\\. ^^BACKUP\\
CONTINUES WITH THE ^^SAVE\\. (^A FILE MAY BE SPLIT ACROSS TAPES.) 
.B;.LM11;.TS11;.I-11
^EXAMPLE 2:	^SAVE ALL FILES THAT HAVE BEEN CREATED OR MODIFIED SINCE
6 P.M., YESTERDAY.
.LM0
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R BACKUP\\	^RUN THE ^^BACKUP\\ PROGRAM.
.I-30
/^^TAPE MTA\\0	^USE TAPE ON ^^MTA\\0.
.I-30
/^^REWIND\\	^REWIND TO THE BEGINNING OF TAPE.
.B;.TS30;.I-30
/^^SSNAME WED-PARTIAL\\	^GIVE THE ^^SAVE\\ FILE A NAME.
.I-30
/^^MSINCE:YESTERDAY:18:00\\	^CONDITION THE SAVE TO ALL FILES CREATED OR
MODIFIED SINCE 6 P.M. YESTERDAY.
.I-30
/^^SAVE\\	^^SAVE\\ THE FILES.
.I-30
!1,2 ^^DSKB\\	^^BACKUP\\ TYPES OUT EACH ^^UFD\\ THAT CONTAINS
.I-30
###_.	A FILE BEING SAVED.
.I-30
###_.
.I-30
###_.
.LM0
.HL 2 ^&^^SPACE \\WITH /^^BATCH S\\WITCH\&\\
\\^THE ^^SPACE\\ PROGRAM WITH /^^BATCH\\ SWITCH IS RUN EACH NIGHT
IMMEDIATELY AFTER COMPLETING THE ^^BACKUP\\ SAVE. ^ITS FUNCTION IS TO
LOG IN A BATCH JOB FOR ALL USERS WHO WERE ON THE SYSTEM DURING THE DAY
AND ALSO FOR USERS WHO EXCEEDED THEIR LOGOUT QUOTA BY MORE THAN 100 BLOCKS.
^A LISTING IS PRODUCED SHOWING EACH USERS QUOTAS AND ACTUAL USAGE. ^IN
THE CASE OF USERS WHO EXCEEDED THEIR LOGOUT QUOTA, FILES ARE AUTOMATICALLY
DELETED TO ALLOW THE ^BATCH JOB TO BE LOGGED OUT UNDER QUOTA. ^^SPACE\\
IS RUN WHILE LOGGED IN UNDER [1,2] AS FOLLOWS:
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R SPACE\\	^RUN THE ^^SPACE\\ PROGRAM.
.B;.I-30
*^^DSK:=DSKB:/BATCH\\	^CAUSE ^^SPACE\\ TO LOOK ONLY AT ^^DSKB\\ AND
PRODUCE ^^SPACE.LST\\.
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND QUEUE
.I-30
_.^^PRINT SPACE.LST\\	^^SPACE.LST\\ TO BE PRINTED.
.B;.LM0
^^SPACE.LOG\\ FILES ARE ALSO GENERATED FOR INDIVIDUAL USERS. ^THEY CAN
BE TREATED AS NORMAL LINE PRINTER OUTPUT AND RETURNED TO THE USER.
.B
^USE THE /^^HELP\\ SWITCH IN THE ^^SPACE\\ PROGRAM OR TYPE THE MONITOR
COMMAND ^^HELP SPACE\\ FOR MORE INFORMATION ON THIS PROGRAM. ^THE /^^FACT\\
SWITCH IS ILLUSTRATED IN A SEPARATE PARAGRAPH IN THIS SECTION.
.HL 2 ^&^^GRIPES\&\\
\\^DURING THE NORMAL COURSE OF TIMESHARING, THE USER HAS THE ABILITY TO
RUN THE ^^GRIPE\\ PROGRAM. ^USING THIS PROGRAM, HE CAN ENTER SUGGESTIONS,
COMPLAINTS, OR OTHER COMMENTS, WHICH ARE THEN STORED AS DISK FILES ON AREA
[3,3]. ^THE FUNCTION OF THIS PROCEDURE IS TO COMBINE ALL THE GRIPES
FOR THE DAY AND PRODUCE SEVERAL LISTINGS, WHICH ARE DISTRIBUTED TO
VARIOUS PEOPLE WHO WILL ANSWER THEM. ^THE PROCEDURE IS HANDLED COMPLETELY
BY ^BATCH. ^ALL YOU NEED DO IS MOUNT THE ^^GRIPE \\TAPE AFTER SUBMITTING THE ^^GRIPE.CTL\\ FILE
WHILE LOGGED IN UNDER [1,2] AS FOLLOWS:
.B;.I5
_.^^SUBMIT GRIPE.CTL\\
.B
^THE FOLLOWING MANUAL PROCEDURE ASSUMES ^^DEC\\TAPE AS A BACKUP
MEDIUM; FOR MAGNETIC TAPE, USE THE ^^BACKUP\\ PROGRAM TO SAVE AND RESTORE
THE ^^GRIPE\\ FILES.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^DIR *.CMP\\[3,3]	^CHECK AREA [3,3] FOR ANY ^^CMP\\ (^^GRIPE)\\
FILES. ^IF THERE ARE NONE, STOP HERE.
.B;.I-30
_.^^R PIP\\	^RUN THE ^^PIP\\ PROGRAM.
.B;.I-30
*^^GRIPE=*.CMP\\[3,3]	^CREATE A DISK FILE ^^GRIPE\\, WHICH CONTAINS
ALL THE ^^CMP\\ FILES FROM [3,3].
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND DELETE ALL THE
.I-30
_.^^DEL *.CMP\\[3,3]	^^CMP\\ FILES FROM AREA [3,3].
.B;.I-30
_.^^AS DTA\\N	^ASSIGN ^^DTA\\N (WHERE N=0-7) AND MOUNT THE
PREVIOUS ^^GRIPE DEC\\TAPE ON IT WITH WRITE ENABLED.
.B;.I-30
_.^^R PIP\\	^RUN THE ^^PIP\\ PROGRAM.
.I-30
*^^G=DTA\\N:*.^^TXT,DSK:GRIPE\\	^CREATE A DISK FILE ^G, WHICH CONSISTS OF
THE COMBINED ^^GRIPE\\S FROM ^^DTA\\N AND ^^DSK\\.
.B;.I-30
*^^DTA\\N:^^GRIPES.TXT=G\\	^PUT THE UPDATED ^^GRIPE\\S FILE
BACK ONTO ^^DTA\\N.
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND QUEUE THE N
.I-30
_.^^PRI GRIPE/COP:\\N/^^DIS:REN\\	COPIES OF THE ^^GRIPE\\
FILE TO BE DISTRIBUTED LATER.
.B;.I-30
_.^^DELETE G\\	^DELETE DISK FILE ^G.
.B;.LM0
^IN THE ABOVE EXAMPLE, THE LISTING CONTAINS THE GRIPES FOR THE CURRENT
DAY. ^THE TAPE CONTAINS GRIPES ACCUMULATED ACCORDING TO SOME
SCHEDULE DETERMINED BY YOUR INSTALLATION. ^THE SCHEDULE CAN BE
WEEKLY OR MONTHLY BASED UPON THE GRIPE FREQUENCY, OR IT CAN BE BASED
STRICTLY ON TAPE CAPACITY.
.HL 2 ^&SAVING ^^FACT F\\ILES\&\\
\\^THE SYSTEM ^^FACT\\ FILES, CONTAINING ALL THE DATA NECESSARY TO
COMPUTE USER CHARGES, MUST BE BACKED UP EACH NIGHT TO ENSURE AGAINST
THEIR LOSS. ^THIS BACKUP PROCEDURE SHOULD BE THE LAST JOB DONE EACH
NIGHT. ^ALL OTHER SYSTEM JOBS MUST BE LOGGED OFF AND ONLY ONE [1,2]
JOB LEFT TO RUN THIS PROCEDURE. ^THE ^^FACT\\ FILES SHOULD BE SAVED
ON BOTH A ^^DEC\\TAPE (OR MAGNETIC TAPE) AND A PRIVATE DISK PACK. ^THESE FILES ARE USED
BOTH DAILY AND MONTHLY TO PRODUCE THE ^^MONEY\\ LISTINGS DISCUSSED IN ^SECTION 5.1.2.
^THE FOLLOWING STEPS ASSUME ^^DEC\\TAPE AS A BACKUP
MEDIUM; FOR MAGNETIC TAPE, USE THE ^^BACKUP\\ PROGRAM.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^REN *.*=SYS:FACT.*\\	^COPY THE ^^FACT\\ FILES FROM ^^SYS\\
TO [1,2] AND AT THE SAME TIME DELETE THEM FROM ^^SYS\\[1,4].
.B;.I-30
_.^^AS DTA\\N	^ASSIGN ^^DTA\\N (N=0-7) AND MOUNT A SCRATCH TAPE ON IT.
.B;.TS30;.I-30
_.^^R PIP\\	^RUN THE ^^PIP\\ PROGRAM TO ZERO THE TAPE AND
.I-30
*^^DTA\\N:^^DDMMM.FCT/Z=FACT.*\\	TRANSFER THE ^^FACT\\ FILES
ONTO THE ^^DEC\\TAPE AS A SINGLE FILE ^^DDMMM.FCT\\ WHERE ^^DDMMM\\ = THE DATE\\. ^FOR EXAMPLE,
^^APR\\ 10TH WOULD BE 10^^APR.FCT\\.
.B;.I-30
*_^^C	^RETURN TO MONITOR LEVEL AND MOUNT THE
.I-30
_.^^MOUNT\\ XXX	PRIVATE PACK XXX.
.B;.I-30
_.^^R PIP\\	^RUN THE ^^PIP\\ PROGRAM TO TRANSFER THE ^^FACT\\
.I-30
*XXX:[P,PN]^^/X/B=DTA\\N:*.*	FILE FROM THE ^^DEC\\TAPE TO THE AREA
[P,PN] ON THE PRIVATE PACK, XXX.
.B;.LM0
.HL 2 ^&SYSTEM SHUTDOWN\&\\
\\^THE TERMINATION OF TIMESHARING IS NORMALLY ACCOMPLISHED THROUGH THE
OPERATOR-PRIVILEGED ^^OPSER\\ COMMAND :^^KSYS\\ TIME, WHERE "TIME"
IS THE TIME OF SHUTDOWN IN HOURS AND MINUTES (HH:MM), OR THE TIME FROM
"NOW" THAT TIMESHARING WILL STOP (+HH:MM). :^^KSYS\\ TAKES CARE OF ALL
SYSTEM SHUTDOWN FUNCTIONS AUTOMATICALLY.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
:^^KSYS\\ +00:30	^THIS ^^OPSER\\ COMMAND CAUSES TIMESHARING TO STOP
IN 30 MINUTES. ^PERIODIC WARNING MESSAGES WILL AUTOMATICALLY BE SENT
TO USERS AS DESCRIBED IN ^SECTION 4.1.
.B;.LM0
^YOU MAY NOW STOP THE SYSTEM VIA THE CONSOLE FRONT END
AND TURN THE SYSTEM OVER TO FIELD SERVICE OR WHOMEVER MAY HAVE THE SYSTEM SCHEDULED NEXT.
.B
^ENTER THE FOLLOWING:
.B;.LM30;.TS30;.I-30
_.^^CTRL/_\\\	^CONTROL-BACKSLASH TO GET TO THE FRONT-END ^^PARSER\\.
.B;.I-30
^^PAR%SHUTDOWN\\	^STOP THE ^^TOPS\\-10 MONITOR.
.B;.LM0
^IT IS IMPORTANT THAT YOU NOW MAKE A LOG ENTRY TO THE EFFECT
THAT YOU HAVE SHUT DOWN THE SYSTEM AND THE REASON FOR THE SHUTDOWN.
.HL 2 ^&^^DSKLST\&\\
\\^THE ^^DSKLST\\ PROGRAM COMPILES AND PRINTS AN ANALYSIS OF THE CONTENTS
AND THE CURRENT STATUS OF THE SYSTEM FILE STRUCTURES. ^IT PROVIDES
THE INFORMATION WITH WHICH THE SYSTEM ADMINISTRATOR AND YOU, THE OPERATOR, CAN:
.PS69,70
.LS;.LE;^ANALYZE THE EFFICIENCY OF DISK SPACE USAGE.
.LE;^DETECT AND DIAGNOSE PROBLEM AREAS ON DISK.
.LE;^DETERMINE WHEN TO REFRESH VARIOUS DISK AREAS.
.LE;^DETERMINE OPTIMUM CLUSTER SIZES FOR ASSIGNING AND RELEASING FILE
STORAGE SPACE.
.ELS
^YOU CAN RUN ^^DSKLST\\, WHILE LOGGED IN UNDER [1,2], AS FOLLOWS:
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^AS DSK LPT\\	^ASSIGN THE DISK TO RECEIVE THE ^^DSKLST\\
OUTPUT RATHER THAN THE PRINTER.
.B;.I-30
_.^^R DSKLST\\	^RUN# THE# ^^DSKLST\\# PROGRAM,## WHICH WILL
.I-30
^^FOR HELP TYPE /H\\	PROMPT# WITH# AN ASTERISK. ^THE DEFAULT
.I-30
*<^^CR\\>	RESPONSE OF <^^CR\\> WILL PRINT ALL ^^DSKLST\\ OUTPUT FOR ALL STRUCTURES.
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND QUEUE THE
.I-30
_.^^PRINT DSKLST.LST\\	REPORT TO BE PRINTED. 
.B;.LM0
^IF YOU INCLUDE THE ABOVE STEPS IN A ^BATCH CONTROL FILE SUCH AS
^^DSKLST.CTL\\, YOU CAN SUBMIT THE JOB TO THE ^BATCH SYSTEM WITH THE COMMAND:
.B;.I5
_.^^SUB DSKLST.CTL\\
.B
^ADDITIONAL INFORMATION ON ^^DSKLST\\ CAN BE FOUND IN THE
^^DSKLST\\ SPECIFICATION IN THE ^SOFTWARE ^NOTEBOOKS.
.HL 2 ^&^^DSKRAT\&\\
\\^THE ^^DSKRAT\\ PROGRAM COMPILES AND PRINTS DAMAGE ASSESSMENT INFORMATION
FOR LEVEL-^D FILE STRUCTURES. ^IT ALSO HAS THE FACILITY TO FREE UP
LOST DISK SPACE. ^YOU CAN RUN ^^DSKRAT\\, WHILE LOGGED IN UNDER [1,2],
AS FOLLOWS:
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^AS DSK LPT\\	^ASSIGN PRINTER OUTPUT TO THE DISK.
.B;.I-30
_.^^AS\\ STR ^^STR\\	^ASSIGN THE LOGICAL DEVICE NAME
^^STR\\ TO THE FILE STRUCTURE "STR" THAT YOU ARE ANALYZING.
.B;.I-30
_.^^R DSKRAT\\	^RUN THE ^^DSKRAT\\ PROGRAM.
.B;.I-30
_.^^PRINT RAT.LST\\	^QUEUE THE REPORT TO BE PRINTED.
.PG
.B;.LM0
^IF MORE THAN ONE STRUCTURE IS TO BE ANALYZED, REPEAT THE LAST THREE
STEPS USING DIFFERENT "STR'S".
.B
^TO RUN THIS PROCEDURE UNDER THE ^BATCH SYSTEM, INCLUDE THE ABOVE
COMMAND SEQUENCE IN A FILE ^^DSKRAT.CTL\\ AND SUBMIT IT TO
^BATCH WITH:
.B;.I5
_.^^SUB DSKRAT.CTL\\
.B
^ADDITIONAL INFORMATION ON ^^DSKRAT\\ CAN BE FOUND IN THE ^^DSKRAT\\ SPECIFICATION
IN THE ^SOFTWARE ^NOTEBOOKS.
.HL 1 ^&OTHER SCHEDULED TASKS\&\\
\\^THE FOLLOWING OPERATOR TASKS ARE USUALLY SCHEDULED AT OTHER THAN
DAILY INTERVALS.
.PS67,70
.HL 2 ^&ACCOUNT CONTROL\&\\
\\^THE FOLLOWING PROCEDURE IS USUALLY RUN WEEKLY. ^IT PRODUCES A LISTING
SHOWING ALL THE CHANGES THAT HAVE BEEN MADE TO ^^ACCT.SYS\\ AND ^^AUXACC.SYS\\
DURING THE PREVIOUS WEEK. ^THE ACCOUNT FILES, AS CHECKPOINTED ON TAPE
THE PREVIOUS WEEK, ARE MATCHED AGAINST THE SAME FILES CURRENTLY
ON THE SYSTEM. ^TWO REPORTS, ONE FOR EACH ACCOUNT FILE, ARE PREPARED.
^CHANGES BETWEEN THE OLD AND THE CURRENT FILES ARE LISTED. ^AT THE END OF EACH
PROCESSING, THE CURRENT ACCOUNT FILES ARE COPIED TO TAPE TO BE USED
IN THE NEXT PROCESSING.
.B
^THE COMMAND SEQUENCE IS USUALLY PLACED IN AN ^^ACCT.CTL\\ FILE AND RUN VIA THE
^BATCH SYSTEM. ^SHOULD THE NEED ARISE, YOU CAN ALSO RUN THE PROCEDURE
MANUALLY. ^THE FOLLOWING SEQUENCE ASSUMES ^^DEC\\TAPE
AS THE BACKUP MEDIUM; FOR MAGNETIC TAPE, USE THE ^^BACKUP\\ PROGRAM.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^AS DTA\\N	^ASSIGN ^^DTA\\N (N=0-7) AND MOUNT THE CHECKPOINT
^^DEC\\TAPE. ^SET THE ENABLE SWITCH TO ^^WRITE ENABLE\\.
.B;.I-30
_.^^AS DSK LPT\\	^ASSIGN LOGICAL NAME ^^LPT\\ TO DISK TO PRODUCE
LISTING FILES ON THE DISK.
.B;.I-30
_.^^R REACT\\	^RUN THE ^^REACT\\ PROGRAM.
.B;.I-30
*^R	^READ THE##CURRENT ^^ACCT.SYS\\ FILE INTO THE
.I-30
*^^L ACCT.NOW\\	^^REACT\\ BUFFER. ^LIST IT TO DISK AS
.I-30
^^LIST CODES?:N<CR>\\	^^ACCT.NOW\\ WITHOUT LISTING THE PASSWORDS.
.B;.I-30
*^A	^READ THE CURRENT ^^AUXACC.SYS\\ FILE INTO
.I-30
*^^L AUXACC.NOW\\	THE ^^REACT\\ BUFFER. ^LIST IT TO DISK AS ^^AUXACC.NOW\\.
.PS69,70;.B;.I-30
*^^R DTA\\N:^^ACCT.CHK\\	^READ THE PREVIOUS WEEK'S ^^ACCT.CHK\\ FILE
.I-30
*^^L ACCT.OLD\\	FROM THE ^^DEC\\TAPE AND LIST IT TO DISK AS
.I-30
^^LIST CODES?N<CR>\\	^^ACCT.OLD\\ WITHOUT LISTING THE PASSWORDS.
.B;.I-30
*^^A DTA\\N:^^AUXACC.CHK\\	^READ PREVIOUS WEEK'S ^^AUXACC.CHK\\ FILE
.I-30
*^^L AUXACC.OLD\\	FROM THE ^^DEC\\TAPE AND LIST IT TO DISK AS ^^AUXACC.OLD\\.
.PG;.TS3,46;.I-30
	^^STEP	FUNCTION\\
.I-30
	----	--------
.B;.TS30;.I-30
*_^^C	^RETURN TO THE MONITOR AND RUN THE ^^FILCOM\\
.I-30
_.^^R FILCOM\\	PROGRAM.
.B;.I-30
*^^ACCT=ACCT.OLD,.NOW\\	^CREATE A DISK FILE ^^ACCT.SCM\\ CONTAINING
THE DIFFERENCES IN THE TWO ^^ACCT\\ FILES.
.B;.I-30
*^^AUXACC=AUXACC.OLD,.NOW\\	^CREATE A DISK FILE ^^AUXACC.SCM\\
CONTAINING THE DIFFERENCES IN THE TWO ^^AUXACC\\ FILES.
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND RUN THE ^^PIP\\
.I-30
_.^^R PIP\\	PROGRAM.
.B;.TS30;.I-30
*^^DTA\\N:^^ACCT.CHK=SYS:ACCT.SYS\\	^CHECKPOINT THE CURRENT ^^ACCT.SYS\\
FILE TO ^^DEC\\TAPE AS ^^ACCT.CHK\\, REPLACING LAST WEEK'S COPY.
.B;.I-30
*^^DTA\\N:^^AUXACC.CHK=SYS:\\	^CHECKPOINT THE CURRENT ^^AUXACC.SYS\\
.I-30
#^^AUXACC.SYS\\	FILE TO ^^DEC\\TAPE AS ^^AUXACC.CHK\\, REPLACING LAST WEEK'S COPY.
.B;.I-30
*_^^C	^RETURN TO THE MONITOR AND QUEUE THE
.I-30
_.^^PRI ACCT.SCM,AUXACC.SCM\\	FILES CONTAINING THE DIFFERENCES TO BE PRINTED.
.B;.I-30
_.^^DELETE *.NOW,*.OLD\\	^DELETE THE TEMPORARY WORK FILES.
.B;.LM0
.HL 2 ^&^^BACKUP (W\\EEKLY)\&\\
\\^ON A WEEKLY BASIS, YOU SHOULD SAVE THE ENTIRE CONTENTS OF THE SYSTEM
DISKS ON MAGNETIC TAPES. ^THE PROCEDURE IS SIMILAR TO THAT DESCRIBED UNDER
^^BACKUP\\ (^DAILY) IN ^SECTION 5.1.6. ^ONCE THE FILES ARE SAVED, HOWEVER,
THE DISK AREAS CAN ALSO BE REFRESHED OR WIPED CLEAN AND THE SAVED FILES THEN
RELOADED ONTO DISK. ^THIS IS DONE, PRIMARILY, TO RECOVER UNUSABLE
DISK BLOCKS.
.B
^AFTER HEAVY USE OF THE SYSTEM, SOME DISK BLOCKS ARE MARKED UNUSABLE
BECAUSE OF SYSTEM FAILURES AND ERRORS. ^THE NUMBER OF DISK BLOCKS
MARKED THIS WAY IS IN REALITY GREATER THAN THE ACTUAL NUMBER OF UNUSABLE
BLOCKS DUE TO THE ASSIGNING OF BLOCKS IN CLUSTERS. ^IN ADDITION,
WHEN THE DISK IS NEARLY FULL, DISK FILES BECOME FRAGMENTED INTO NON-CONTIGUOUS
PARTS. ^WHEN THIS HAPPENS, MORE DISK SPACE IS USED TO MAINTAIN THE
EXTRA RETRIEVAL POINTERS. ^ALSO, MORE OVERHEAD
TIME IS USED BECAUSE THE SYSTEM HAS TO LOCATE MORE PIECES OF THE
FILE THAN WHEN THE FILE IS IN A CONTIGUOUS AREA. ^THEREFORE, BY SAVING,
REFRESHING, AND RESTORING THE SYSTEM FILES, THE DISK CONTAINS THE
SAME FILES AS BEFORE, BUT IT IS BETTER ORGANIZED. ^NON-CONTIGUOUS FILES
ARE RESTORED INTO CONTIGUOUS AREAS.
.B
^YOU CAN ALSO TAKE THIS OPPORTUNITY TO DELETE FILES THAT HAVE BEEN
INACTIVE FOR A SPECIFIED PERIOD OF TIME; THIS WILL FREE UP ADDITIONAL
ROOM ON DISK FOR ACTIVE FILES.
.B
^THE FOLLOWING PROCEDURE CAN BE USED AS A BASIS FOR SETTING UP A WEEKLY
^^BACKUP\\, TAILORED TO YOUR INSTALLATION.
.B
^STOP TIMESHARING OPERATIONS.
.PG
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
:^^KSYS\\ +0030	^THIS ^^OPSER\\ COMMAND WILL STOP TIMESHARING
IN 30 MINUTES. ^USERS WILL BE NOTIFIED, PERIODICALLY, AS DESCRIBED IN ^SECTION 4.1.
.B;.LM0
^WHEN TIMESHARING HAS STOPPED, YOU CAN PROCEED WITH SAVING THE SYSTEM.
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.B;.LM30;.TS30;.I-30
_.^^R BACKUP\\	^RUN THE ^^BACKUP\\ PROGRAM.
.I-30
/^^TAPE MTA\\0	^USE TAPE ON ^^MTA\\0.
.I-30
/^^REWIND\\	^REWIND TAPE TO LOAD POINT.
.I-30
/^^LIST DSK\\:	^REQUEST A DIRECTORY LISTING ON DISK.
.I-30
/^^SAVE DSKB\\:	^SAVE SYSTEM DISK.
.I-30
!1,2 ^^DSKB\\	^^BACKUP\\ TYPES OUT EACH ^^UFD\\ AS IT BEGINS
.I-30
#1,3	TO SAVE FILES FROM THAT AREA.
.I-30
###_.
.I-30
###_.
.I-30
###_.
.B;.LM0
^IF THE DATA OVERFLOWS A REEL OF TAPE, YOU WILL RECEIVE THE MESSAGE:
.B;.I5
$^^BKPEOT REACHED EOT -- MOUNT NEW TAPE THEN TYPE "GO"\\
.B
^REPLACE THE FULL TAPE WITH A SCRATCH TAPE AND TYPE "^^GO\\". ^REPEAT
THIS PROCEDURE UNTIL YOU RECEIVE THE MESSAGE:
.B;.LM30;.TS30;.I-30
^^DONE\\	^THE ^^SAVE\\ OPERATION IS COMPLETE.
.B;.LM0
^THE ABOVE PROCEDURE CAN BE REPEATED FOR ANY OTHER SYSTEM DISKS TO
BE ^^SAVE\\D.
.B
^THE MONITOR CAN NOW BE RELOADED FOLLOWING THE PROCEDURES IN ^CHAPTER 3
WITH ONE IMPORTANT DIFFERENCE. ^WHEN THE SYSTEM PROMPTS YOU FOR THE
^^STARTUP OPTION\\, YOU SHOULD ANSWER ^^REFRESH\\. ^DURING THE ENSUING DIALOG,
THE SYSTEM WILL PROMPT YOU AS FOLLOWS:
.B;.I5
^^TYPE STR NAME TO BE REFRESHED (CR IF NONE, ALL IF ALL\\)
.B
^TYPE IN A SYSTEM STRUCTURE. ^FOR EXAMPLE:
.B;.I5
^^DSKB<CR>\\
.B
^THE PROMPT WILL BE REPEATED SO THAT YOU CAN ENTER ALL THE STRUCTURES
TO BE REFRESHED. ^A <^^CR\\> WITH NO STRUCTURE NAME WILL TERMINATE
THAT SET OF PROMPTS. ^THE SYSTEM WILL THEN REPEAT THE ^^STARTUP OPTION\\
PROMPT. ^IF THERE ARE NO OTHER CHANGES TO BE MADE TO THE FILE STRUCTURE
PARAMETERS, ANSWER WITH ^^QUICK\\ OR ^^GO\\. ^YOU WILL THEN RECEIVE
THE MESSAGE:
.B;.I5
^^TO AUTOMATICALLY LOG-IN UNDER [1,2] TYPE "LOGIN"\\
.B
^THE FOLLOWING PROCEDURE ASSUMES ^^BACKUP\\ RESIDES ON ^^DEC\\TAPE; IF
IT RESIDES ON MAGNETIC TAPE, CHANGE THE ^^ASSIGN\\ AND ^^RUN\\
COMMANDS TO CONFORM.
.PG
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^LOGIN\\	^AUTOMATICALLY LOG IN UNDER [1,2].
.B;.I-30
_.^^SET SCHED\\ 1	^SET A SCHEDULE BIT PATTERN OF 1
TO PROHIBIT USERS FROM LOGGING IN.
.B;.I-30
_.^^AS DTA\\N	^ASSIGN ^^DTA\\N (N=0-7) AND MOUNT A ^^DEC\\TAPE
CONTAINING THE ^^BACKUP\\ PROGRAM.
.B;.TS30;.I-30
_.^^RUN DTA\\N:^^BACKUP\\	^RUN THE ^^BACKUP\\ PROGRAM FROM ^^DEC\\TAPE
BECAUSE THE DISK IS EMPTY AT THIS POINT.
.B;.I-30
/^^TAPE MTA\\0	^SPECIFY THE TAPE DRIVE CONTAINING TAPE NUMBER 1 OF THE
^^SAVE\\ PERFORMED IN THE PREVIOUS PROCEDURE.
.B;.I-30
/^^ASINCE:-30D\\	^THIS ENTRY IS OPTIONAL AND ALLOWS YOU TO RESTORE
ONLY THOSE FILES THAT HAVE BEEN RECENTLY ACCESSED (IN THIS CASE: WITHIN
THE PAST 30 DAYS).
.B;.I-30
/^^RESTORE\\	^RESTORE ALL FILES, EXCEPT THOSE SPECIFICALLY
EXCLUDED BY PRIOR CONDITIONING.
.B;.I-30
!1,2 ^^DSKB\\	^^BACKUP\\ TYPES OUT EACH ^^UFD\\ AS IT BEGINS
.I-30
#1,3	TO RESTORE FILES INTO THAT AREA.
.I-30
###_.
.I-30
###_.
.I-30
###_.
.B;.I-30
^^DONE\\	^^RESTORE\\ IS COMPLETE.
.B;.I-30
/^^UNLOAD\\	^REWIND AND UNLOAD THE TAPE.
.B;.I-30
/_^^C	^RETURN TO THE MONITOR.
.B;.LM0
^IF YOU SHOULD BE RESTORING A MULTI-REEL ^^SAVE\\, THE END OF EACH FULL
TAPE WILL RESULT IN A MESSAGE:
.B;.I5
$^^BKPEOT REACHED EOT -- MOUNT NEW TAPE THEN TYPE "GO"\\
.B
^MOUNT THE NEXT SEQUENTIALLY NUMBERED TAPE AND TYPE ^^GO\\.
.B
^IF YOU DESIRE ADDITIONAL INFORMATION TO BE PRINTED AT YOUR TERMINAL,
FOR EXAMPLE, TAPE SEQUENCE NUMBERS, ^^SAVE\\ SET NAMES, DATES
AND TIMES, INCLUDE THE FOLLOWING ENTRY BEFORE THE /^^RESTORE\\ ENTRY.
.B2;.LM30;.TS30;.I-30
/^^LIST CTY\\:	^DIRECT THE PRINTING OF THE ^^BACKUP.LOG\\ FILE TO THE
^^OPR\\ TERMINAL.
.B;.LM0;.PS69,70
^WHEN THE ^^RESTORE\\ OPERATION IS COMPLETE, DO THE FOLLOWING:
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
/_^^C	^RETURN TO THE MONITOR.
.B;.I-30
_.^^SET SCHED\\ 0	^SET THE SCHEDULE BIT PATTERN TO 0 TO ALLOW
USERS TO LOG IN.
.PG;.TS3,46;.I-30
	^^STEP	FUNCTION\\
.I-30
	----	--------
.B;.TS30;.I-30
_.^^LOG\\ 1,2	^LOG IN AGAIN UNDER [1,2] TO ENSURE A CORRECT SEARCH LIST.
.B;.LM0
^YOU CAN NOW INITIATE YOUR SYSTEM JOBS JUST AS YOU WOULD AFTER A NORMAL SYSTEM LOAD.
.HL 1 ^&NON-SCHEDULED TASKS\&\\
\\^THE FOLLOWING TASKS ARE PERFORMED ON AN ON-CALL OR AS-REQUIRED BASIS
RATHER THAN ON A FORMAL SCHEDULE.
.HL 2 ^&FORMATTING DISK PACKS\&\\
\\^FORMATTING AND MAPPING DISK PACKS IS REQUIRED PRIOR TO THEIR FIRST USE.
^THIS PROCEDURE IS ALSO RECOMMENDED IF A DISK PACK DEVELOPS SEARCH ERRORS OR OTHER
PROBLEMS SUCH AS BAD SPOTS ON THE PACK. ^FORMATTING WRITES (OR REWRITES)
A HEADER RECORD AT THE BEGINNING OF EACH SECTOR SO THAT THE HARDWARE CAN
POSITION ITSELF WHEN READING OR WRITING ON THE DISK. ^MAPPING IS THE
PROCESS OF WRITING AND READING EACH DISK BLOCK, OR SECTOR, A NUMBER OF
TIMES TO SEARCH FOR BAD BLOCKS. ^A LOG OF ANY BAD BLOCKS IS KEPT AND IS
OUTPUT IN TWO DUPLICATE ^^BAT\\ BLOCKS.
.B
^BECAUSE THE FORMATTING PROCESS DESTROYS ALL DATA ON THE DISK PACK,
YOU SHOULD FIRST RUN THE ^^BACKUP\\ PROGRAM AND SAVE ANY IMPORTANT
FILES. (^REFER TO ^SECTION 5.2.2 FOR INFORMATION ON SAVING AND RESTORING FILES.)
.B3
5.3.1.1##^&^FORMATTING#^^RP\\02S#AND#^^RP\\03S\&#-#^^RP02\\S
AND ^^RP\\03S CAN ALL BE FORMATTED IN A TIMESHARING ENVIRONMENT
USING THE ^^DCRPE\\ PROGRAM. ^THE REQUIREMENTS FOR RUNNING ^^DCRPE\\ ARE:
.LS;.LE;^YOU MUST BE LOGGED IN UNDER [1,2], PREFERABLY ON A HARD COPY TERMINAL.
.LE;^THE DISK PACK MUST BE MOUNTED ON A PRIVATE DRIVE; THE PACK MUST
^^NOT\\ HAVE BEEN ^^ASSIGN\\ED OR ^^MOUNT\\ED.
.LE;^THE "WRITE HEADER" SWITCH INSIDE THE APPROPRIATE ^^RP\\10 DISK
CONTROLLER MUST BE SET TO ENABLE WRITE HEADERS (^^LK\\ ^^OUT\\ POSITION).
.ELS
^PROCEED AS FOLLOWS:
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
_.^^R DCRPE\\[6,6]	^RUN ^^DCRPE\\, WHICH IS USUALLY STORED
IN THE HARDWARE AND DIAGNOSTIC AREA [6,6]. ^^DCRPE\\ WILL THEN ENTER INTO A
DIALOG WITH YOU.
.B;.I-30
^^TYPE THE PHYSICAL NAME\\	^REPLY WITH THE PHYSICAL DESIGNATION OF
.I-30
^^OF THE DISK PACK DRIVE\\:	THE DRIVE; FOR EXAMPLE, ^^DPA\\0 OR ^^DPB\\2.
.PG;.TS3,46;.I-30
	^STEP	FUNCTION\\
.I-30
	----	--------
.B;.TS30;.I-30
^^DO YOU WISH TO FORMAT	Y\\ WILL CONTINUE WITH THE FORMATTING; ^N
.I-30
^^THE PACK? Y\\ OR ^^N <CR>-\\	WILL SKIP THE FORMATTING AND GO TO
THE MAPPING QUESTIONS THAT FOLLOW THE ^^NOTE\\ BELOW.
.B;.I-30
^^NAME THE DEVICE FOR\\	^ENTER THE LOGICAL OR PHYSICAL NAME OF
.I-30
^^ERROR REPORTING\\:	THE DEVICE FOR ERROR REPORTS, E.G., ^^TTY\\.
^A CARRIAGE RETURN DEFAULTS TO DISK.
.B;.I-30
***^^ARE YOU SURE YOU WANT\\	^THIS IS YOUR LAST CHANCE TO EXIT BEFORE
.I-30
###^^TO PROCEED? ALL\\	LOSING DATA OR DISK. ^TYPE ^Y IF ALL
.I-30
###^^INFORMATION ON DEVICE\\	NECESSARY DATA HAS BEEN SAVED.
.I-30
###DEV ^^WILL BE LOST BEYOND
.I-30
###THIS POINT\\.
.I-30
###^^Y\\ OR ^^N <CR>\\-
.B;.I-30
^^FORMATTING IN PROGRESS\\	^^DCRPE\\ NOTIFIES YOU THAT IT HAS STARTED
.I-30
HH:MM:SS	TO FORMAT THE DISK AND GIVES YOU A TIMESTAMP.
.B;.I-30
^^HEADERS HAVE BEEN WRITTEN\\-	^^DCRPE\\ HAS COMPLETED WRITING THE HEADERS
.I-30
^^VERIFICATION NOW IN PROGRESS\\	AND IS NOW READING THEM TO VERIFY
THEIR VALIDITY.
.B;.I-30
^^FORMATTING COMPLETE\\-	^^DCRPE\\ HAS COMPLETED THE VERIFICATION;
.I-30
^^RECOMMEND MAPPING THE PACK\\	YOU ARE NOTIFIED OF THE NUMBER OF
.I-30
^^TOTAL ERRORS\\:N	ERRORS (N) AND OF THE TIME IT TOOK
.I-30
^^TOTAL FORMATTING TIME\\=	FOR THE FORMATTING PROCESS.
.I-30
HH:MM:SS
.B;.I-30
	^^DO YOU WISH TO MAP THE PACK?\\	^Y WILL CONTINUE WITH THE MAPPING; ^N
.I-30
^^Y\\ OR ^^N <CR\\>-	WILL EXIT TO THE MONITOR.
.B;.LM0
^AT THIS TIME YOU CAN SWITCH THE "WRITE HEADERS" SWITCH ON THE DISK
CONTROLLER BACK TO THE ^^WH\\ POSITION.
.NT
^IF YOU ARE FORMATTING A NEW PACK, ONE THAT HAS NOT BEEN USED SINCE IT
CAME FROM THE FACTORY, IT WILL NOT HAVE THE VALID ^^HOM\\ AND ^^BAT\\ BLOCKS
REQUIRED BY THE MAPPING PORTION OF ^^DCRPE\\. ^USE THE ^^TWICE\\
PROGRAM WITH THE ^^LONG\\ OPTION TO STRUCTURE THE PACK, GIVING IT A SCRATCH
NAME, AND INITIALIZING BOTH THE ^^HOM\\ AND ^^BAT\\ BLOCKS. ^THE
DETAILED SPECIFICATIONS FOR RUNNING THE ^^TWICE\\ PROGRAM CAN BE FOUND IN THE
^SOFTWARE ^NOTEBOOKS. ^AFTER THIS IS DONE, RELOAD THE ^^DCRPE\\ PROGRAM.
^ANSWER ^N TO THE QUESTION ^^DO YOU WISH TO FORMAT THE PACK?\\ ^YOU
WILL THEN BE PROMPTED AS FOLLOWS:
.EN
.PG
.B2;.TS3,46
	^^STEP	FUNCTION\\
.BR
	----	--------
.BR
.B;.LM30;.TS30;.I-30
^^USE OLD BAT BLOCK AS BASE?\\	^YOU MUST REPLY ^Y.
.I-30
^Y OR ^^N <CR>\\-
.B;.I-30
^^DO YOU WISH TO RETAIN THE\\	^AGAIN, ANSWER ^Y.
.I-30
#^^HOME BLOCKS
.I-30
IF YES, THE PACK WILL HAVE
.I-30
#TO BE REFRESHED
.I-30
IF NO, THE HOME BLOCK
.I-30
#PARAMETERS WILL HAVE TO
.I-30
#BE REDEFINED IN ONCE
.I-30
#Y\\ OR ^^N <CR>\\-
.B;.I-30
^^NAME THE DEVICE FOR\\	^THE USUAL REPLY IS ^^DSK\\.
.I-30
#^^CRASH RECOVERY DATA:\\
.B;.I-30
^^NAME THE DEVICE FOR\\	^THIS QUESTION IS ASKED ONLY IF YOU
.I-30
#^^ERROR REPORTING\\:	SKIPPED FORMATTING. ^ANSWER WITH ^^TTY\\.
.B;.I-30
***^^ARE YOU SURE YOU WANT\\	^TYPE ^Y IF ALL NECESSARY DATA FILES HAVE
.I-30
###^^TO PROCEED? ALL\\	BEEN SAVED.
.I-30
###^^INFORMATION ON DEVICE\\
.I-30
###DEV ^^WILL BE LOST BEYOND
.I-30
###THIS POINT
.I-30
###Y\\ OR ^^N <CR>\\-
.B;.I-30
^^MAPPING IN PROGRESS\\	^^DCRPE\\ NOTIFIES YOU THAT IT IS MAPPING
.I-30
HH:MM:SS	AND GIVES YOU A TIMESTAMP.
.B;.I-30
^^END OF PASS 1; ELAPSED TIME\\	^^DCRPE\\ HAS READ ALL THE BLOCKS ONCE IN
.I-30
=HH:MM:SS	THE TIME SHOWN AND HAS FOUND N ERRORS.
.I-30
N ^^ERRORS THIS PASS CONTINUE\\?	^TYPE ^A TO CONTINUE READING ALL THE
.I-30
^^A\\ OR ^^Y\\ OR ^^N <CR\\>-	BLOCKS A TOTAL OF TEN TIMES WITHOUT
STOPPING. ^TYPE ^Y TO READ THE BLOCKS ONE MORE TIME AND ASK THE
QUESTION AGAIN. ^TYPE ^N TO END MAPPING AT THIS PASS.
.B;.I-30
^^TOTAL MAPPING TIME\\	^AFTER THE FINAL PASS, ^^DCRPE\\ PRINTS OUT
.I-30
^^FOR\\ DEV=HH:MM:SS	THE TOTAL MAPPING TIME AND THE LOCATION,
.I-30
^^HISTORY OF BAD BLOCKS:\\	SIZE, AND NUMBER OF ANY BAD REGIONS ON
.I-30
^^START OF BAD BLOCK\\:	THE DISK. ^EACH BAD AREA IS LOCATED BY
.I-30
BBBBBB=CCC,HH,SS	BLOCK NUMBER BBBBBB, AS WELL AS CYLINDER
.I-30
^^SIZE OF BAD REGION IN\\	(CCC), HEAD (HH) AND SECTOR (SS). ^THE
.I-30
^^BLOCKS\\=N	SIZE OF EACH BAD REGION IS GIVEN BY N.
.I-30
#######_.	^AFTER ALL BAD AREAS HAVE BEEN LOGGED,
.I-30
#######_.	THE TOTAL NUMBER OF BAD REGIONS (Q) AND
.I-30
#######_.	BAD BLOCKS (P) ARE PRINTED. ^THIS SAME
.I-30
P=^^BAD BLOCKS TOTAL\\	INFORMATION IS ALSO STORED IN THE TWO
.I-30
Q=^^BAD REGIONS TOTAL\\	DUPLICATE ^^BAT\\ BLOCKS. ^THE PROGRAM THEN EXITS.
.B;.I-30
^^EXIT\\
.B;.LM0
^NOW USE THE ^^TWICE\\ PROGRAM WITH THE ^^REFRESH\\ OPTION TO RE-INITIALIZE
THE TWO DUPLICATE ^^HOM\\ BLOCKS AND CLEAR THE ^STORAGE ^ALLOCATION
^TABLE (^^SAT\\). ^THIS PROCEDURE FREES UP ANY LOST BLOCKS AND ELIMINATES
FRAGMENTATION OF FILES SINCE THE SUBSEQUENT ^^BACKUP\\ OPERATION,
^^RESTORE\\, WILL RELOAD THE FILES SYSTEMATICALLY.
.PG
.B
^^RP\\02 AND ^^RP\\03 DISKS CAN ALSO BE FORMATTED IN EXEC MODE USING THE
^^DDRPC\\ PROGRAM. ^THIS PROGRAM GIVES YOU THE ADDITIONAL CAPABILITY OF
FORMATTING SINGLE CYLINDERS OF A DISK PACK AND SINGLE SURFACES OF A CYLINDER.
.B
^THE REQUIREMENTS FOR RUNNING ^^DDRPC\\ ARE:
.LS;.LE;^THE "WRITE HEADER" SWITCH INSIDE THE APPROPRIATE ^^RP\\10
DISK CONTROLLER MUST BE SET TO ENABLE WRITE HEADERS (^^LK OUT\\ POSITION).
.LE;^DRIVES THAT ARE NOT TO BE FORMATTED MUST BE PLACED OFF LINE WITH THE
^^STOP\\ SWITCH.
.ELS
^LOAD AND START THE ^^DDRPC\\ PROGRAM; IT WILL INITIALIZE AND PRINT A
DESCRIPTION OF THE DISK SYSTEM.
.B
^^PDP\\-10 ^^RP\\10 ^DISK ^PACK ^RELIABILITY ^TEST (^^DDRPC\\) ^VERSION 000,002
.B
.NF;.NJ
^MEMORY ^MAP =
^FROM####^TO####^^SIZE/K\\
000000#077777#32^K
.B
^^POWER FREQUENCY = 60HZ\\
.B
^WRITE ^ENABLE ^ENTIRE ^DISK ^Y OR ^N <^^CR\\> ^Y
^^DF\\10 IN ^^KA A\\DDRESSING ^MODE
^NUMBER OF ^DRIVES= 4
^^DPA\\0 = ^^RP\\03, ^^STATUS-ON LINE
DPA1 = RP02, STATUS-OFF LINE
DPA2 = RP03, STATUS-OFF LINE
DPA3 = RP02, STATUS-OFF LINE
EDDT\\
.B;.F;.J
^YOU ARE NOW READY TO FORMAT AN ENTIRE DISK OR SELECTED PORTIONS OF IT.
.B
^EXAMPLE _#1 - ^FORMATTING AN ENTIRE DISK PACK
.B2;.LM30;.TS30;.I-30
^^EX FORMAT$X\\	^OPERATOR WANTS TO USE THE FORMATTING CAPABILITY OF THE
^^DDRPC\\ DIAGNOSTIC PROGRAM. (^NOTE THAT $ INDICATES PRESSING THE
^^ESC\\APE OR ^^ALT\\MODE KEY.)
.B;.I-30
^^WANT TO FORMAT THE DISK?\\	^OPERATOR TYPES ^Y.
.I-30
^^Y OR N <CR> - Y\\
.B;.I-30
^^WHAT DRIVE?-<CR>\\0	^FORMAT DRIVE 0.
.B;.I-30
^^WANT TO FORMAT ENTIRE\\	^THE COMPLETE DISK PACK ON DRIVE 0 IS TO
.I-30
^^DISK? Y OR N <CR>-Y\\	BE FORMATTED.
.B;.LM0;.NF;.NJ
^^VERIFY ERROR, DISK ADDR, DPA=0 CYL=013 SURF=02 SECT=03
VERIFY ERROR, DISK ADDR, DPA=0 CYL=056 SURF=01 SECT=01
VERIFY ERROR, DISK ADDR, DPA=0 CYL=103 SURF=04 SECT=03
VERIFY ERROR, DISK ADDR, DPA=0 CYL=277 SURF=06 SECT=00\\
.B;.F;.J;.I10
***********
.BR;.I10
^^EXIT TEST-FORMAT RUN TIME 0:15:20\\
.BR;.I10
***********
.B
^THE ERROR MESSAGES ABOVE INDICATE THAT THE DISK FAILED TO FORMAT
THE INDICATED DISK ADDRESSES SUCCESSFULLY. ^THE DISK MAY BE COMPLETELY FORMATTED
AGAIN OR THE INDIVIDUAL DISK ADDRESSES (SURFACES) MAY BE
REFORMATTED AS INDICATED IN THE EXAMPLE BELOW.
.B
^EXAMPLE _#2 - ^FORMATTING A PORTION OF THE DISK PACK
.B2;.TS5,46
	^^ACTION	EXPLANATION\\
.B;.LM30;.TS30;.I-30
^^EX FORMAT$X\\	^FORMAT A PORTION OF A DISK PACK. (^NOTE THAT $ INDICATES
PRESSING THE ^^ESC\\ OR ^^ALT\\ KEY.)
.B;.I-30
^^WANT TO FORMAT THE DISK?\\	^OPERATOR TYPES ^Y.
.I-30
^^Y OR N <CR>-Y\\
.B;.I-30
^^WHAT DRIVE?-<CR>0\\	^OPERATOR SPECIFIES DRIVE 0.
.B;.I-30
^^FORMAT ENTIRE DISK?\\	^OPERATOR WANTS TO FORMAT ONLY A
.I-30
^^Y OR N <CR>-N\\	PORTION OF THE DISK.
.B;.I-30
^^CYL(8)=100\\	^CYLINDER 100 (OCTAL).
.B;.I-30
^^SURF\\(8)=0	^ALL SECTORS OF SURFACE 0.
.B;.I-30
^^CYL\\(8)=102	^CYLINDER 102.
.B;.I-30
^^SURF\\(8)=^A	^ALL SURFACES.
.B;.I-30
^^CYL\\(8)=^B	^B IS AN ILLEGAL CHARACTER.
.B;.I-30
?^^HUH\\?
.B;.I-30
^^CYL\\(8)=217	^CYLINDER 217.
.B;.I-30
^^SURF\\(8)=40	40 IS AN ILLEGAL SURFACE ADDRESS.
.B;.I-30
?^^HUH?\\
.B;.I-30
^^CYL\\(8)=217	^CYLINDER 217 AGAIN.
.B;.I-30
^^SURF\\(8)=4	^SURFACE 4.
.B;.I-30
^^CYL\\(8)=^E	^EITHER ^E OR ^X AT THIS POINT CAUSES PROGRAM TO ASK
IF THERE IS ANOTHER DRIVE TO BE FORMATTED (OR TESTED).
.B;.I-30
^^TEST WHAT DRIVE?-<CR>E\\	^THE FORMATTING FOR THE ABOVE CYLINDERS
AND SURFACES WILL BE DONE, ERROR MESSAGES MAY APPEAR AS IN THE ABOVE
EXAMPLE, AND ^^EXIT TEST\\ WILL BE OUTPUT.
.B;.LM0
^AT THIS TIME YOU CAN SWITCH THE "WRITE HEADERS" SWITCH ON THE DISK
CONTROLLER BACK TO THE ^^WH\\ POSITION.
.B3
5.3.1.2##^&^FORMATTING ^^RP\\04S AND ^^RP\\06S\&#-#^R^P04S
AND ^^RP\\06S CAN BE FORMATTED AND MAPPED IN EITHER A TIMESHARING
ENVIRONMENT OR STAND-ALONE USING THE ^^DDRPI\\ PROGRAM.
.B
^^DDRPI\\ (^TIMESHARING)
.B
^RUNNING ^^DDRPI\\ DURING TIMESHARING REQUIRES THE FOLLOWING:
.LS;.LE;^YOU MUST BE LOGGED IN UNDER [1,2].
.LE;^PACKS TO BE FORMATTED MUST NOT BE IN THE SYSTEM STRUCTURE LIST.
.LE;^THE FOLLOWING FILES MUST BE IN YOUR AREA:
.B;.I5
^^DIAMON.SAV
.BR;.I5
#DDRPI.SAV
.BR;.I5
#KLDDT.SAV
.BR;.I5
SUBRTN.SAV\\
.ELS
^PROCEED AS FOLLOWS:
.B;.LM5;.TS30
_.^^ASSIGN DSK LPT\\	^DIRECT PRINTER OUTPUT FILE TO DISK.
_.^^RUN DIAMON\\	^LOAD AND START THE DIAGNOSTIC MONITOR.
.BR
	^^DIAMON\\ WILL THEN REQUEST A COMMAND.
.B;.LM30;.TS30;.I-25
^^DIAMON CMD\\-	^ENTER "^^DDRPI"\\ TO START THE DISK FORMATTING DIALOG.
.B;.LM0
^THE ^^DDRPI\\ DIALOG FOR FORMATTING ^^RP\\04 AND ^^RP\\06 TYPE DISK
DRIVES IS RATHER LENGTHY. ^PRINT OUT THE ^^DDRPI.HLP\\ FILE AND USE IT
AS REFERENCE; THE DIALOG QUESTIONS AND THEIR SUGGESTED RESPONSES ARE
FULLY DETAILED.
.PS67,70;.LM0;.RM70;.SP1;.F;.J
.NUMBER CHAPTER 6
.CH ^&SYSTEM RECOVERY PROCEDURES\&
\\^BECAUSE OF THE COMPLEXITY OF THE SYSTEM, THERE WILL BE
TIMES WHEN IT WILL CEASE TO FUNCTION CORRECTLY. ^SUCH
A CONDITION, COMMONLY REFERRED TO AS A "CRASH," MAY BE THE RESULT
OF SOFTWARE PROBLEMS, HARDWARE PROBLEMS, OR ENVIRONMENTAL
PROBLEMS. ^SOMETIMES, THE SYSTEM WILL AUTOMATICALLY RELOAD ITSELF,
RECORD THE ERROR CONDITIONS, AND RESTART PROCESSING. ^AT OTHER
TIMES, IT BECOMES YOUR RESPONSIBILITY TO RECOGNIZE THE PROBLEM
AND TAKE CORRECTIVE STEPS TO GET THE SYSTEM BACK UP AS QUICKLY
AS POSSIBLE.
.B
^IT IS VERY IMPORTANT THAT YOU KEEP AN ACCURATE RECORD OF ANY
SYSTEM PROBLEM THAT MAY ARISE. ^IN THE EVENT OF A SOFTWARE
CRASH, A ^SOFTWARE ^ERROR ^REPORT (^^SER\\) FORM MUST BE FILLED
OUT, IN ADDITION TO A CONCISE AND DESCRIPTIVE ENTRY IN THE LOGBOOK.
^FOR HARDWARE PROBLEMS, A HARDWARE ERROR FORM SHOULD BE FILLED
OUT ALONG WITH THE LOG ENTRY.
.HL 1 ^&CENTRAL PROCESSOR RECOVERY\&\\
\\^RECOVERY PROCEDURES FOR THE CENTRAL PROCESSOR WILL BE
DISCUSSED UNDER THREE CATEGORIES OF SYSTEM FAILURES.
.LS;.LE;^FAILURES DUE TO SOFTWARE ERRORS
.LE;^FAILURES DUE TO MALFUNCTIONS IN THE HARDWARE
.LE;^FAILURES DUE TO A HOSTILE ENVIRONMENT.
.ELS
^THE AUTO-RELOAD FEATURE OF THE ^D^E^CSYSTEM-10 WILL AUTOMATICALLY
RELOAD THE SYSTEM AFTER A SYSTEM FAILURE (CRASH) IF THE SYSTEM HAS
BEEN UP FOR AT LEAST FIVE MINUTES. ^THE USUAL PROCEDURE, IF
POSSIBLE, IS TO RECORD THE SYSTEM AS IT APPEARED AT THE TIME
OF FAILURE AND THEN RELOAD THE PREVIOUSLY LOADED MONITOR.
^SYSTEM-TO-OPERATOR DIALOG PROVIDES YOU WITH THE OPPORTUNITY
TO LOAD A DIFFERENT MONITOR OR TO CHANGE SYSTEM PARAMETERS
VIA THE START-UP OPTIONS OF THE ^^ONCE\\ PROCEDURE. (^SEE THE ^^ONCE\\
SPECIFICATION IN THE ^SOFTWARE ^NOTEBOOKS.)
.B
^FOR INSTALLATIONS WHERE THERE MAY BE NO OPERATOR COVERAGE
AT TIMES, THERE IS A 60-SECOND TIMEOUT AFTER THE FIRST RESTART
QUESTION. ^IF NO ANSWER HAS BEEN RECEIVED, THE SYSTEM
ASSUMES (AND RECORDS ON THE ^^CTY\\) THE DEFAULT ANSWERS TO THE ^^ONCE\\ PROCEDURE.
.B
^THE CRASH FILE (A COPY OF THE SYSTEM AT THE TIME IT FAILED)
IS ALWAYS WRITTEN TO THE SAME AREA; IF YOU WISH TO SAVE THIS
INFORMATION, IT MUST BE COPIED TO ANOTHER AREA BEFORE THE
SYSTEM CRASHES AGAIN.
.B
^IF THE SYSTEM CRASHES TWICE WITHIN FIVE MINUTES, IT WILL NOT BE
AUTOMATICALLY RELOADED.
.HL 2 ^&SOFTWARE ERRORS\&\\
\\^SOFTWARE ERRORS FALL INTO THREE GENERAL CATEGORIES:
.LS;.LE;^ERRORS DETECTED BY THE ^^TOPS\\-10 MONITOR, RESULTING
IN ^^STOPCD\\ MESSAGES
.LE;^ERRORS DETECTED BY THE ^^RSX-20F\\ FRONT-END MONITOR
.LE;^HUNG CONDITIONS WHERE THE ^^TOPS\\-10 SCHEDULER CANNOT RUN
ANY JOB OTHER THAN THE NULL JOB.
.ELS
.B3
6.1.1.1##^&^^STOPCD\\ (^MONITOR ^ERROR ^STOP)\&#-#^WHEN
THE MONITOR DETECTS AN INTERNAL ERROR, IT
EXECUTES A ^^STOPCD\\ MACRO, WHICH PRODUCES A MESSAGE AT THE
^^CTY\\ OF THE FORM:
.B;.I5
?^^CPU\\N ^^MONITOR ERROR. STOPCODE NAME\\ XXX
.B
WHERE N IS THE NUMBER OF THE ^^CPU\\ (0 OR 1) THAT EXECUTED THE
^^STOPCD\\ AND XXX IS A MNEMONIC IDENTIFYING THE ERROR. ^A
COMPLETE LIST OF ^^STOPCD\\ ERROR MESSAGES AND DESCRIPTIONS
IS PART OF THE ^^STOPCD\\ SPECIFICATION IN THE ^SOFTWARE
^NOTEBOOKS. ^THE LIST ALSO INCLUDES THE NAME OF THE MONITOR
MODULE CONTAINING THE ^^STOPCD\\ AND THE TYPE OR SEVERITY
CLASSIFICATION.
.B
^THERE ARE FOUR TYPES OF ^^STOPCD\\S; IN INCREASING ORDER OF
SEVERITY THEY ARE ^^DEBUG, JOB, STOP\\, AND ^^HALT\\. ^ALL BUT
THE LAST INITIATE AUTOMATIC RECOVERY PROCEDURES.
.LS;.LE;^^DEBUG\\ - ^IF NO PRIORITY INTERRUPT IS IN PROGRESS,
THE CONDITION IS NOT IMMEDIATELY HARMFUL TO ANY JOB OR TO
THE SYSTEM. ^THE MONITOR TRANSMITS THE FOLLOWING MESSAGE TO THE
^^CTY\\:
.B;.I5
?^C^P^UN ^^MONITOR ERROR.##STOPCODE NAME\\ XXX
.BR
.I5
^^CONTINUING SYSTEM\\
.B
AND CONTINUES. ^NO IMMEDIATE OPERATOR ACTION IS REQUIRED.
.B
^IF A PRIORITY INTERRUPT IS IN PROGRESS, A ^^DEBUG STOPCD\\
ACTS AND COUNTS AS A ^^JOB STOPCD\\.
.LE;^^JOB\\ - ^IF NO PRIORITY INTERRUPT IS IN PROGRESS, THE
CONDITION JEOPARDIZES THE INTEGRITY OF THE CURRENT JOB.
^THE MONITOR TRANSMITS THE FOLLOWING MESSAGE TO THE ^^CTY\\:
.B;.I5
?^C^P^UN ^^MONITOR ERROR.##STOPCODE NAME\\ XXX
.BR
.I5
?^^ABORTING JOB\\
.B
AND ANOTHER MESSAGE TO THE USER'S TERMINAL:
.B;.I5
?^^MONITOR ERROR;##UUO AT\\ XXX
.B
WHERE XXX IS ONE OF THE FOLLOWING:
.B;.I5
^^USER LOC\\ N
.BR
.I5
^^EXEC LOC\\ N;##^^EXEC CALLED FROM EXEC LOC\\ M
.BR
.I5
^^EXEC LOC\\ N;##^^EXEC CALLED FROM USER LOC\\ M
.B
^THE MONITOR THEN ABORTS THE CURRENT JOB AND CONTINUES. ^NO
IMMEDIATE OPERATOR ACTION IS REQUIRED.
.B
^IF A PRIORITY INTERRUPT IS IN PROGRESS, A ^^JOB STOPCD\\
ACTS LIKE A ^^STOP STOPCD\\.
.LE;^^STOP\\ - ^THE CONDITION JEOPARDIZES THE INTEGRITY OF
THE SYSTEM AS A WHOLE. ^THE MONITOR TRANSMITS THE FOLLOWING
MESSAGE TO THE ^^CTY\\:
.B;.I5
?^C^P^UN ^^MONITOR ERROR.##STOPCODE NAME\\ XXX
.BR
.I5
^^RELOAD MONITOR\\
.B
^ALL JOBS ARE ABORTED AND THE SYSTEM INITIATES AN AUTOMATIC
RELOAD OF THE MONITOR.
.LE;^^HALT\\ - ^THE CONDITION IS SO SERIOUS THAT THE ENTIRE
SYSTEM IS AFFECTED AND THE MONITOR CANNOT BE RELOADED AUTOMATICALLY.
^THE SYSTEM HALTS, REQUIRING THAT YOU MANUALLY PERFORM THE
^^CRASH\\ PROCEDURES AS DESCRIBED IN ^SECTION 6.1.1.4.
.B
^NOTE, HOWEVER, THAT YOU WILL BE REQUIRED TO PERFORM THE
ENTIRE ^^CRASH\\ PROCEDURE VERY INFREQUENTLY, ONLY WHEN THE SYSTEM
CANNOT RECOVER ON ITS OWN. (^REFER TO THE ^^CRASH\\ SPECIFICATION IN
THE ^SOFTWARE ^NOTEBOOKS FOR A DETAILED EXPLANATION OF THE
PROCEDURES.)
.B
^IN ADDITION, IF THE MONITOR CAN DETERMINE THE INFORMATION, THE
FOLLOWING MESSAGES ARE ALSO PRINTED ON THE ^^CTY\\:
.B;.I5
^J^O^B N ^O^N ^T^T^YXXX ^^RUNNING\\ XXXXXX
.BR
.I5
^^UUO IS\\ XXXXXXXXXXXX ^^AT USER PC\\ XXXXXX
.BR
.I5
^^FILE\\ DEV:FILE.EXT[P,PN]
.B
^THEY WILL HELP YOU DETERMINE THE USER CAUSING THE PROBLEM.
.ELS
.B3
6.1.1.2##^&^^RSX-20F D\\ETECTED ^ERRORS\&#-#^NEARLY
ALL THE ERROR CONDITIONS THAT ARE NOT COVERED BY THE
^^STOPCD\\S IN ^SECTION 6.1.1.1 ARE DETECTED BY ^^RSX-20F\\,
THE CONSOLE FRONT-END MONITOR. ^SOME OF THE FOLLOWING
ARE CAUSED BY HARDWARE ERRORS, SOME BY SOFTWARE ERRORS, AND
OTHERS BY ENVIRONMENTAL CONDITIONS.
.B
^HARDWARE ^ERRORS:
.B;.LM30;.TS30;.I-30
^^CLOCK ERROR STOP\\	^A SERIOUS HARDWARE FAILURE
HAS OCCURRED IN THE ^K^L10 ^C^P^U.
.B;.I-30
^^E-BUS PARITY ERROR	A\\N ^E-^BUS PARITY ERROR WAS DETECTED ON THE
^^KL10 CPU\\.
.B;.I-30
^^DEPOSIT EXAMINE FAILURE\\	^THE FRONT-END SOFTWARE WAS
UNSUCCESSFUL IN AN ATTEMPT TO EXAMINE OR DEPOSIT INTO ^K^L10
MEMORY.
.B;.LM0
^IN EACH OF THE ABOVE ERROR CONDITIONS, THE FRONT END RELOADS
^^KL\\10 MICROCODE, RECONFIGURES THE CACHE AND MAIN MEMORY,
AND RESTARTS THE ^^KL\\10 AT OCTAL LOCATION 407. ^THE CODE AT 407
CAUSES ^^TOPS\\-10 TO DUMP AND RELOAD ITSELF.
^IF THE ERROR CONDITIONS
PERSIST, CALL ^FIELD ^SERVICE.
.B
^SOFTWARE ^ERRORS:
.B;.LM30;.TS30;.I-30
^^TEN HALTED\\	^THE ^K^L10 HAS EXECUTED A ^^HALT\\ INSTRUCTION
DUE TO SOME OTHER ERROR CONDITION.
.B;.I-30
^^KEEP ALIVE CEASED\\	^THE "KEEP ALIVE" DIALOG BETWEEN THE
^^RSX-20F\\ AND ^^TOPS\\-10 MONITORS SENSES THAT THE ^K^L10 IS LOOPING AND NOT FUNCTIONING CORRECTLY.
.B;.LM0
^FOR EACH OF THE ABOVE CONDITIONS, A ^^KL\\10 CORE DUMP IS TAKEN
AND THE ^^TOPS\\-10 MONITOR IS RELOADED. ^IF THE PROBLEM
PERSISTS, CALL ^FIELD ^SERVICE.
.B
^OTHER ^CONDITIONS:
.B;.LM30;.TS30;.I-30
^^TEN REQUESTED RE-BOOT\\	^FOR SOME REASON, THE ^K^L10
MONITOR WANTS TO BE RELOADED. ^^RSX-20F\\ CALLS IN THE ^^KLINIT\\
ROUTINE AND TAKES THE ^^BOOT\\ REPLY TO THE FIRST QUESTION.
.B;.I-30
^^POWER FAIL RESTART	RSX-20F\\ HAS RESTARTED THE SYSTEM
WHEN POWER WAS RESTORED AFTER A POWER FAILURE. ^THE MICROCODE
IS RELOADED, CACHE AND MEMORY ARE RECONFIGURED, AND THE SYSTEM
IS RESTARTED AT OCTAL LOCATION 70.
.B;.LM0
^THE USUAL SEQUENCE OF EVENTS THAT TAKES PLACE WHEN ^^RSX-20F\\
SENSES AN ERROR IN THE ^K^L10 IS TO CALL THE ^^KLERR\\ ROUTINE
TO ANALYZE THE ERROR AND PRINT KEY SYSTEM INFORMATION.
^THE ^^KLINIT\\ ROUTINE IS THEN CALLED TO RELOAD OR RESTART THE SYSTEM.
.B
^WHEN ^^KLINIT\\ ATTEMPTS TO RELOAD AFTER A HARDWARE OR SOFTWARE
ERROR, IT PASSES CONTROL TO THE CRASH RESTART ROUTINE AT
LOCATION 407 OF THE ^K^L10. ^THIS ROUTINE BRINGS IN THE BOOTSTRAP
PROGRAM ^^BOOTS\\ VIA THE ^K^L10 FILE SYSTEM AND EXECUTES
IT WITH THE FOLLOWING DEFAULT COMMAND STRING:
.B;.I5
/^^D<CR>SYSTEM.EXE[1,4]<CR\\>
.B
^HOWEVER, IF THE ^^TOPS\\-10 MONITOR HAD BEEN ORIGINALLY LOADED BY AN
EXPLICIT COMMAND TO THE BOOTSTRAP PROMPT, THIS SAME  COMMAND WILL BE
SUBSTITUTED FOR ^^SYSTEM.EXE\\[1,4]. ^FOR EXAMPLE, IF YOU HAD ANSWERED
THE BOOTSTRAP PROMPT WITH ^^DSKN:RK270A[1,2]\\ INSTEAD OF MERELY TYPING
A CARRIAGE RETURN, THE AUTO-RELOAD PROCEDURE WILL USE THE COMMAND STRING:
.B;.I5
/^^D<CR>DSKN:RK270A.EXE[1,2]\\
.B
^IF THE 407 START FAILS, ENTER ^^KLINIT\\
TO READ THE BOOTSTRAP PROGRAM VIA THE ^^PDP-11\\ FILE SYSTEM.
.B
^THE FOLLOWING IS AN EXAMPLE OF ^^CTY\\ OUTPUT FOR ONE OF THE
ABOVE HARDWARE ERRORS.
.B2;.NF;.NJ
^^DEPOSIT EXAMINE FAILURE
KLERR#--#VERSION V001B RUNNING
KLERR#--#KL NOT IN HALT LOOP
KLERR#--#KL ERROR OTHER THAN CLOCK ERROR STOP
KLERR#--#KL VMA: 000000 133051####PC: 000000 133051
KLERR#--#PI STATE: ON##, PI ON: 175 , PI HLD: 000 , PI GEN: 000
KLERR#--#EXIT FROM KLERR
KLI#--#VERSION V003D RUNNING
KLI#--#MICROCODE VERSION 131 LOADED
LOGICAL MEMORY CONFIGURATION:
##################CONTROLLER
.TS9,15,20,25,30,35,44
ADDRESS	SIZE	RQ0	RQ1	RQ2	RQ3	CONTYPE	INT
00000000	128K	04	FOR	ALL		#DMA20	#4
KLI#--#KL RESTARTED
.B
BOOTS
.B
DSKN:/D
.B
DSKN:RK270A\\
.LM0;.F;.J;.B3
6.1.1.3##^&^^HUNG C\\ONDITION\&#-#^A
HUNG CONDITION EXISTS WHEN THE SCHEDULER CANNOT RUN ANY
JOB OTHER THAN THE NULL JOB. ^WHEN IT APPEARS TO YOU THAT THE
SYSTEM IS NOT DOING ANY USEFUL WORK, USE THE FOLLOWING PROCEDURE
TO EXAMINE THE PROGRAM COUNTER:
.B;.TS50
^^STEP	FUNCTION\\
.BR
----	--------
.B;.LM30;.TS30;.I-30
_^_\	^CONTROL BACKSLASH GETS YOU INTO THE FRONT-END
COMMAND LANGUAGE (^^PARSER\\).
.B;.I-30
^^PAR>REPEAT 10;EXAMINE PC\\	^THESE ^^PARSER\\ COMMANDS WILL CAUSE THE CONTENTS OF THE PROGRAM COUNTER
TO BE PRINTED 10 TIMES. ^SUCCESSIVE VALUES OF 1 USUALLY INDICATE A
HUNG CONDITION. ^OTHER VALUES COULD INDICATE A "LOOP" CONDITION. (^SEE
^^KEEP ALIVE CEASED\\ ERROR MESSAGE ABOVE.)
.B;.LM0
^YOU CAN ATTEMPT TO PERFORM A CRASH RESTART BY TYPING:
.B;.LM30;.TS30;.I-30
^^PAR>ABORT	H\\ALT THE ^^KL\\ PROCESSOR.
.B;.I-30
^^PAR%JUMP\\ 407	^TAKE A CORE DUMP AND RELOAD THE MONITOR
USING ^^BOOTS\\ FROM THE ^K^L10 FILE SYSTEM.
.B;.LM0
	^IF "^^BOOTS\\" IS NOT OUTPUT, YOU CAN TRY TO BOOT THE SYSTEM
VIA THE FRONT END AS FOLLOWS:
.B;.TS50
^^STEP	FUNCTION\\
.BR
----	--------
.B;.LM30;.TS30;.I-30
_^_\	^ACCESS THE ^^PARSER\\ IF NOT ALREADY PROMPTED WITH
^^PAR\\>.
.B;.I-30
^^PAR>SET CONSOLE PROG	S\\ET CONSOLE TO PROGRAMMER MODE.
.B;.I-30
^^PAR>RUN KLINIT\\	^LOAD AND START THE ^^KLINIT\\ DIALOG.
.B;.I-30
^^KLI--ENTER DIALOG [NO, YES, EXIT, BOOT]?
.I-30
KLI>BOOT\\	^ANSWERING "^^BOOT\\" TO THE FIRST QUESTION WILL LOAD THE BOOTSTRAP
PROGRAM AND START IT.
.B;.I-30
^^KLI--BOOTSTRAP LOADED AND STARTED\\
.I-30
/^D	^THIS WILL CAUSE A CORE DUMP TO BE WRITTEN OUT TO DISK.
.B;.I-30
<^C^R>	^A CARRIAGE RETURN WILL CAUSE THE DEFAULT
.I-30
FILENAME	MONITOR FROM ^^SYSTEM.EXE[1,4]\\ TO BE LOADED. ^A FILENAME WILL LOAD
A MONITOR FROM THE SPECIFIED FILE.
.B;.LM0
^YOU MAY NOW WANT TO SET THE CONSOLE BACK TO OPERATOR MODE.
.LM0;.PG
6.1.1.4##^&^CRASH ^RESTART ^PROCEDURE\&#-#^WHENEVER
A CORE DUMP IS TAKEN VIA THE /^D SWITCH TO
^^BOOTS\\, THE DUMP DATA IS STORED IN THE SYSTEM FILE ^^SYS:CRASH.EXE\\.
^IF ANOTHER CRASH FOLLOWS, THE SECOND DUMP DATA OVERLAYS
THE FIRST. ^THEREFORE, YOU SHOULD FOLLOW A PROCEDURE, SUCH AS THE
ONE SHOWN BELOW, TO PRESERVE AND AUGMENT CRASH DATA FOR THE
USE OF THE SYSTEM PROGRAMMER WHEN DEBUGGING THE PROBLEM. ^THE
FOLLOWING IS PERFORMED ON THE ^C^T^Y WHILE LOGGED IN UNDER
[1,2].
.B;.TS50
^^STEP	FUNCTION\\
.BR
----	--------
.B;.LM30;.TS30;.I-30
^^_.COPY XPN:SER\\NNN.^^EXE<055>=SYS:CRASH.EXE\\
.BR
^THIS WILL CREATE A COPY OF THE CRASH DATA JUST DUMPED AND
STORE IT IN THE CRASH LIBRARY, USUALLY AREA [10,1]. NNN IS
THE NUMBER OF THE ^^SER\\ (^SOFTWARE ^ERROR ^REPORT) FORM.
.B;.I-30
_.^^ASSIGN DSK LPT\\	^ASSIGN THE LOGICAL NAME ^L^P^T TO THE ^D^S^K.
.B;.I-30
_.^^SYS XL SYS:CRASH	T\\HIS CAUSES THE ^^SYSTAT\\ PROGRAM TO LOOK AT
THE ^^CRASH.EXE\\ FILE ON ^^SYS\\:#AND PRODUCE A ^^SYSTAT.TXT\\ FILE
ON [1,2].
.B;.I-30
_.^^DEASSIGN LPT	D\\EASSIGN ^L^P^T FROM ^D^S^K.
.I-30
_.^^PRINT SYSTAT.TXT\\	^PRINT THE ^^SYSTAT\\ OUTPUT
INFORMATION.
.B;.LM0
^IF YOU KNOW THE VALUE IN THE ^P^C AT THE TIME OF THE CRASH,
YOU CAN USE A MONITOR-SPECIFIC ^^FILDDT\\ TO CONVERT IT INTO THE ALPHANUMERIC SYMBOLIC VALUE.
^TO CREATE A MONITOR-SPECIFIC ^^FILDDT\\, USE THE FOLLOWING PROCEDURE:
.B;.LM30;.TS30;.I-30
_.^^R FILDDT\\	^RUN ^^FILDDT\\
.B;.I-30
^^FILE:SYSTEM.EXE/S\\	^REPLY TO THE PROMPT WITH THE SPECIFIC MONITOR
TO BE EXAMINED. (/^S LOADS THE SYMBOLS FROM THE FILE SPECIFIED.)
.B;.I-30
^^FILE:_^^C\\	^EXIT TO THE MONITOR.
.B;.I-30
_.^^SAVE FDSYS\\	^SAVE THE MONITOR-SPECIFIC ^^FILDDT\\ AS A FILE
NAMED ^^FDSYS\\.
.B;.LM0
^WHENEVER YOU WANT TO CONVERT A ^^PC\\ VALUE INTO ITS SYMBOLIC COUNTERPART,
USE THE FOLLOWING PROCEDURE:
.B;.LM30;.TS30;.I-30
_.^^R FDSYS\\	^RUN# ^^FDSYS\\ # AND# REPLY #TO THE# ^^FILE:\\
.I-30
^^FILE:<CR>\\	PROMPT WITH A <^^CR\\> TO INDICATE THAT YOU WANT TO LOOK AT THE
RUNNING MONITOR.
.B;.I-30
NNNNNN__XXXXXX	^TYPE IN THE OCTAL ^^PC\\ VALUE NNNNNN FOLLOWED BY AN
UNDERSCORE (BACK ARROW) AND THE PROGRAM WILL RESPOND WITH A TAB AND THE
SYMBOLIC VALUE XXXXXX.
.PG;.LM0
.HL 2 ^&HARDWARE ERRORS\&\\
\\^THE MOST COMMON HARDWARE CRASH IS THE RESULT OF A MEMORY
PARITY ERROR. ^THIS WILL CAUSE THE SYSTEM TO STOP. ^THE
PROCEDURE BELOW SHOULD BE USED TO BRING THE SYSTEM BACK UP.
^IN OTHER CASES OF HARDWARE PROBLEMS, YOU MAY HAVE TO
CALL ^FIELD ^SERVICE FOR
ASSISTANCE OR MERELY RELOAD THE SYSTEM.
.B3
6.1.2.1##^&^PARITY ^ERROR\&#-#^THERE
ARE TWO DISTINCT SITUATIONS THAT ARISE AS THE RESULT
OF A PARITY ERROR. ^IF THE PARITY ERROR OCCURS IN THE MONITOR,
THE SYSTEM WILL HALT. ^IF THE PARITY ERROR OCCURS IN USER CORE,
THE SYSTEM MAY REMAIN RUNNING. ^IN EITHER CASE, A MESSAGE
WILL BE PRINTED ON YOUR OPERATOR TERMINAL. ^THE STEPS TO FOLLOW
ARE EXPLAINED BELOW.
.B
^CASE 1 - ^PARITY ^ERROR IN THE ^MONITOR
.BR
-------------------------------------
.BR
.B
^WHEN A PARITY ERROR OCCURS IN THE MONITOR, THE ^C^T^Y WILL SOUND
FIVE BELLS, PRINT OUT ?^^EXEC PAR ERROR HALT\\ OR ?^^MEM PAR
HALT\\, AND THEN PRINT OUT ONE OF THE FOLLOWING ERROR MESSAGES:
.B;.LM5;.NF;.NJ
?0^^MEM PAR ERR ON CPU\\N ^^FOR JOB IN [\\PROG NAME]
.B
?1^^MEM PAR ERR AT\\ YYYYYY ^^ON CPU\\N ^^FOR JOB IN [\\PROG NAME]
.B
?1^^MEM PAR ERR AT\\ YYYYYY ^^ON CHANNEL 0
.B
?\\N^^MEM PAR ERRS FROM\\ YYYYYY ^^TO\\ ZZZZZZ ^^ON CPU\\N ^^FOR JOB IN\\
[PROG NAME]
.B;.LM0;.F;.J
FOLLOWED BY THE QUESTION:
.B;.I5
^^CONTINUE SYSTEM? (TYPE Y OR <CR>)\\
.B
^YOU CAN ATTEMPT TO CONTINUE BY TYPING IN A ^Y; HOWEVER,
THIS IS NOT RECOMMENDED SINCE THE MONITOR MAY HAVE BEEN SERIOUSLY
DAMAGED.
.B
^IF YOU ENTER <^C^R>, THE SYSTEM WILL LOAD THE MONITOR
BOOTSTRAP AND YOU WILL BE PROMPTED WITH "^^BOOTS\\."
.B
^TYPE /^D TO GET A CRASH DUMP.
.B
^DETERMINE IN WHICH MEMORY BANK THE PARITY ERROR OCCURRED
FROM THE LOCATION TYPED OUT ON THE ^^CTY\\ AND FROM THE MEMORY
SELECTION AND INTERLEAVING SWITCHES. (^SEE ^SECTION 6.1.2.3.)
.B
^DESELECT THE MEMORY WHICH HAD THE ERROR AND RECONFIGURE THE
REMAINING MEMORIES. (^THE DESELECTION AND RECONFIGURATION
PROCEDURE IS EXPLAINED BELOW IN ^SECTION 6.1.2.2.)
.B
^RELOAD THE MONITOR.
.B
^FILL OUT A ^MEMORY ^PARITY ^ERROR (^^PAR\\) FORM AND MAKE AN
ENTRY IN THE LOGBOOK.
.B;.LM0
^CASE 2 - ^PARITY ^ERROR IN ^USER ^CORE
.BR
------------------------------------
.B
^WHEN A PARITY ERROR OCCURS IN USER CORE, FIVE BELLS ARE
SOUNDED AND ONE OF THE FOLLOWING MESSAGES IS PRINTED ON THE ^C^T^Y:
.PG;.LM5;.NF;.NJ
?0^^MEM PAR ERR ON CPU\\N ^^FOR JOB IN\\ [PROG NAME]
.B
?1^^MEM PAR ERR AT\\ YYYYYY ^^ON CPU\\N ^^FOR JOB IN\\ [PROG NAME]
.B
?1^^MEM PAR ERR AT\\ YYYYYY ^^ON CHANNEL 0
.B
?\\N^^MEM PAR ERRS FROM\\ YYYYYY ^^TO\\ ZZZZZZ ^^ON CPU\\N ^^FOR JOB IN\\
[PROG NAME]
.B;.LM0;.F;.J
^AT THIS POINT, THE SYSTEM IS STILL RUNNING AND YOU SHOULD
PROCEED AS FOLLOWS:
.LS;.LE;^IF THE PROGRAM NAME THAT TYPED OUT WAS ONE OF THE
OPERATOR JOBS, SUCH AS ^^BATCON, OPSER, LPTSPL, PTPSPL\\, ETC.,
RESTART THAT PARTICULAR JOB.
.LE;^FILL OUT A ^P^A^R FORM AND MAKE
AN ENTRY IN THE LOGBOOK.
.LE;^DETERMINE THE MEMORY BANK IN WHICH THE PARITY ERROR OCCURRED.
^USE THE LOCATION TYPED OUT ON THE ^C^T^Y AND THE SETTING OF THE
MEMORY SELECTION AND INTERLEAVING SWITCHES. (^SEE ^SECTION
6.1.2.3.)
.LE;^IF THIS IS THE SECOND PARITY ERROR IN THE SAME MEMORY
WITHIN A 4-HOUR PERIOD, USE ^^SEND ALL\\ TO INFORM THE USERS
THAT THE SYSTEM WILL BE RELOADED IN 15 MINUTES. ^IF NOT,
LET THE SYSTEM CONTINUE RUNNING.
.LE;^AT THE SPECIFIED TIME, STOP THE SYSTEM, DESELECT THE MEMORY,
RECONFIGURE THE REMAINING MEMORIES (^SEE ^SECTION 6.1.2.2), AND
RELOAD THE SYSTEM.
.ELS
.NT
^UNDER CERTAIN CONDITIONS, PORTIONS OF MEMORY CAN BE DYNAMICALLY
DESELECTED VIA THE ^^SET MEMORY OFF-LINE\\ COMMAND. ^THESE CONDITIONS
ARE SPECIFIED IN THE SECTION DESCRIBING THE COMMAND IN ^APPENDIX ^A.
.EN
.B3
6.1.2.2##^&^ALTERING ^YOUR ^MEMORY ^CONFIGURATION\&#-#^THERE
MAY BE TIMES WHEN AN ERROR MESSAGE WILL INDICATE THAT
A PORTION OF A MEMORY MODULE OR A WHOLE MODULE IS UNUSABLE DUE TO
PARITY OR OTHER PROBLEMS. ^UNDER CERTAIN CONDITIONS YOU CAN MERELY
SET A PORTION OF MEMORY OFF-LINE AND LET THE SYSTEM CONTINUE
PROCESSING. ^IF THIS ISN'T POSSIBLE, YOU WILL HAVE TO STOP
THE SYSTEM, RECONFIGURE MEMORY WITHOUT THE AFFECTED MODULE,
AND RELOAD THE SYSTEM.
.B
^SETTING ^MEMORY ^OFF-LINE
.B
^THE OPERATOR-PRIVILEGED COMMAND:
.B;.I5
^^SET MEMORY OFF-LINE FROM\\ N ^T^O M
.B
DESCRIBED IN DETAIL IN ^APPENDIX ^A, CAN BE USED PROVIDING THAT
ALL THREE OF THE FOLLOWING CONDITIONS ARE MET:
.PG
.LS;.LE;^THE MEMORY TO BE SET OFF-LINE DOES NOT CONTAIN ANY
PORTION OF THE RESIDENT MONITOR.
.LE;^AFTER THE MEMORY IS OFF-LINE, THERE WILL STILL BE A
REASONABLE AMOUNT OF MEMORY LEFT FOR USER PROGRAMS.
"^REASONABLE AMOUNT" DEPENDS ON AN INSTALLATION'S USAGE OF THE
SYSTEM. ^CONSULT THE SYSTEM ADMINISTRATOR ON THIS.
.LE;^THE MEMORY TO BE SET OFF-LINE IS NOT INTERLEAVED. (^IF
INTERLEAVED MEMORY IS SET OFF-LINE, MEMORY THAT IS GOOD AND
USABLE WILL ALSO BE PLACED OFF-LINE.)
.ELS
^WHEN THE ^^SET MEMORY OFF-LINE\\ COMMAND IS SUCCESSFUL, THE SYSTEM
CONTINUES. ^MEMORY THAT WAS SET OFF-LINE IS NOT REFERENCED.
.B
^IF THE ABOVE CONDITIONS CANNOT BE MET, PROCEED TO RECONFIGURING MEMORIES.
.B
^RECONFIGURING ^MEMORIES
.B;.TS10,45
	^^ACTION	EXPLANATION\\
.B2;.LM5;.TS35;.NF;.NJ
^IF THE BAD MEMORY CONTAINS	^MEMORY OCCUPIED BY THE RESIDENT
ANY PART OF THE RESIDENT	MONITOR CANNOT BE SET OFF-LINE.
MONITOR, SKIP THE NEXT
TWO STEPS.
.B
^SET BAD MEMORY OFF-	^YOU ARE GOING TO ATTEMPT AN ORDERLY
LINE. ^HOWEVER, IF NO	SHUTDOWN IN PREPARATION FOR RECON-
JOB CAN RUN WITHOUT THAT	FIGURING MEMORY MODULES.
MEMORY, DO NOT TRY TO
MAKE THE COMMAND
SUCCEED; SKIP THE
NEXT STEP.
.B
^STOP TIMESHARING.	^SEE ^SECTION 4.1.2.1 FOR THE
	OPERATOR-PRIVILEGED ^^OPSER\\ COMMAND
	^^KSYS\\ TO STOP TIMESHARING AT A
	SPECIFIED TIME. ^ALLOW ENOUGH TIME
	FOR THOSE JOBS THAT CAN RUN TO
	COMPLETE THEIR PROCESSING.
.B
^TYPE _^_\ ON THE ^C^T^Y.	^INVOKE THE ^^RSX-20F\\ COMMAND LANGUAGE
	^^PARSER\\.
.B
^^PAR>SET CONSOLE MAINTENANCE\\	^THE FIRST COMMAND CHANGES THE
^^PAR>RESET\\	CONSOLE MODE TO ALLOW YOU TO ISSUE
	THE SECOND COMMAND WHICH IN TURN
	CAUSES A MASTER RESET OF THE ^K^L
	PROCESSOR.
.B
^RECONFIGURE MEMORIES.	^DESELECT THE BAD MEMORY, CHECK THE
	LOWER BOUND ADDRESSES (^^MADR\\
	SWITCHES) TO GET CONTIGUOUS MEMORY,
	AND CORRECTLY SET THE INTERLEAVE
	SWITCHES. (^SEE ^SECTION 6.1.2.3.)
.B
^RELOAD THE MONITOR	^REFER TO ^SECTION 3.3.1.
.LM0;.F;.J;.B3;.PS69,70
6.1.2.3##^&^MEMORY ^SELECTION AND ^INTERLEAVING\&#-#^MEMORIES
ARE SELECTED OR SEQUENTIALLY ASSIGNED OCTAL NUMBERS
BEGINNING WITH 0. ^FOR EXAMPLE, FIVE MEMORIES WOULD BE NUMBERED
0,1,2,3 AND 4. ^IT IS IMPORTANT TO NOTE THAT THEY MUST BE
NUMBERED OR SELECTED SEQUENTIALLY.
.PG
.B
^THIS NUMBERING OF MEMORIES EFFECTIVELY INDICATES THE BEGINNING
MEMORY ADDRESS OR LOWER BOUND ADDRESS FOR A PARTICULAR
MEMORY. ^IN THE EXAMPLE ABOVE, IF EACH MEMORY HAD A CAPACITY OF
32^K, MEMORY 0 WOULD START WITH ADDRESS 0, MEMORY 1 WITH ADDRESS
100000 (A 1 IN BIT 20), MEMORY 4 WITH ADDRESS 400000 (A 1 IN BIT
18).
.B
^MEMORIES ARE NORMALLY INTERLEAVED BECAUSE INTERLEAVING MAKES THE SYSTEM RUN FASTER.
.B
^IN MEMORIES OTHER THAN ^M^G10S AND ^M^H10S THIS MEANS
THAT THEY WORK IN PAIRS OR FOURS SUCH THAT CONSECUTIVE MEMORY
ADDRESSES ALTERNATE OR ROTATE BETWEEN MEMORIES. ^IN THE EXAMPLE
ABOVE, 2-WAY INTERLEAVING WOULD BE BETWEEN UNITS 0 AND 1,
AND BETWEEN 2 AND 3, WITH MEMORY NUMBER 4 OPERATING ALONE. ^IN
THE CASE OF 4-WAY INTERLEAVING WITH NINE MEMORIES, FOR EXAMPLE,
THE SETS 0-3 AND 4-7 WOULD EACH BE INTERLEAVED, WITH 10 (OCTAL)
OPERATING ALONE. ^ONLY MEMORIES OF THE SAME SIZE AND WITH
CONSECUTIVE ADDRESSES STARTING WITH AN EVEN NUMBERED MEMORY CAN
BE INTERLEAVED. ^FOR EXAMPLE, 2-WAY INTERLEAVING CAN EXIST
BETWEEN MEMORIES 0 AND 1 BUT NOT BETWEEN 1 AND 2; 4-WAY INTERLEAVING
CAN EXIST BETWEEN 0,1,2, AND 3 BUT NOT BETWEEN 1,2,3, AND 4.
.B
^INTERLEAVING IN ^M^G10S AND ^M^H10S IS SOMEWHAT DIFFERENT. ^FOR ^^MG\\10S
2-WAY INTERLEAVING IS AVAILABLE WITHIN A SINGLE CABINET AND 4-WAY
INTERLEAVING BETWEEN TWO CABINETS. ^HOWEVER, THE UNITS OR CABINETS
MUST STILL CONTAIN EQUAL AMOUNTS OF STORAGE.
^FOR ^^MH\\10S, EITHER 2-WAY OR 4-WAY INTERLEAVING IS AVAILABLE WITHIN
A SINGLE CABINET.
.B
^THE PANEL CONTAINING THE SWITCHES THAT CONTROL THE NUMBERING,
SELECTION, AND INTERLEAVING OF MEMORIES IS LOCATED INSIDE THE
FRONT DOOR OF THE MEMORY.
.B
^M^F10 ^MEMORY
.BR
-----------
.B
^IN AN ^M^F10 THERE ARE FOUR GROUPS OF IDENTICAL SWITCHES,
ONE GROUP FOR EACH PORT. ^EACH GROUP HAS A SET OF SEVEN SWITCHES
THAT DETERMINE THE OCTAL NUMBER OF THE MEMORY TO BE SELECTED.
^THERE IS ALSO ONE SWITCH IN EACH GROUP THAT CONTROLS THE
INTERLEAVING AND ONE SWITCH IN EACH GROUP THAT SELECTS OR
DESELECTS THE MEMORY. ^TO DESELECT AN ENTIRE MEMORY, THE
OPERATOR SHOULD PUT ALL FOUR SELECT SWITCHES INTO THE ^D^E^S
POSITION. ^THE ADDRESS SWITCH SETTINGS OF ALL SELECTED GROUPS
MUST BE IDENTICAL IN ANY ONE MEMORY.
.B
^IF AN ^M^F10 MEMORY IS BEING USED WITH A VERSION OF ^^TOPS\\-10
EARLIER THAN 5.06, AND YOU DESELECT A BANK OF MEMORY OTHER
THAN THE HIGHEST NUMBERED ONE, YOU MUST RENUMBER THE MEMORIES
TO ELIMINATE THE HOLE. ^IF AFTER DESELECTING A MEMORY, IN THE
CASE OF A 2-WAY INTERLEAVE, AN EVEN NUMBER OF MEMORIES REMAIN,
THEY WILL ALL BE INTERLEAVED. ^IF THERE IS AN ODD NUMBER OF
MEMORIES, ALL BUT THE LAST, OR HIGH ORDER, MEMORY WILL BE
INTERLEAVED. ^THE HIGH ORDER MEMORY SHOULD BE SWITCHED
TO THE ^^NORM\\ (NO INTERLEAVING) POSITION.
.B
^EXAMPLE:
.BR
--------
.B
^THE SYSTEM CONFIGURATION CONSISTS OF 12 (OCTAL) MEMORIES
NUMBERED 0-11. ^MEMORY NUMBER 5 IS DESELECTED. ^THE OPERATOR
WOULD NOW RESELECT MEMORY NUMBER 11 TO BECOME NUMBER 5. ^MEMORY
NUMBER 10 (OCTAL) MUST NOW BE SWITCHED TO THE ^^NORM\\ POSITION
BECAUSE IT IS THE NINTH MEMORY (ODD).
.B
^THE FOLLOWING TABLE INDICATES THE SWITCH SETTINGS FOR
NUMBERING ^M^F10-^AS (32^K EACH) UP TO 256^K.
.PG
.B2;.LM0;.PS67,70;.C
^TABLE 6-1
.C
^M^F10-^A (32^K) ^MEMORY ^ADDRESS ^SWITCH ^SETTINGS
.B2;.LM2;.RM68;.TS37;.NF;.NJ
	^^MADR\\ SWITCHES
.B;.TS19,32,36,39,43,46,50,54
^MEMORY ^ADDRESS	^M^F10 ^NO.	14	15	16	17	18	19	20
.B2
000000#-#077777	##0	0	0	0	0	0	0	0
100000#-#177777	##1	0	0	0	0	0	0	1
200000#-#277777	##2	0	0	0	0	0	1	0
300000#-#377777	##3	0	0	0	0	0	1	1
400000#-#477777	##4	0	0	0	0	1	0	0
500000#-#577777	##5	0	0	0	0	1	0	1
600000#-#677777	##6	0	0	0	0	1	1	0
700000#-#777777	##7	0	0	0	0	1	1	1
.B2;.LM0;.RM70;.F;.J
^THE FOLLOWING TABLE INDICATES THE SWITCH SETTINGS FOR
NUMBERING ^M^F10-^GS (64^K EACH) UP TO 512^K.
.B2;.C
^TABLE 6-2
.C
^M^F10-^G (64^K) ^MEMORY ^ADDRESS ^SWITCH ^SETTINGS
.B2;.LM2;.RM68;.TS37;.NF;.NJ
	^^MADR\\ SWITCHES
.B;.TS22,35,39,43,47,51,55,59
^MEMORY ^ADDRESS	^M^F10 ^NO.	14	15	16	17	^I^G^N	18	19
.B2
0000000#-#0177777	##0	0	0	0	0	^I^G^N	0	0
0200000#-#0377777	##1	0	0	0	0	^I^G^N	0	1
0400000#-#0577777	##2	0	0	0	0	^I^G^N	1	0
0600000#-#0777777	##3	0	0	0	0	^I^G^N	1	1
1000000#-#1177777	##4	0	0	0	1	^I^G^N	0	0
1200000#-#1377777	##5	0	0	0	1	^I^G^N	0	1
1400000#-#1577777	##6	0	0	0	1	^I^G^N	1	0
1600000#-#1777777	##7	0	0	0	1	^I^G^N	1	1
.B2;.LM0;.RM70;.F;.J
^THE FOLLOWING TABLE INDICATES THE SWITCH SETTINGS ON AN
^M^F10 FOR NONINTERLEAVED AND INTERLEAVED OPERATION.
.B2;.C
^TABLE 6-3
.C
^M^F10 ^INTERLEAVE ^SWITCH ^SETTINGS
.B2;.TS25;.NF;.NJ
	^^MADR\\ SWITCHES
.B2;.LM10;.TS24,34
^MODE	34	35
.B2
^NORMAL	^^NORM	NORM\\
#2-WAY	^^NORM	INTL\\
#4-WAY	^^INTL	INTL\\
.PG
.B2;.LM0;.F;.J
^M^G10 AND ^M^H10 ^MEMORIES
.BR
----------------------
.B
^IN AN ^M^G10 OR ^M^H10, THERE IS ONLY ONE GROUP OF SEVEN
SWITCHES USED TO NUMBER THE MEMORY, BUT THERE ARE EIGHT SWITCHES
TO DETERMINE PORT SELECTION, BECAUSE THERE ARE EIGHT PORTS PER
MEMORY. ^EACH PORT SWITCH CAN BE SET FOR EITHER THE ^K^I/^K^L
OR ^K^A PROCESSOR, OR THE PORT CAN BE DESELECTED.
.B
^THERE ARE ALSO SWITCHES THAT ENABLE THE DESELECTION OF SPECIFIC
BANKS OF MEMORY. ^THE INITIAL BANK SWITCH SETTINGS FOR VARIOUS
MEMORY SIZES ARE GIVEN IN THE TABLE BELOW.
.B2;.C
^TABLE 6-4
.C
^M^G10 AND ^M^H10 ^MEMORY ^BANK ^SELECTION
.B2;.TS5,35,46;.NF;.NJ
	^MEMORY ^BANK ^SWITCHES	^M^G10	^M^H10
.BR;.TS11,34,45
	^^ON LINE\\	^MEMORY	^MEMORY
.BR;.TS7,35,46
	^M0##^M1##^M2##^M3	^SIZE	^SIZE
.B2
	1###0###0###0	32^K	#64^K
	1###1###0###0	64^K	128^K
	1###1###1###1	128^K	256^K
.B
	0=^^OFF LINE########1=ON LINE\\
	#(DESELECTED)########(SELECTED)
.B2;.LM0;.F;.J
^IF A HARDWARE PROBLEM ARISES, ANY BANK CAN BE DESELECTED BY
SETTING A BANK SWITCH ^^OFF LINE\\. ^DESELECTED BANKS ARE LOGICALLY
PLACED INTO THE HIGHEST CORE IN THE CABINET, WHILE OTHER
	PREVIOUSLY HIGHER PORTIONS ARE PUSHED DOWN, SO THAT NO HOLE
APPEARS IN THE ADDRESS BASE WITHIN A CABINET. ^ALSO, INTERLEAVING
SWITCHES MAY HAVE TO BE RESET. ^FOR EXAMPLE, A 128^K CABINET
WITH 32^K DESELECTED CANNOT BE 4-WAY INTERLEAVED WITH ANOTHER
128^K CABINET.
.B
^THE FOLLOWING TABLE INDICATES THE MEMORY ADDRESS SWITCH
SETTINGS FOR NUMBERING ^M^G10 AND ^M^H10 MEMORIES OF VARIOUS SIZES.
^NOTE THAT THE LOWER BOUND ADDRESS OR BEGINNING ADDRESS OF AN
^M^G10 MEMORY CAN ONLY BE 0 OR A MULTIPLE OF 32^K AND THAT OF AN
^M^H10 MEMORY CAN ONLY BE 0 OR A MULTIPLE OF 64^K.
.B2;.C
^TABLE 6-5
.C
^M^G10-^A (32^K) ^MEMORY ^ADDRESS ^SWITCH ^SETTINGS
.B2;.LM2;.RM68;.TS20,35,38,41,44,47,50,53
			##^^MADR S\\WITCHES
.B
^MEMORY ^ADDRESS	^MEMORY ^NO.	14	15	16	17	18	19	20
.B2;.TS24,35,38,41,44,47,50,53
000000#-#077777	0	0	0	0	0	0	0	0
100000#-#277777	1	0	0	0	0	0	0	1
200000#-#277777	2	0	0	0	0	0	1	0
300000#-#377777	3	0	0	0	0	0	1	1
400000#-#477777	4	0	0	0	0	1	0	0
500000#-#577777	5	0	0	0	0	1	0	1
600000#-#677777	6	0	0	0	0	1	1	0
700000#-#777777	7	0	0	0	0	1	1	1
.PG;.C
^TABLE 6-5 (^CONT.)
.C
^M^G10-^G OR ^M^H10-^G (64^K) ^MEMORY ^ADDRESS ^SWITCH ^SETTINGS
.B2;.TS40
	^^MADR S\\WITCHES
.B;.TS20,35,38,41,44,47,50,53
^MEMORY ^ADDRESS	^MEMORY ^NO.	14	15	16	17	18	19	20
.B2;.TS24,35,38,41,44,47,50,53;.NF;.NJ
0000000#-#0177777	0	0	0	0	0	0	0	0
0200000#-#0377777	1	0	0	0	0	0	1	0
0400000#-#0577777	2	0	0	0	0	1	0	0
0600000#-#0777777	3	0	0	0	0	1	1	0
1000000#-#1177777	4	0	0	0	1	0	0	0
1200000#-#1377777	5	0	0	0	1	0	1	0
1400000#-#1577777	6	0	0	0	1	1	0	0
1600000#-#1777777	7	0	0	0	1	1	1	0
.B2;.F;.J;.C
^M^G10-^H OR ^M^H10-^H (128^K) ^MEMORY ^ADDRESS ^SWITCH ^SETTINGS
.B;.TS40
	^^MADR S\\WITCHES
.B;.TS20,35,38,41,44,47,50,53
^MEMORY ^ADDRESS	^MEMORY ^NO.	14	15	16	17	18	19	20
.B;.TS24,35,38,41,44,47,50,53;.NF;.NJ
0000000#-#0377777	0	0	0	0	0	0	0	0
0400000#-#0777777	1	0	0	0	0	1	0	0
1000000#-#1377777	2	0	0	0	1	0	0	0
1400000#-#1777777	3	0	0	0	1	1	0	0
2000000#-#2377777	4	0	0	1	0	0	0	0
2400000#-#2777777	5	0	0	1	0	1	0	0
3000000#-#3377777	6	0	0	1	1	0	0	0
3400000#-#3777777	7	0	0	1	1	1	0	0
.B2;.F;.J;.C
^M^H10-^L (256^K) ^MEMORY ^ADDRESS ^SWITCH ^SETTINGS
.B;.TS40
	^^MADR S\\WITCHES
.B;.TS20,35,38,41,44,47,50,53
^MEMORY ^ADDRESS	^MEMORY ^NO.	14	15	16	17	18	19	20
.B;.TS24,35,38,41,44,47,50,53;.NF;.NJ
0000000#-#0777777	0	0	0	0	0	0	0	0
1000000#-#1777777	1	0	0	0	1	0	0	0
2000000#-#2777777	2	0	0	1	0	0	0	0
3000000#-#3777777	3	0	0	1	1	0	0	0
4000000#-#4777777	4	0	1	0	0	0	0	0
5000000#-#5777777	5	0	1	0	1	0	0	0
6000000#-#6777777	6	0	1	1	0	0	0	0
7000000#-#7777777	7	0	1	1	1	0	0	0
.B2;.LM0;.RM70;.F;.J;.PS69,70
^TABLE 6-6 INDICATES THE SWITCH SETTINGS ON AN
^M^G10 OR ^M^H10 FOR INTERLEAVED AND NONINTERLEAVED OPERATION.
.B2;.C
^TABLE 6-6
.C
^M^G10 AND ^M^H10 ^INTERLEAVE ^SWITCH ^SETTINGS
.B2;.TS36
	^^MADR\\ ^SWITCHES
.BR
.B;.LM20;.TS35,45;.NF;.NJ
^MODE	34	35
.B
^NORMAL	^^NORM	NORM\\
#2-WAY	^^NORM	INTL\\
#4-WAY	^^INTL	INTL\\
.PG
.B2;.LM0;.F;.J;.PS67,70
^NOTE THAT ANY ^M^G10 OR ^M^H10 CAN BE 2-WAY INTERLEAVED,
ANY ^^MH\\10 CAN BE 4-WAY INTERLEAVED,
AND ANY TWO CONSECUTIVELY NUMBERED ^M^G10'S OF
EQUAL SIZE (WORD STORAGE) CAN BE 4-WAY INTERLEAVED, WITH ONE
PROVISION. ^TO 4-WAY INTERLEAVE TWO 96^K ^M^G10'S, THE ^^MADR\\
SWITCH SETTINGS OF THE FIRST 96^K ^M^G10 MUST INDICATE A LOWER
BOUND ADDRESS OF 0 OR A MULTIPLE OF 256^K.
.B
^IT IS IMPERATIVE THAT THE OPERATOR BECOME PROFICIENT IN THIS
PROCEDURE OF NUMBERING, SELECTING, AND INTERLEAVING MEMORIES.
^NEEDLESS SYSTEM DOWNTIME MAY RESULT FROM OPERATOR INEPTNESS
IN THIS TASK.
.HL 2 ^&ENVIRONMENTAL ERRORS\&\\
\\^THE CAUSES OF ENVIRONMENTAL CRASHES ARE VARIED. ^THEY INCLUDE
POWER FLUCTUATIONS, POWER OUTAGES, TEMPERATURE EXTREMES,
WATER LEAKS, ACCIDENTAL SPILLS, MECHANICAL SHOCKS, ETC.
^SOME OF THESE ARE DETECTABLE BEFORE THEY CAUSE THE SYSTEM
TO CRASH. ^FOR EXAMPLE, A FAILURE OF THE AIR CONDITIONING
SYSTEM WOULD BE NOTICED BY THE RISE IN TEMPERATURE. ^OTHERS,
LIKE POWER FAILURES, WILL OCCUR WITHOUT WARNING.
.B
^WHENEVER POSSIBLE, YOU SHOULD PERFORM AN ORDERLY SHUTDOWN IF
ANY OF THESE CONDITIONS ARE IMMINENT. ^WHEN THE SITUATION IS
RECTIFIED, YOU CAN POWER UP AND RELOAD THE SYSTEM.
.B
^POWER FAILURES CAN BE CLASSIFIED INTO TWO CATEGORIES: SHORT
FLUCTUATIONS AND PROLONGED OUTAGES. ^THESE ARE DISCUSSED SEPARATELY
BELOW. ^IN EITHER SITUATION, A POWER FAILURE DETECTION CIRCUIT
SENSES THE IMPENDING CONDITIONS AND INITIATES A POWER FAILURE
INTERRUPT. ^THIS INTERRUPT TRIGGERS THE OPERATION OF A PROGRAM
THAT SAVES THE ^P^C, FLAGS, MODE INFORMATION, AND FAST MEMORY
REGISTERS; IT THEN HALTS THE PROCESSOR. ^THIS ALLOWS THE SYSTEM
TO BE RESTARTED IN A MINIMUM AMOUNT OF TIME. ^TEMPERATURE
SENSORS, STRATEGICALLY PLACED WITHIN THE EQUIPMENT, DETECT HIGH
TEMPERATURE CONDITIONS AND CAUSE POWER SHUTDOWN. ^THIS, ALSO,
INITIATES THE POWER FAILURE INTERRUPT SEQUENCE.
.B3
6.1.3.1##^&^POWER ^FLUCTUATION\&#-#^POWER
FLUCTUATIONS ARE VARIATIONS IN LINE VOLTAGE THAT OCCUR
OVER A SHORT SPACE OF TIME. ^ALTHOUGH THE POWER IS NOT LOST
COMPLETELY, THE SYSTEM WILL PROBABLY GO THROUGH AN AUTOMATIC
RESTART PROCEDURE. ^IF THE RESTART IS UNSUCCESSFUL, DO
THE FOLLOWING:
.LS;.LE;^CHECK THE DISK DRIVES AND VISUALLY ENSURE THAT THE
HEADS HAVE RETRACTED. ^IF THEY HAVE NOT, NOTIFY ^FIELD ^SERVICE
AND DO NOT ATTEMPT TO LOAD THE SYSTEM.
.LE;^CHECK ALL OTHER EQUIPMENT TO MAKE SURE THAT THERE IS
POWER TO THE UNIT. ^IF NOT, ATTEMPT TO POWER UP
THE UNIT. ^IF THIS FAILS NOTIFY ^FIELD ^SERVICE.
.LE;^IF NECESSARY, RELOAD THE MONITOR. (^REFER TO ^SECTION 3.3.1). ^IF THE
MONITOR WON'T LOAD, CHECK THE VARIOUS CONTROLLERS; CLEAR THEM
IF NECESSARY (SEE THE ^SYSTEM ^REFERENCE ^MANUAL IN THE ^SOFTWARE
^NOTEBOOKS), AND TRY TO RELOAD THE MONITOR AGAIN. ^IF THIS STILL
FAILS, NOTIFY YOUR SUPERVISOR.
.ELS
.B3
6.1.3.2##^&^POWER ^OUTAGE\&#-#^A
POWER OUTAGE MEANS THAT THE POWER DROPS OUT
COMPLETELY.###^YOU##MUST##NOW TAKE PRECAUTIONARY STEPS BEFORE THE POWER
.PG
COMES BACK ON. ^THE SUDDEN SURGE OF POWER MAY PROVE HARMFUL TO CERTAIN
PIECES OF EQUIPMENT.
.B
^TURN THE ^^START/STOP\\ SWITCH ON ALL DISK PACK DRIVES TO
THE ^^STOP\\ POSITION AND VISUALLY ENSURE THAT THE HEADS HAVE
RETRACTED COMPLETELY. ^IF THEY HAVE NOT, NOTIFY ^FIELD
^SERVICE AND DO NOT ATTEMPT TO POWER UP THE DRIVES.
.B
^^POWERING THE SYSTEM DOWN AND UP\\
.BR
-------------------------------
.B
^MOST OF THE SYSTEM HARDWARE CAN BE POWERED DOWN OR UP BY
PRESSING THE ^^POWER\\ SWITCH ON THE CONSOLE. ^HOWEVER,
ALL PIECES OF HARDWARE TO BE CONTROLLED IN SUCH MANNER
MUST HAVE THEIR ^^LOCAL/REMOTE\\ SWITCH IN THE ^^REMOTE\\
POSITION DURING OPERATION.
.HL 1 ^&FRONT-END PROCESSOR RECOVERY\&\\
\\^THE ^D^E^CSYSTEM-10 FRONT-END PROCESSORS FALL INTO TWO
CATEGORIES ACCORDING TO USAGE. ^THE CONSOLE/DIAGNOSTIC FRONT-END
TAKES CARE OF THE SYSTEM OPERATOR INTERFACE AND SYSTEM DIAGNOSTICS.
^THE COMMUNICATION FRONT-ENDS TAKE CARE OF LOCAL AND REMOTE
STATIONS AND TERMINALS.
.B
^FRONT-END ERROR RECOVERY IS BASED NOT ONLY ON USAGE BUT ALSO
ON THE TYPE OF INTERFACE TO THE ^K^L PROCESSOR. ^THE
CONSOLE/DIAGNOSTIC AND ^D^N87^S COMMUNICATIONS FRONT-ENDS
USE THE INTEGRATED DATA INTERFACE (^D^T^E20) TO ACCESS THE MEMORY
AND ^I/^O BUSES. ^THE ^D^C75^N^P, ^D^N85, AND ^D^N87 COMMUNICATIONS
FRONT ENDS USE THE ^D^L10 COMMUNICATIONS CHANNEL TO CONNECT TO
THE MEMORY AND ^I/^O BUSES.
.B
^FRONT-END ERROR RECOVERY WILL BE DISCUSSED UNDER THE FOLLOWING
HEADINGS:
.LS;.LE;^CONSOLE/^DIAGNOSTIC ^FRONT ^END
.LE;^D^T^E20-^INTERFACED ^COMMUNICATIONS ^FRONT ^ENDS
.LE;^D^L10-^INTERFACED ^COMMUNICATIONS ^FRONT ^ENDS.
.ELS
.HL 2 ^&CONSOLE/^DIAGNOSTIC FRONT END\&\\
\\^WHENEVER THE ^K^L PROCESSOR SENSES THAT THE CONSOLE FRONT
END IS NOT RUNNING ("KEEP ALIVE" COUNT NOT BEING INCREMENTED),
IT CHECKS TO SEE IF ^^DTELDR\\ IS RUNNING AND IF THE AUTOMATIC RELOADING OF FRONT ENDS (/^^AUTO\\)
IS IN EFFECT. /^^AUTO\\ IS A SWITCH FUNCTION OF ^^DTELDR\\,
THE PROGRAM THAT DUMPS AND LOADS FRONT ENDS CONNECTED TO THE
^K^L PROCESSOR VIA A ^D^T^E20 INTERFACE.
.B
^IF ^^DTELDR\\ IS RUNNING AND /^^AUTO\\ IS IN EFFECT, THE ^K^L PROCESSOR ELECTRONICALLY
ACTIVATES THE APPROPRIATE FRONT-END LOADER PROGRAM. ^ALSO,
UNLESS YOU INCLUDE THE /^^NODUMP\\ SWITCH IN THE ^^DTELDR\\
COMMAND, THE FRONT-END MEMORY IS DUMPED TO A FILE ^^DSK:DTED00.BIN
(.B00, .B01, \\ETC. FOR SUCCESSIVE DUMPS). ^THE FRONT-END
BOOTSTRAP IS THEN LOADED AND IN TURN, LOADS THE ^^RSX-20F\\ MONITOR.
^THE ^K^L PROCESSOR THEN ENSURES THAT THE FRONT END IS RUNNING
BY CHECKING THE "KEEP ALIVE" COUNT.
.B;.PS69,70
^TO ENABLE THE AUTOMATIC RELOADING OF THE CONSOLE
FRONT END AS WELL AS ANY COMMUNICATIONS FRONT ENDS, ADD
THE FOLLOWING JOB TO YOUR ^^OPR.ATO\\ FILE:
.PG
.B;.LM5;.TS25;.NF;.NJ
:^^SLOG\\	;LOG IN A SUBJOB
:^^DEF DTE\\=	;GIVE IT THE NAME ^D^T^E
^^DTE-R DTELDR\\	;LOAD THE ^^DTELDR\\ PROGRAM
^^DTE-/AUTO\\	;START IT WITH THE AUTO-RELOAD OPTION
.B;.LM0;.F;.J;.PS67,70
^IF THE AUTO-RELOAD FEATURE IS NOT ENABLED, OR IF THE ^^DTE\\
SUBJOB HAS STOPPED RUNNING, YOU CAN RUN ^^DTELDR\\ FROM ANY
TERMINAL LOGGED IN UNDER [1,2] AND BRING UP THE CONSOLE FRONT
END AS FOLLOWS:
.B;.LM25;.TS25;.NF;.NJ;.I-20
_.^^R DTELDR\\	;LOAD ^^DTELDR\\
.I-20
*/^^RELOAD\\:0	;RELOAD THE CONSOLE FRONT END (ALWAYS ON ^^DTE\\ 0)
.B;.LM0;.F;.J
^A COMPLETE DESCRIPTION OF THE ^^DTELDR\\ PROGRAM SWITCHES WILL BE
TYPED AT YOUR CONSOLE IF YOU ANSWER THE ^^DTELDR\\ PROMPT WITH:
.B;.I5
*/^^HELP\\
.HL 2 ^&^^DTE20-I\\NTERFACED COMMUNICATIONS FRONT ENDS\&\\
\\^WHENEVER THE ^K^L PROCESSOR SENSES THAT A COMMUNICATIONS
FRONT END ON A ^^DTE\\ INTERFACE IS NOT RUNNING,
IT CHECKS TO SEE IF AUTOMATIC RELOADING OF FRONT ENDS (/^^AUTO\\)
IS IN EFFECT. /^^AUTO\\ IS A SWITCH FUNCTION OF ^^DTELDR\\,
THE PROGRAM THAT DUMPS AND LOADS ^^DTE\\ INTERFACED FRONT ENDS.
.B
^IF /^^AUTO\\ IS IN EFFECT, THE ^K^L PROCESSOR AUTOMATICALLY
RELOADS THE FRONT END FROM A DEFAULT LOAD FILE. ^ALSO,
UNLESS YOU INCLUDE THE /^^NODUMP\\ SWITCH IN THE ^^DTELDR\\
COMMAND, THE FRONT-END MEMORY IS DUMPED TO A DEFAULT DUMP FILE.
.B
^DEFAULT LOAD FILES ARE NAMED ^^DSK:DTEL0\\N.^^BIN\\ WHERE N IS THE
^^DTE\\ NUMBER 1, 2, OR 3.
.B
^DEFAULT DUMP FILES ARE NAMED ^^DSK:DTED0\\N.^^BIN\\ WHERE N IS AGAIN
THE ^^DTE\\ NUMBER 1, 2, OR 3. ^SUCCESSIVE DUMPS OF THE SAME FRONT-END
ARE GIVEN UNIQUE FILE EXTENSIONS OF .^B00, .^B01, .^B02, ETC.
.B
^ENABLING THE /^^AUTO\\ FUNCTION FOR COMMUNICATIONS FRONT ENDS
IS IDENTICAL TO THAT FOR THE CONSOLE FRONT END. ^THE ^^OPR.ATO\\
SUBJOB:
.B;.LM5;.NF;.NJ
:^^SLOG
:DEF DTE=
DTE-R DTELDR
DTE-/AUTO\\
.B;.LM0;.F;.J
WILL AUTOMATICALLY RELOAD ANY FRONT END THAT CRASHES.
.B
^IF THE AUTO-LOAD FEATURE IS NOT IN EFFECT, YOU CAN RUN
^^DTELDR\\ FROM ANY TERMINAL LOGGED IN UNDER [1,2] AND
HAVE A CHOICE OF RESTART PROCEDURES.
.PG
.B;.LM5;.TS25;.NF;.NJ
_.^^R DTELDR\\	;RUN ^^DTELDR\\
.B
*/^^RELOAD\\:2	;RELOAD THE FRONT END ON ^D^T^E 2 WITH THE
	;PROGRAM IN FILE ^^DSK:DTEL02:BIN\\ (DEFAULT
	;NAME)
.B;.I-5
OR:
.B
*^^DTA3:COMSYS.BIN/RELOAD:1/NODUMP\\
	;RELOAD THE FRONT END ON ^D^T^E 1 WITH THE FILE
	;^^COMSYS.BIN\\ ON #^^DEC\\TAPE DRIVE 3. ^DO NOT TAKE
	;A FRONT-END MEMORY DUMP.
.B;.LM0;.F;.J
^A COMPLETE DESCRIPTION OF THE ^^DTELDR\\ PROGRAM SWITCHES WILL BE
TYPED AT YOUR CONSOLE IF YOU ANSWER THE ^^DTELDR\\ PROMPT WITH:
.B;.I5
*/^^HELP\\
.HL 2 ^&^D^L10-INTERFACED COMMUNICATIONS FRONT ENDS\&\\
\\^WHENEVER A ^D^L10-INTERFACED FRONT END SUCH AS A ^^DC75NP,
DN85, \\OR ^D^N87 CRASHES, AN ERROR MESSAGE SUCH AS:
.B;.I5
%%^^PDP-11 NUMBER \\N ^^IS NOT RUNNING\\
.B
OR:
.B;.I5
%%^^PDP-11 NUMBER \\N ^^IS HALTED AT\\ PC
.B
WILL APPEAR ON YOUR CONSOLE. N IS THE PORT NUMBER: 0-3 FOR
THE FIRST ^D^L10 AND 4-7 FOR THE SECOND, IF ANY. PC IS THE
ADDRESS OF THE HALT IN THE ^^PDP\\-11.
.B
^THE PROGRAM TO DUMP AND LOAD A ^D^L10 IS ^^BOOT\\11 AND YOUR
SYSTEM PROGRAMMER WILL USUALLY HAVE MADE THIS AVAILABLE ON
THE ^S^Y^S: AREA. ^THE FOLLOWING COMMAND SEQUENCE CAN BE USED TO DUMP AND
RELOAD ^D^L10-INTERFACED FRONT ENDS.
.B;.LM5;.TS25;.NF;.NJ
_.^^R BOOT\\11	;LOAD IN ^^BOOT\\11
.B
^^FILE:/DUMP/PORTN0\\:P	;DUMP ENTIRE MEMORY OF THE ^^PDP\\-11 ON PORT P.
.B
^^FILE:DN87.BIN/CLEAR/START/PORTNO:\\P
	;CLEAR MEMORY OF ^P^D^P-11 ON PORT P AND LOAD
	;AND START THE PROGRAM FROM THE FILE
	;^^DSK:DN87.BIN\\[1,2].
.B;.LM0;.F;.J
^^BOOT\\11 REQUIRES THAT A PORT NUMBER BE EXPLICITLY ENTERED
IF THERE IS MORE THAN ONE PORT IN THE SYSTEM.
.B;.PS69,70
^THE DEFAULT FILE DESCRIPTOR FOR A LOAD OPERATION IS:
.B;.I5
^^DSK:PDPXI\\P.^B^I^N[SELF]
.B
AND FOR A DUMP OPERATION:
.B;.I5
^^DSK:PDPXI\\P.^L^S^T[SELF]
.B
WHERE P IS THE PORT NUMBER.
.B
^FOR ADDITIONAL INFORMATION ON ^^BOOT\\11 SWITCHES REFER TO THE
^^BOOT\\11 SPECIFICATION IN THE ^SOFTWARE ^NOTEBOOKS AND THE
^^SYS:BOOT11.HLP\\ FILE.
.B
^^BOOT\\11 REPORTS ITS PROGRESS AS FOLLOWS:
.PG
.B;.LM20;.TS20;.I-20
"^^PDP-11 DUMPING	PDP\\-11 MEMORY IS BEING DUMPED
.I-20
"^^PDP-11 DUMPED\\	INTO A ^D^E^CSYSTEM-10 FILE.
.B;.I-20
"^^CLEARING PDP-11	PDP\\-11 MEMORY IS BEING ZEROED.
.B;.I-20
"^^PDP-11 LOADING	PDP\\-11 IS BEING LOADED WITH FORMATTED BINARY
INPUT FILE DATA.
.B;.I-20
"^^PDP-11 LOADED\\	^LOADING IS COMPLETE; ^P^D^P-11 IS
.I-20
"^^PDP-11 STARTED\\	NOW EXECUTING IN ITS OWN MEMORY.
.LM0
.HL 1 ^&DX10 DATA CHANNEL RECOVERY\&\\
\\^THE ^D^X10 DATA CHANNEL PROVIDES DIRECT ACCESS TO THE
^D^E^CSYSTEM-10 MEMORY AND IS AN INTEGRATED PART OF THE ^T^U70
SERIES MAGNETIC TAPE SYSTEMS. ^THE ^D^X10 CONTAINS A
^P^D^P-8 AND YOU MUST LOAD OR RELOAD THIS PROCESSOR WHENEVER
YOU FIRST POWER UP THE CHANNEL OR AFTER FIELD SERVICE
MAINTENANCE HAS BEEN PERFORMED. ^THE ^^KL\\ PROCESSOR WILL USUALLY RELOAD
THE ^^DX\\10 AUTOMATICALLY AFTER A CRASH.
.B
^IF PROBLEMS ARISE AND THE ^^PDP-8\\ SHOULD HALT, YOU WILL RECEIVE
A MESSAGE:
.B;.I5
%%^^TAPE CONTROLLER MT\\X ^^IS OFF-LINE\\
.B
WHERE X SPECIFIES THE CONTROLLER ATTACHED TO THE DATA CHANNEL,
E.G., ^M^T^A, ^M^T^B.
.B
^FIRST, YOU SHOULD TAKE A DUMP TO RECORD THE ERROR CONDITIONS.
^USE THE ^^BOOTDX\\ PROGRAM AS FOLLOWS:
.B;.LM5;.TS25;.NF;.NJ
_.^^R BOOTDX\\	;LOAD ^^BOOTDX\\
^^FILE:/D\\	;REQUEST A DUMP
.B;.LM0;.F;.J
^IF A FILE DESCRIPTOR IS OMITTED AS IN THE ABOVE EXAMPLE, THE
DUMP OF ^^PDP\\-8 MEMORY WILL BE PLACED INTO A DEFAULT FILE, 
^^DXMPA.LSD\\, ON YOUR DISK AREA. ^FOR ADDITIONAL INFORMATION
ON THE ^^BOOTDX\\ PROGRAM, REFER TO THE FILES ^^BOOTDX.RNO\\ AND
^^BOOTDX.HLP\\.
.B
^DURING THE DUMP OPERATION YOU WILL RECEIVE THE FOLLOWING
MESSAGES ON THE ^C^T^Y:
.B;.LM5;.TS25
"^D^X10 DUMPING	;^^PDP\\-8 MEMORY IS BEING DUMPED
.B
"^D^X-10 DUMPED	;DUMPING HAS COMPLETED
.B;.LM0
^YOU CAN NOW RELOAD THE ^D^X10 DATA CHANNEL USING ^^BOOTDX\\
AS FOLLOWS:
.B;.LM5;.TS25;.NF;.NJ
_.^^R BOOTDX\\	;IF NOT ALREADY LOADED
^^FILE:SYS:/C/S\\	;LOAD THE DEFAULT FILE ^^DXMPA.BIN\\ FROM THE
	;SYSTEM DISK# AFTER# SETTING ALL OF ^^PDP\\-8
	;MEMORY TO ^^HALT\\ INSTRUCTIONS. ^THEN START AT
	;OCTAL 200.
.B;.LM0;.F;.J
^DURING THE CLEARING AND LOADING, YOU WILL RECEIVE THE FOLLOWING
MESSAGES AT THE ^T^T^Y:
.B;.LM5;.TS25;.NF;.NJ
"^CLEARING ^D^X-10	;^^PDP\\-8 MEMORY IS BEING SET TO ALL ^^HALT\\S.
.B
"^D^X-10 LOADING	;^^PDP\\-8 IS BEING LOADED.
.B
"^D^X-10 LOADED	;^^PDP\\-8 HAS COMPLETED LOADING.
.B
"^D^X-10 STARTED	;^^PDP\\-8 IS NOW EXECUTING IN ITS OWN MEMORY.
.LM0;.F;.J
.PS67,70;.LM0;.RM70;.F;.J
.NUMBER CHAPTER 7
.CH ^&DEVICE OPERATION\&\\
\\^IT IS IMPORTANT THAT YOU KNOW HOW TO OPERATE THE PERIPHERAL
DEVICES ON YOUR SYSTEM AND HOW TO KEEP THESE DEVICES IN THEIR
BEST POSSIBLE CONDITION.
.B
^BECAUSE MOST EQUIPMENT OPERATES MORE EFFICIENTLY IF IT IS
KEPT CLEAN, A CLEANING PROCEDURE IS INCLUDED WITH EACH DEVICE SECTION.
^THIS CHAPTER DISCUSSES THE OPERATING AND CLEANING PROCEDURES FOR THOSE
DEVICES MOST COMMONLY FOUND ON ^^DEC\\SYSTEM-10S.
.B
^HERE ARE SOME GENERAL
RULES FOR CLEANING:
.B
^THE COMPUTER ROOM SHOULD BE KEPT AS NEAT AND CLEAN
AS POSSIBLE. ^YOU SHOULD HAVE THE FOLLOWING CLEANING
SUPPLIES AVAILABLE.
.LS
.LE;91% ISOPROPYL ALCOHOL
.LE;^LINT-FREE WIPERS
.LE;^SPRAY CLEANER
.LE;^VACUUM CLEANER
THAT CAN BLOW AIR AS WELL AS INTAKE AIR AND HAS RUBBER OR PLASTIC ATTACHMENTS
.LE;^COTTON-TIPPED APPLICATORS
.ELS
^YOU SHOULD CLEAN THE EXTERIOR OF ALL EQUIPMENT WEEKLY.
^VACUUM ALL OUTSIDE SURFACES INCLUDING CABINET TOPS. ^USE SPRAY
CLEANER ON ALL VERTICALLY EXPOSED SURFACES EXCEPT AROUND SWITCHES.
.B
^IN GENERAL, DO NOT CLEAN THE INTERIOR OF ANY EQUIPMENT
UNLESS SO DIRECTED IN THE FOLLOWING SECTIONS. ^YOUR FIELD SERVICE
REPRESENTATIVE DOES THAT JOB. ^SPECIFIC INSTRUCTIONS FOR CLEANING LINE PRINTERS
AND MAGNETIC TAPE DRIVES ARE GIVEN IN THE SECTIONS
COVERING THOSE DEVICES.
.B
^ALWAYS BE CAREFUL NOT TO BUMP OR CHANGE THE POSITION OF ANY
SWITCHES; THIS COULD CAUSE A CRASH. 
^LIKEWISE, WHEN YOU ARE CLEANING THE EXTERIOR OF ANY DISK DRIVES,
BE CAREFUL NOT TO JAR THE EQUIPMENT; THIS COULD CAUSE A
SERIOUS HARDWARE HEAD CRASH.
.B;.PS69,70
^LASTLY, IF YOU EVER HAVE ANY PROBLEM OR DOUBTS CONCERNING
THE OPERATION OF OR A CLEANING PROCEDURE FOR A DEVICE, CONSULT YOUR FIELD
SERVICE REPRESENTATIVE.
.HL1 ^&LINE PRINTER\&\\
\\^SOME OF THE PROCEDURES BELOW REFER TO AN ^^LP\\07 LINE PRINTER (^FIGURE 7-1)
AND SOME REFER TO AN ^^LP10\\ LINE PRINTER (^FIGURE 7-2). ^BE SURE
TO FOLLOW THE PROCEDURES FOR THE APPROPRIATE PRINTER.
.PG;.PS67,70
.FG60
.C
^FIGURE 7-1 ^^LP\\07 ^LINE ^PRINTER
.PG;.FG60
.C
^FIGURE 7-2 ^^LP\\10 ^LINE ^PRINTER
.PG
.HL 2 ^&CHANGING FORMS\&\\
\\^^LP\\07 ^PROCEDURE
.B
^THE FOLLOWING PROCEDURE DESCRIBES FORMS INSTALLATION, ALIGNMENT, AND
ADJUSTMENT ON AN ^^LP\\07 LINE PRINTER. (^REFER TO ^FIGURES 7-1, 
7-3, AND 7-4.)
.LS;.LE;^IF THE PRINTER IS RUNNING, PRESS THE ^^START/STOP\\ SWITCH
TO PLACE THE PRINTER IN ^^STOP\\ MODE (^^RUN\\ INDICATOR NOT LIT).
.LE;^LIFT THE PRINTER WINDOW.
.LE;^UNLATCH AND FULLY OPEN THE BAND GATE AND RIBBON MASK.
.NT ^^WARNING\\
^WAIT UNTIL THE ^CHARABAND STOPS ROTATING BEFORE PROCEEDING TO THE
NEXT STEP.
.EN
.LE;^IF NECESSARY, REPOSITION THE UPPER AND LOWER LEFT FORMS
TRACTORS. ^MAKE SURE THAT THEY ARE STILL VERTICALLY ALIGNED.
.LE;^UNLOCK THE UPPER AND LOWER TRACTOR LOCKS ON THE RIGHT TRACTORS.
.LE;^OPEN ALL TRACTOR PRESSURE PLATES.
.LE;^INSERT THE LEFT EDGE OF THE FORM IN THE UPPER LEFT TRACTOR
AND CLOSE THE PRESSURE PLATE.
.LE;^SLIDE THE UPPER RIGHT TRACTOR TO A POSITION BENEATH THE RIGHT
HAND FORM FEED HOLES AND CLOSE THE PRESSURE PLATE. ^LOCK THE
UPPER RIGHT TRACTOR.
.LE;^LOOSEN THE PAPER TENSION CONTROL LOCK AND SET THE PAPER
TENSION CONTROL TO ITS EXTREME COUNTERCLOCKWISE POSITION (LEAST
TENSION).
.LE;^INSERT FORM IN THE LOWER LEFT TRACTOR AND CLOSE THE PRESSURE
PLATE.
.LE;^SLIDE THE LOWER RIGHT TRACTOR TO A POSITION BENEATH THE RIGHT
HAND FORM FEED HOLES AND CLOSE THE PRESSURE PLATE. ^LOCK THE LOWER
RIGHT TRACTOR.
.LE;^ADJUST THE PAPER TENSION CONTROL CLOCKWISE TO ACHIEVE PROPER
VERTICAL FORM TENSION. ^PROPER TENSION OCCURS WHEN THERE IS A SLIGHT
DEFORMATION OF THE TOP EDGE OF THE FORM FEED HOLES. ^TIGHTEN THE
PAPER TENSION LOCK.
.LE;^PRESS THE ^^TOP OF FORM\\ SWITCH ON THE OPERATOR CONTROL PANEL.
.LE;^ROTATE THE PAPER FEED CLUTCH CLOCKWISE TO THE ^^ADJ\\ POSITION
AND USE THE PAPER ADVANCE ADJUSTMENT CONTROL TO POSITION THE
FORM AT THE FIRST LINE OF PRINT. ^USE THE HAMMER FACES AS A PRINT-LINE
GUIDE. ^RETURN THE CLUTCH TO THE ^^RUN\\ POSITION.
.B
^YOU CAN USE THE VERTICAL PAPER POSITION CONTROL TO OBTAIN A FINE
ADJUSTMENT OF VERTICAL POSITION. ^THIS IS OFTEN NECESSARY WHEN USING
PRE-PRINTED FORMS.
.LE;^CLOSE AND LATCH THE RIBBON MASK.
.LE;^ROTATE THE HORIZONTAL PAPER POSITION CONTROL TO ALIGN THE FORM
HORIZONTALLY; USE THE HORIZONTAL FORMS ALIGNMENT SCALE ON THE
RIBBON MASK ASSEMBLY FOR REFERENCE.
.LE;^SET THE THICKNESS CONTROL TO MATCH THE FORM BEING LOADED.
.LE;^CLOSE THE BAND GATE AND PRINTER WINDOW.
.LE;^PRESS THE ^^TOP OF FORM\\ SWITCH SEVERAL TIMES TO ENSURE THAT
THE FORM IS FEEDING CORRECTLY THROUGH THE TRACTORS.
.LE;^PRESS THE ^^START/STOP\\ SWITCH TO PLACE THE PRINTER IN ^^RUN\\
MODE (^^RUN\\ INDICATOR LIT).
.ELS
^REPLENISHING ^FORMS
.B
^IF YOU ARE MERELY REPLENISHING THE FORM SUPPLY AND NOT CHANGING
TO A DIFFERENT FORM, PROCEED AS FOLLOWS:
.LS;.LE;^LIFT THE PRINTER WINDOW.
.LE;^UNLATCH AND FULLY OPEN THE BAND GATE AND RIBBON MASK.
.NT ^^WARNING\\
^WAIT UNTIL THE ^CHARABAND STOPS ROTATING BEFORE PROCEEDING TO THE NEXT STEP.
.EN
.LM9
.LE;^OPEN ALL TRACTOR PRESSURE PLATES.
.LE;^INSERT THE NEW FORM, OVERLAPPING THE OLD ONE BY AT LEAST ONE PAGE
AND ALIGNING THE TWO AT THE PAGE PERFORATIONS. ^CLOSE ALL TRACTOR
PRESSURE PLATES.
.LE;^CLOSE AND LATCH THE RIBBON MASK.
.LE;^CLOSE THE BAND GATE AND PRINTER WINDOW.
.LE;^PRESS THE ^^START/STOP\\ SWITCH TO PLACE THE PRINTER IN ^^RUN\\ MODE (^^RUN\\ INDICATOR LIT).
.ELS
.PG
.FG60
.C
^FIGURE 7-3 ^^LP\\07 ^PAPER ^INSTALLATION
.PG;.FG60
.C
^FIGURE 7-4 ^^LP\\07 ^FORMS ^ALIGNMENT
.PG
^^LP10 P\\ROCEDURE
.B
^THE FOLLOWING PROCEDURE DESCRIBES FORMS INSTALLATION, ALIGNMENT,
AND ADJUSTMENT ON AN ^^LP10\\ LINE PRINTER. (^REFER TO ^FIGURES 7-2 AND 7-5.)
.LS;.LE;^PRESS THE ^^ON/OFF LINE\\ SWITCH TO SET THE PRINTER OFF LINE
(^^ON LINE\\ INDICATOR NOT LIT).
.LE;^LIFT THE PRINTER WINDOW.
.LE;^USING THE DRUM GATE LATCH, UNLATCH AND FULLY OPEN THE DRUM GATE.
.NT ^^WARNING\\
^WAIT FOR THE CHARACTER DRUM TO STOP ROTATING BEFORE YOU PROCEED.
.EN
.LE;^BE SURE THAT THE PROPER VERTICAL FORMAT TAPE HAS BEEN MOUNTED
ON THE VERTICAL FORMAT UNIT (REFER TO ^SECTION 7.1.2).
.LE;^PRESS THE ^^TOP-OF-FORM\\ SWITCH.
.LE;^SET THE COPIES CONTROL LEVER TO MATCH THE FORM BEING USED.
.LE;^BE SURE THE UPPER AND LOWER LEFT TRACTORS ARE VERTICALLY ALIGNED.
.LE;^ROTATE THE FINE ADJUSTMENT THUMBWHEELS COMPLETELY CLOCKWISE ON
BOTH THE UPPER AND LOWER RIGHT TRACTORS.
.LE;^UNLOCK THE UPPER AND LOWER TRACTER LOCKS ON THE RIGHT TRACTORS AND
MOVE THEM TO THE EXTREME RIGHT.
.LE;^OPEN ALL TRACTOR PRESSURE PLATES.
.LE;^PLACE THE LEFT EDGE OF THE FORM IN THE UPPER LEFT TRACTOR AND CLOSE THE
PRESSURE PLATE.
.LE;^POSITION THE UPPER RIGHT TRACTOR TO ALLOW PRECISE ALIGNMENT OF THE TRACTOR
FEED PINS TO THE FORM-FEED HOLES IN THE FORM. ^LOCK THE UPPER RIGHT TRACTOR
AND CLOSE THE TRACTOR PRESSURE PLATE OVER THE FORM.
.PG;.FG60;.C
^FIGURE 7-5 ^^LP\\10 ^PAPER ^INSTALLATION
.PG
.LM9
.LE;^LOOSEN THE PAPER TENSION LOCKING KNOB AND TURN THE PAPER TENSION
CONTROL KNOB COMPLETELY COUNTERCLOCKWISE.
.LE;^PLACE THE FORM IN THE LOWER LEFT TRACTOR AND CLOSE THE PRESSURE
PLATE.
.LE;^POSITION THE LOWER RIGHT TRACTOR TO ALLOW PRECISE ALIGNMENT OF
THE TRACTOR FEED PINS TO THE FORM-FEED HOLES IN THE FORM. ^LOCK THE
LOWER RIGHT TRACTOR, AND CLOSE THE TRACTOR PRESSURE PLATE.
.LE;^TURN THE PAPER TENSION CONTROL KNOB CLOCKWISE UNTIL THE PROPER
PAPER TENSION EXISTS; THIS OCCURS WHEN A SLIGHT DEFORMATION OF THE TOP EDGE
OF THE FORM-FEED HOLES IN THE FORM IS NOTICED. ^TIGHTEN THE PAPER
TENSION LOCKING KNOB.
.LE;^ROTATE THE FINE ADJUSTMENT THUMBWHEEL ON BOTH THE UPPER AND
LOWER RIGHT TRACTORS UNTIL PROPER HORIZONTAL PAPER TENSION EXISTS.
^THE TENSION IS CORRECT WHEN THERE IS A SLIGHT DEFORMATION OF THE
RIGHT EDGE OF THE FORM-FEED HOLES IN THE FORM.
.LE;^MOUNT THE FORMS ALIGNMENT SCALE (LOCATED IN THE PAPER STORAGE
AREA, RIGHT SIDE) ACROSS THE HAMMER BANK AREA USING THE DOWEL PINS
LOCATED ON SPECIAL CASTINGS AT BOTH SIDES OF THE HAMMER BANK.
.LE;^USING THE HORIZONTAL PAPER POSITION THUMBWHEEL, MOVE THE FORM
HORIZONTALLY UNTIL THE FIRST PRINT COLUMN ON THE FORM CORRESPONDS
TO THE FIRST COLUMN ON THE FORMS ALIGNMENT SCALE.
.LE;^MOVE THE PAPER FEED CLUTCH LEVER (LOCATED TO THE RIGHT OF THE
VERTICAL FORMAT UNIT) TO THE ^^ADJUST\\ POSITION. ^USING THE PAPER DRIVE
ADJUSTMENT THUMBWHEEL, ADJUST THE FORM VERTICALLY UNTIL THE FIRST
PRINT LINE OF THE FORM IS ALIGNED WITH THE FORMS ALIGNMENT SCALE
PRINT LINE.
.LE;^REMOVE THE FORMS ALIGNMENT SCALE, AND REPLACE IT IN THE
SCABBARD (PAPER STORAGE AREA, RIGHT SIDE).
.LE;^MOVE THE PAPER FEED CLUTCH LEVER TO THE ^^RUN\\ POSITION.
.LE;^CLOSE AND LATCH THE DRUM GATE.
.LE;^CLOSE THE PRINTER WINDOW.
.LE;^CHECK THE PAPER TENSION BY PRESSING THE ^^TOP-OF-FORM\\
SWITCH SEVERAL TIMES AND ENSURING THAT THE PAPER DOES NOT PULL LOOSE
FROM THE TRACTOR FEED PINS.
.LE;^PRESS THE ^^ON/OFF LINE\\ SWITCH TO SET THE PRINTER ON-LINE
(^^ON LINE\\ INDICATOR LIT).
.ELS
^REPLENISHING ^FORMS
.B
^IF YOU ARE MERELY REPLENISHING FORMS AND NOT CHANGING TO A DIFFERENT
FORM, PROCEED AS FOLLOWS:
.PG
.LS;.LE;^LIFT THE PRINTER WINDOW.
.LE;^USING THE DRUM GATE LATCH, UNLATCH AND FULLY OPEN THE DRUM GATE.
.NT ^^WARNING\\
^WAIT FOR THE CHARACTER DRUM TO STOP ROTATING BEFORE YOU PROCEED.
.EN
.LM9
.LE;^OPEN ALL TRACTOR PRESSURE PLATES.
.LE;^INSERT THE NEW FORM, OVERLAPPING THE OLD ONE BY AT LEAST ONE PAGE
AND ALIGNING THE TWO AT THE PAGE PERFORATIONS. ^CLOSE ALL TRACTOR
PRESSURE PLATES.
.LE;^CLOSE AND LATCH THE DRUM GATE.
.LE;^CLOSE THE PRINTER WINDOW.
.LE;^PRESS THE ^^ON/OFF LINE\\ SWITCH TO SET THE PRINTER ON-LINE
(^^ON LINE\\ INDICATOR LIT).
.ELS
.HL 2 ^&CONTROLLING \\THE ^VERTICAL ^FORMAT ^UNIT\\\&
.B
\\^^LP07\\ ^PROCEDURE
.B
\\^THE ^^LP\\07 LINE PRINTER HAS A DIRECT ACCESS VERTICAL FORMAT
UNIT (^^DAVFU)\\ THAT IS THE SOFTWARE COUNTERPART OF A CARRIAGE
CONTROL TAPE. ^THE DIRECT ACCESS VERTICAL FORMAT UNIT IS LOADED WITH A
FILE CONTAINING AN 8-CHANNEL BY 143-LINE BIT MATRIX. ^THE ^^ON\\
BITS IN THIS MATRIX REPRESENT THE PUNCHED HOLES IN THE CORRESPONDING
PAPER CARRIAGE CONTROL TAPE.
.B
^THE ^^LP\\07 PRINTER ALSO PROVIDES FOR THE SOFTWARE CONTROL OF THE PRINT
DENSITY (6 OR 8 LINES PER INCH) AS WELL AS FOR OPERATOR CONTROL VIA
A SWITCH.
.B
^INFORMATION ON THE GENERATING, STORING, AND LOADING OF ^^DAVFU\\
MATRICES IS CONTAINED IN THE FILES: ^^MAKVFU.DOC\\ AND
^^MAKVFU.HLP\\.
.B
^TO GENERATE A DEFAULT MATRIX THAT CORRESPONDS TO CHANNELS 1-8 OF
THE STANDARD LINE PRINTER CARRIAGE TAPE FOR THE ^^LP\\10, PROCEED
AS FOLLOWS:
.B;.LM30;.TS30;.I-30
_.^^R MAKVFU\\	^LOAD THE ^^MAKVFU\\ PROGRAM.
.I-30
*^^OUTPUT\\	^IF THIS IS THE ONLY COMMAND, THE DEFAULT MATRIX
IS GENERATED AND IS STORED AS ^^DSK:NORMAL.VFU\\ ON YOUR DISK AREA.
.I-30
*^^EXIT	R\\ETURN TO THE MONITOR.
.I-30
_.
.B;.LM0
^TO GENERATE A CUSTOM MATRIX, LOAD ^^MAKVFU\\ AND GIVE THE APPROPRIATE ^^MAKVFU\\
COMMANDS AS DESCRIBED BELOW.
.PG
.B2;.TS5,50
	^COMMAND	^FUNCTION
.BR
	-------	--------
.BR
.B2;.LM30;.TS30;.I-30
^^CHANNEL\\ N ^^ALL\\	^SET ALL LINES IN LOGICAL PAGE FOR CHANNEL N.
(N = 1,2,...8)
.B;.I-30
^^CHANNEL\\ N ^^BOTTOM\\	^SET LAST LINE IN LOGICAL PAGE FOR CHANNEL N.
(N = 1,2,...8)
.B;.TS30;.I-30
^^CHANNEL\\ N ^^EVERY\\ M	^SET EVERY M-TH LINE IN PHYSICAL PAGE
FOR CHANNEL N. (N = 1,2,...8) (M = 1,2,...LENGTH)
.B;.I-30
^^CHANNEL\\ N ^^LINES\\ M1 M2 ...	^SET LINES M1, M2, ETC. IN PHYSICAL PAGE
FOR CHANNEL N. (N = 1,2,...8) (M1 M2... = 1,2,...LENGTH)
.B;.I-30
^^CHANNEL\\ N ^^TOP\\	^SET LINE 1 IN PHYSICAL PAGE FOR CHANNEL N.
(N = 1,2,...8)
.B;.I-30
^^EXIT\\	^EXIT FROM ^^MAKVFU\\.
.B;.I-30
^^FORMS\\	^CLEAR ALL FORMS BREAK CHANNELS.
.B;.I-30
^^FORMS\\ N	^DEFINE FORMS BREAK FOR CHANNEL N.
.B;.I-30
^^HELP\\	^DISPLAY THIS FILE ON THE TERMINAL.
.B;.I-30
^^INFORMATION\\	^DISPLAY A BRIEF DESCRIPTION OF THE ^^VFU\\ FILE,
INCLUDING LENGTH, PAGE SIZE, FORMS BREAK, AND ^^LPI\\ SETTING.
.B;.I-30
^^INFORMATION\\ N	^DISPLAY A DESCRIPTION OF THE LINES DEFINED
FOR CHANNEL N.
.B;.I-30
^^LENGTH\\ X	^DEFINE THE PHYSICAL PAGE SIZE TO BE X. (X = 1 - 143).
^LENGTH MUST BE GREATER THAN OR EQUAL TO PAGE SIZE.
.B;.I-30
^^LPI\\ Y	^DEFINE THE PRINT DENSITY (LINES PER INCH). (Y = 0, 6, OR 8
WHERE 0 MEANS MANUAL SWITCH SETTING.)
.B;.I-30
^^OUTPUT\\ DEV:FILE.EXT[P,PN]	^GENERATE A BINARY ^^VFU\\ FILE WITH THE SPECIFIED NAME.
^IF THE ARGUMENT IS OMITTED, THE DEFAULT IS ^^DSK:NORMAL.VFU\\ ON USER AREA.
.B;.I-30
^^PAGE\\ Z	^DEFINE THE LOGICAL PAGE SIZE TO BE Z. (Z = 1 - 143.)
^PAGE SIZE MUST BE LESS THAN OR EQUAL TO LENGTH.
.B;.LM0
^THE AUTOMATIC LOADING OF AN APPROPRIATE ^^DAVFU\\ FILE IS DISCUSSED
UNDER ^^LPTSPL\\ IN ^SECTION 4.5.1.
.B
^^LP10 P\\ROCEDURE
.B;.PS69,70
^TO MAKE A STANDARD CARRIAGE CONTROL TAPE FOR VERTICAL FORMAT CONTROL
OF 11 INCH PAPER WITH SIX LINES OF PRINTING PER INCH, DO THE FOLLOWING:
.LS;.LE;^OBTAIN A MANUAL- OR MACHINE-OPERATED PUNCH MADE TO PUNCH 12 CHANNEL CARRIAGE
CONTROL TAPES.
.LE;^OBTAIN A CARRIAGE CONTROL TAPE WITH FEED HOLES, CHANNELS NUMBERED
1 THROUGH 12, AND LINES NUMBERED 0 TO AT LEAST 135. ^IN THIS CASE,
THE TAPE LOOP ACCOMMODATES TWO FORMS.
.LE;^ALIGN THE TAPE IN THE PUNCH, SO THAT YOU BEGIN PUNCHING IN LINE 0.
.LE;^USING ^TABLE 7-1 AS A GUIDE, PROCEED LINE BY LINE ON THE TAPE,
AND PUNCH A HOLE FOR EACH OF THE CHANNELS INDICATED ON A LINE.
.B3.LM0;.PS67,70
.C
^TABLE 7-1
.C
^STANDARD ^L^P10 ^LINE ^PRINTER ^CARRIAGE ^TAPE
.B2;.LM40;.TS18,40;.I-38
^FORM 1	^FORM 2
.I-38
^LINE	^LINE	^CHANNELS ^PUNCHED
.TS20,40
.B2
.I-36
00	66	1-2-3-4-5-6-7-8-9-10-11-12
.I-36
01	67	5-8
.I-36
02	68	3-5-8
.B
.I-36
03	69	4-5-8
.I-36
04	70	3-5-8
.I-36
05	71	5-8-9
.B
.I-36
06	72	3-4-5-8
.I-36
07	73	5-8
.I-36
08	74	3-5-8
.B
.I-36
09	75	4-5-8
.I-36
10	76	3-5-6-8-9
.I-36
11	77	5-8
.B
.I-36
12	78	3-4-5-8
.I-36
13	79	5-8
.I-36
14	80	3-5-8
.B
.I-36
15	81	4-5-8-9-10
.I-36
16	82	3-5-8
.I-36
17	83	5-8
.B
.I-36
18	84	3-4-5-8
.I-36
19	85	5-8
.I-36
20	86	3-5-6-7-8-9
.B
.I-36
21	87	4-5-8
.I-36
22	88	3-5-8
.I-36
23	89	5-8
.B
.I-36
24	90	3-4-5-8
.I-36
25	91	5-8-9-11
.I-36
26	92	3-5-8
.B
.I-36
27	93	4-5-8
.I-36
28	94	3-5-8
.I-36
29	95	5-8
.B
.I-36
30	96	2-3-4-5-6-8-9-10
.I-36
31	97	5-8
.I-36
32	98	3-5-8
.PG
.C
^TABLE 7-1 (^CONT.)
.C
^STANDARD ^L^P10 ^LINE ^PRINTER ^CARRIAGE ^TAPE
.B2;.LM40;.TS18,40;.I-38
^FORM 1	^FORM 2
.I-38
^LINE	^LINE	^CHANNELS ^PUNCHED
.TS20,40
.B2
.I-36
33	99	4-5-8
.I-36
34	100	3-5-8
.I-36
35	101	5-8-9
.B
.I-36
36	102	3-4-5-8
.I-36
37	103	5-8
.I-36
38	104	3-5-8
.B
.I-36
39	105	4-5-8
.I-36
40	106	3-5-6-7-8-9-12
.I-36
41	107	5-8
.B;.TS20,40
.I-36
42	108	3-4-5-8
.I-36
43	109	5-8
.I-36
44	110	3-5-8
.B
.I-36
45	111	4-5-8-9-10
.I-36
46	112	3-5-8
.I-36
47	113	5-8
.B
.I-36
48	114	3-4-5-8
.I-36
49	115	5-8
.I-36
50	116	3-5-6-8-9-11
.B
.I-36
51	117	4-5-8
.I-36
52	118	3-5-8
.I-36
53	119	5-8
.B
.I-36
54	120	3-4-5-8
.I-36
55	121	5-8-9
.I-36
56	122	3-5-8
.B
.I-36
57	123	4-5-8
.I-36
58	124	3-5-8
.I-36
59	125	5-8
.B
.I-36
60	126	5
.I-36
61	127	5
.I-36
62	128	5
.B
.I-36
63	129	5
.I-36
64	130	5
.I-36
65	131	5
.PG;.PS67,70
.LM9
.LE;^AFTER YOU HAVE PUNCHED ALL THE LINES THROUGH 131,
CUT THE TAPE AT LINE 135. ^SPREAD SOME RUBBER CEMENT BETWEEN
LINES 129 AND 135. ^PLACE LINE 0 OVER LINE 132. ^KEEPING
THE FEED HOLES ALIGNED, PRESS THE ENDS OF THE TAPE TOGETHER.
.LE;^REPUNCH THE HOLES COVERED BY THE OVERLAPPED TAPE.
.LE;^SET THE PRINTER OFF-LINE, AND OPEN
THE PRINTER COVER.
.LE;^LIFT THE TAPE LOOP READER HANDLE SO THAT THE SPROCKET SHOE
CLEARS THE SPROCKET TEETH.
.LE;^PLACE THE TAPE OVER THE TAPE LOOP READER CAPSTAN SO THAT THE FEED
HOLES ARE OVER THE SPROCKET TEETH. ^BE SURE THAT CHANNEL 12 OF THE
TAPE IS TOWARD YOUR LEFT AS YOU ARE FACING THE FRONT OF THE LINE
PRINTER.
.LE;^CLOSE THE TAPE LOOP READER. ^BE SURE THE TAPE STAYS ATTACHED TO THE
DRIVE SPROCKET WHILE YOU CLAMP THE DRIVE SPROCKET SHOE IN PLACE.
.LE;^PRESS ^^TOP-OF-FORM\\. ^THE TAPE SHOULD HALT WITH THE CHANNEL 1 STAR
WHEEL JUST BEYOND THE ^^TOP-OF-FORM\\ HOLE.
.LE;^ALIGN FORMS VERTICALLY. (^REFER TO ^SECTION 7.1.1.)
.LE;^CLOSE THE PRINTER COVER.
.ELS
^THE STANDARD ^^LP\\10 CARRIAGE TAPE CAUSES THE VERTICAL ACTIONS SHOWN IN ^TABLE 7-2. ^CHANNELS 
1-8 ARE USED BY SYSTEM SOFTWARE, AND CHANNELS 9-12 ARE USED BY DIAGNOSTIC PROGRAMS.
.PG
.C
^TABLE 7-2
.C
^STANDARD ^^LP\\10 ^LINE ^PRINTER ^VERTICAL ^ACTION
.B2;.LM20;.RM68;.TS20;.I-15
^CHANNEL	^VERTICAL ^ACTION
.B2;.I-12
   1	^TOP OF FORM
.B;.I-12
   2	^SPACE HALF A PAGE (30 LINES)
.B;.I-12
   3	^DOUBLE SPACE WITH AUTOMATIC TOP OF FORM AFTER 30 IMPRESSIONS
.B;.I-12
   4	^TRIPLE SPACE WITH AUTOMATIC TOP OF FORM AFTER 20 IMPRESSIONS
.B;.I-12
   5	^SINGLE SPACE (^CHANNEL 5 IS THE ONLY CHANNEL THAT CAN BE SPECIFIED
FOR THE LAST 6 LINES OF THE PAGE.)
.B;.I-12
   6	^SPACE ONE SIXTH OF A PAGE (10 LINES)
.B;.I-12
   7	^SPACE ONE THIRD OF A PAGE (20 LINES)
.B;.I-12
   8	^SINGLE SPACE WITH AUTOMATIC TOP OF FORM AFTER 60 IMPRESSIONS
.B;.I-12
   9	^SPACE ONE TWELFTH OF A PAGE (5 LINES)
.B;.I-12
   10	^SPACE ONE FOURTH OF A PAGE (15 LINES)
.B;.I-12
   11	^SPACE 25 LINES
.B;.I-12
   12	^SPACE 40 LINES
.B2;.LM0;.RM70;.PS67,70;.F;.J
^A PROGRAMMER WANTING A NONSTANDARD CARRIAGE CONTROL TAPE
MUST TELL YOU WHAT CHANNELS NEED TO BE PUNCHED ON EACH LINE.
^BE SURE THAT YOU PUNCH A TAPE TO ACCOMMODATE WHATEVER
NUMBER OF FORMS ARE NEEDED TO MAKE THE TAPE LOOP AT LEAST TEN INCHES IN CIRCUMFERENCE.
.B2
.HL 2 ^&CHANGING \\AND ^REVERSING \\THE ^RIBBON\&\\
\\^IF THE PRINT QUALITY ISN'T AS GOOD AS IT SHOULD BE, YOU MAY
NEED TO CHANGE OR REVERSE THE RIBBON.
.B
^^LP07 P\\ROCEDURE
.B
^THE FOLLOWING PROCEDURE DESCRIBES HOW TO CHANGE THE RIBBON ON AN
^^LP\\07 LINE PRINTER. (^REFER TO ^FIGURES 7-1, 7-3, AND 7-6.)
.LS;.LE;^LIFT THE OPERATOR PANEL ACCESS COVER AND SET THE ^^POWER\\
CIRCUIT BREAKER TO THE ^^OFF\\ POSITION.
.LE;^LIFT THE PRINTER WINDOW; UNLATCH AND FULLY OPEN THE BAND GATE
LEAVING THE RIBBON MASK AGAINST THE FORMS.
.PG;.FG60;.C
^FIGURE 7-6#^^LP07 R\\IBBON ^INSTALLATION
.PG
.NT ^^WARNING\\
^WAIT UNTIL THE ^CHARABAND STOPS ROTATING BEFORE PROCEEDING TO THE NEXT STEP.
.EN
.LM9
.LE;^USING PLASTIC GLOVES, GRASP THE RIBBON ROLLS AND FORCE THEM
TO THE RIGHT UNTIL THE RIBBON CORES ARE FREE OF THE RIBBON MOTORS.
.LE;^PULL THE RIBBON COMPLETELY FREE OF THE BAND GATE. ^DISCARD THE
RIBBON UNLESS YOU ARE REVERSING IT.
.LE;^REMOVE THE NEW RIBBON FROM ITS BOX AND REMOVE THE PLASTIC
WRAPPING AND ANY PROTECTIVE CARDBOARD COLLARS.
.LE;^HOLD THE RIBBON CORES WITH THE FULLY WOUND CORE ABOVE THE
OTHER SO THE RIBBON WILL UNWIND FROM THE UNDERSIDE OF THE
RIBBON CORE WHEN INSTALLED.
^FORCE THE RIGHT END OF THE UPPER RIBBON CORE AGAINST THE TOP
FLOATING RIBBON HOLDER, ALIGN THE LEFT END WITH THE FIXED RIBBON
HOLDER, AND ALLOW THE SPRING TENSION TO LOCK THE CORE INTO POSITION.
.LE;^UNWIND THE OTHER RIBBON CORE OVER THE RIBBON GUIDE BARS AND
^CHARABAND. ^POSITION THE LOWER RIBBON CORE BETWEEN THE BOTTOM RIBBON
HOLDERS IN THE SAME MANNER.
.LE;^ENSURE THAT THE SLOTS IN THE ENDS OF THE RIBBON CORES ARE
ENGAGED BY THE RIBBON HOLDER GUIDE PINS.
.LE;^ENSURE THAT THE RIBBON POSITION SENSOR IS NOT COVERED BY THE
RIBBON.
.LE;^CLOSE THE BAND GATE AND PRINTER WINDOW.
.LE;^SET THE ^^POWER\\ CIRCUIT BREAKER TO THE ^^ON\\ POSITION AND
CLOSE THE OPERATOR PANEL ACCESS COVER.
.LE;^WHEN THE ^^READY\\ INDICATOR COMES ON, PRESS THE ^^START/STOP\\
SWITCH TO PLACE THE PRINTER IN ^^RUN\\ MODE. (^^RUN\\ INDICATOR LIT).
.ELS
^SOME LISTINGS HAVE MORE PRINT ON THE LEFT HALF OF THE FORMS.
^TO PREVENT THE RIBBON FROM WEARING UNEVENLY, YOU CAN REVERSE
THE RIBBON AS FOLLOWS:
.LS;.LE;^LIFT THE OPERATOR PANEL ACCESS COVER AND SET THE ^^POWER\\ CIRCUIT
BREAKER TO THE ^^OFF\\ POSITION.
.LE;^LIFT THE PRINTER WINDOW; UNLATCH AND FULLY OPEN THE BAND GATE
LEAVING THE RIBBON MASK AGAINST THE FORMS.
.NT ^^WARNING\\
^WAIT UNTIL THE ^CHARABAND STOPS ROTATING BEFORE PROCEEDING TO THE NEXT STEP.
.EN
.PG
.LM9
.LE;^USING PLASTIC GLOVES, GRASP THE RIBBON ROLLS AND FORCE THEM
TO THE RIGHT UNTIL THE RIBBON CORES ARE FREE OF THE RIBBON MOTORS.
.LE;^PULL THE RIBBON COMPLETELY FREE OF THE BAND GATE.
.LE;^HOLDING THE TWO RIBBON CORES AS YOU TOOK THEM OFF THE PRINTER,
ROTATE THEM SO THAT THE TOP AND BOTTOM CORES ARE REVERSED.
.LE;^FORCE THE RIGHT END OF THE UPPER RIBBON CORE AGAINST THE TOP
FLOATING RIBBON HOLDER, ALIGN THE LEFT END WITH THE FIXED RIBBON
HOLDER, AND ALLOW THE SPRING TENSION TO LOCK THE CORE INTO POSITION.
.LE;^UNWIND THE OTHER RIBBON CORE OVER THE RIBBON GUIDE BARS AND
^CHARABAND. ^POSITION THE LOWER RIBBON CORE BETWEEN THE BOTTOM RIBBON
HOLDERS IN THE SAME MANNER.
.LE;^ENSURE THAT THE SLOTS IN THE ENDS OF THE RIBBON CORES ARE
ENGAGED BY THE RIBBON HOLDER GUIDE PINS.
.LE;^ENSURE THAT THE RIBBON POSITION SENSOR IS NOT COVERED BY THE
RIBBON.
.LE;^CLOSE THE BAND GATE AND PRINTER WINDOW.
.LE;^SET THE ^^POWER\\ CIRCUIT BREAKER TO THE ^^ON\\ POSITION AND
CLOSE THE OPERATOR PANEL ACCESS COVER.
.LE;^WHEN THE ^^READY\\ INDICATOR COMES ON, PRESS THE ^^START/STOP\\
SWITCH TO PLACE THE PRINTER IN ^^RUN\\ MODE. (^^RUN\\ INDICATOR LIT).
.ELS
^^LP10 P\\ROCEDURE
.B
^THE FOLLOWING PROCEDURE DESCRIBES HOW TO CHANGE THE RIBBON ON
AN ^^LP10\\ LINE PRINTER. (^REFER TO ^FIGURES 7-2 AND 7-7.)
.LS;.LE;^USE THE PLASTIC GLOVES SUPPLIED WITH THE RIBBON.
.LE;^PRESS THE ^^ON/OFF LINE\\ SWITCH TO SET THE PRINTER OFF-LINE
(^^ON LINE\\ INDICATOR NOT LIT).
.LE;^LIFT THE PRINTER WINDOW.
.LE;^MOVE THE DRUM GATE LATCH LEFT AND PULL FORWARD TO FULLY
OPEN THE DRUM GATE.
.NT ^^WARNING\\
^WAIT FOR CHARACTER DRUM TO STOP ROTATING BEFORE YOU PROCEED.
.EN
.LE;^GRASP THE RIBBON CORES AND FORCE THEM TO THE LEFT TOWARD THE DRUM GATE
LATCH UNTIL THE FLOATING RIBBON-HOLDER SPRINGS ARE COMPLETELY COMPRESSED.
.LE;^REMOVE THE RIBBON BY PULLING THE RIGHT END OF THE RIBBON CORES AWAY FROM THE DRUM GATE.
^DISCARD THE RIBBON UNLESS YOU ARE REVERSING IT.
.PG;.FG60
.C
^FIGURE 7-7#^^LP10 R\\IBBON ^INSTALLATION
.B2
.LE;^REMOVE THE NEW RIBBON FROM THE BOX AND HOLD THE RIBBON CORES
TOGETHER. ^REMOVE ANY PROTECTIVE CARDBOARD COLLARS.
.LE;^PLACE THE FULLY WOUND RIBBON CORE OVER THE BOTTOM FLOATING RIBBON HOLDER.
.LE;^PUSH THE CORE TO THE LEFT AND PLACE THE RIGHT END OVER THE BOTTOM FIXED
RIBBON HOLDER. ^BE SURE THAT THE HOLDER GUIDEPIN SLIPS INTO
THE SLOT ON THE CORE END.
.LM9
.LE;^UNWIND ENOUGH OF THE FULLY WOUND RIBBON CORE TO BRING THE RIBBON UP AND OVER THE CHARACTER DRUM.
.LE;^SLIP THE RIBBON BETWEEN THE RIBBON GUIDE CLIPS AND THE BOX SENSOR.
.LE;^PLACE THE RIBBON CORE AGAINST THE TOP FLOATING RIBBON HOLDER.
.LE;^PUSH THE CORE TO THE LEFT AND PLACE THE RIGHT CORE END OVER THE TOP FIXED RIBBON
HOLDER. ^BE SURE THAT THE HOLDER GUIDEPIN SLIPS INTO THE SLOT ON THE CORE END.
.LE;^CLOSE AND LATCH THE DRUM GATE.
.LE;^CLOSE THE PRINTER WINDOW.
.LE;^PRESS THE ^^ON/OFF LINE\\ SWITCH TO SET THE PRINTER ON-LINE
(^^ON LINE\\ INDICATOR LIT).
.ELS
^MOST LISTINGS HAVE MORE PRINT ON THE LEFT HALF OF THE PAPER.
^THEREFORE, TO PREVENT THE RIBBON FROM WEARING UNEVENLY, YOU SHOULD
REVERSE THE RIBBON. ^DO THE FOLLOWING:
.LS;.LE;^USE THE PLASTIC GLOVES SUPPLIED WITH THE RIBBON.
.LE;^PRESS THE ^^ON/OFF LINE\\ SWITCH TO SET THE PRINTER OFF-LINE
(^^ON LINE\\ INDICATOR NOT LIT).
.LE;^LIFT THE PRINTER WINDOW.
.LE;^MOVE THE DRUM GATE LATCH LEFT AND PULL FORWARD TO FULLY
OPEN THE DRUM GATE.
.NT ^^WARNING\\
^WAIT FOR CHARACTER DRUM TO STOP ROTATING BEFORE YOU PROCEED.
.EN
.LE;^GRASP THE RIBBON CORES AND FORCE THEM TO THE LEFT TOWARD THE DRUM GATE
LATCH UNTIL THE FLOATING RIBBON-HOLDER SPRINGS ARE COMPLETELY COMPRESSED.
.LE;^REMOVE THE RIBBON BY PULLING THE RIGHT END OF THE RIBBON CORES AWAY FROM THE DRUM GATE.
.LE;^HOLDING THE TWO RIBBON CORES AS YOU TOOK THEM OFF THE PRINTER,
ROTATE THEM SO THAT THE TOP CORE IS AT THE BOTTOM.
.LE;^PUSH THE CORE TO THE LEFT AND PLACE THE RIGHT END OVER THE BOTTOM FIXED
RIBBON HOLDER. ^BE SURE THAT THE HOLDER GUIDE PIN
SLIPS INTO
THE SLOT ON THE CORE END.
.LM9
.LE;^UNWIND ENOUGH OF THE FULLY WOUND RIBBON CORE TO BRING THE RIBBON UP AND OVER THE CHARACTER DRUM.
.LE;^SLIP THE RIBBON BETWEEN THE RIBBON GUIDE CLIPS AND THE BOX SENSOR.
.LE;^PLACE THE RIBBON CORE AGAINST THE TOP FLOATING RIBBON HOLDER.
.LE;^PUSH THE CORE TO THE LEFT AND PLACE THE RIGHT CORE END OVER THE TOP FIXED RIBBON
HOLDER. ^BE SURE THAT THE HOLDER GUIDE-PIN SLIPS INTO THE SLOT ON THE CORE END.
.LE;^CLOSE AND LATCH THE DRUM GATE.
.LE;^CLOSE THE PRINTER WINDOW.
.LE;^PRESS THE ^^ON/OFF LINE\\ SWITCH TO SET THE PRINTER ON-LINE
(^^ON LINE\\ INDICATOR LIT).
.ELS
.HL 2 ^&CLEANING \\THE ^LINE ^PRINTER\&\\
\\^IN ADDITION TO THE GENERAL CLEANING PROCEDURES GIVEN AT THE
BEGINNING OF THE CHAPTER, YOU SHOULD PAY PARTICULAR ATTENTION TO
THE PRINTING ELEMENTS.
.B
^YOU SHOULD INSPECT THE ^CHARABAND ASSEMBLY ON THE ^^LP\\07 DAILY
FOR EXCESSIVE INK AND PAPER RESIDUE COLLECTION. ^USE ISOPROPYL ALCOHOL
TO CLEAN AWAY INK ACCUMULATION FROM THE ^CHARABAND SLUGS. ^WHENEVER
THE ^CHARABAND IS REMOVED OR REVERSED, THE ROADBED AND TOP RIBBON
GUIDE SHOULD BE VACUUMED.
.B
^YOU SHOULD CLEAN THE CHARACTER DRUM ON THE ^^LP10\\ EVERY 100 HOURS,
OR SOONER IF NECESSARY, USING A SOFT SUEDE BRUSH AND A VACUUM CLEANER.
^EVERY 500 HOURS, OR SOONER IF NECESSARY, CLEAN THE CHARACTER DRUM WITH 
ISOPROPYL ALCHOHOL.
.HL 1 ^&CARD READER\&\\
\\^THE OPERATOR CONTROL PANELS FOR THE LOW-SPEED READER ^^CR10-F\\ AND
THE HIGH-SPEED READER ^^CR10-E\\ ARE SHOWN IN ^FIGURES 7-8 AND 7-9, RESPECTIVELY.
.HL 2 ^&LOADING \\AND ^UNLOADING ^CARDS\&\\
\\^USE THE FOLLOWING PROCEDURES TO LOAD THE INPUT HOPPER WITH PUNCHED CARDS TO BE READ.
.LS;.LE;^BE SURE THE READER IS POWERED ^^ON (POWER\\ INDICATOR LIT),
AND CHECK THAT THE ^^MODE\\ SWITCH ON THE REAR CONTROL PANEL OF THE READER IS SET TO ^^REMOTE\\.
.LE;^PULL THE HOPPER FOLLOWER BACK WITH ONE HAND AND BEGIN
LOADING CARD DECKS INTO THE HOPPER. ^BE SURE TO PLACE THE FIRST
CARD TO BE READ AT THE FRONT WITH THE 9 EDGE DOWN, COLUMN 1 TO THE LEFT.
.PG
.LM0;.FG60;.C
^FIGURE 7-8 ^^CR10-F C\\ARD ^READER
.PG;.FG60;.C
^FIGURE 7-9 ^^CR10-E\\ ^CARD ^READER
.PG
.LM9;.B
.LE;^CONTINUE PLACING CARDS INTO THE INPUT HOPPER UNTIL IT IS LOOSELY FILLED.
.NT ^^CAUTION\\
^DO NOT PACK THE INPUT HOPPER SO FULL THAT THE AIR FROM THE BLOWER CANNOT
RIFFLE THE CARDS PROPERLY. ^IF THE CARDS ARE PACKED TOO TIGHTLY, THE VACUUM PICKER CANNOT
WORK PROPERLY.
.EN
.LE;^PRESS ^^RESET\\ TO ALLOW CARDS TO BE READ.
.LE;^YOU MAY CONTINUE LOADING CARDS WHILE THE READER IS OPERATING PROVIDED
YOU MAINTAIN TENSION IN THE FRONT PORTION OF THE DECK AS YOU ADD CARDS TO THE
REAR. ^DO NOT ADD MORE CARDS UNTIL THE HOPPER IS AT LEAST HALF EMPTY.
.NT ^^CAUTION\\
^WHEN YOU ARE TRYING TO MAINTAIN PRESSURE ON THE CARD DECK, USE JUST ENOUGH PRESSURE TO MAINTAIN THE RIFFLE ACTION TO PREVENT
DAMAGING CARDS OR JAMMING THE READER.
.EN
.LE;^USUALLY, ALL CARDS ARE MOVED THROUGH THE READER INTO THE STACKER.
^HOWEVER, IF YOU NEED TO REMOVE CARDS FROM THE INPUT HOPPER, SIMPLY
PULL BACK THE FOLLOWER AND REMOVE THE CARD DECK.
.LE;^TO UNLOAD CARDS FROM THE OUTPUT STACKER, PULL THE STACKER FOLLOWER
BACK WITH ONE HAND AND REMOVE THE CARD DECK FROM THE STACKER. ^BE CAREFUL TO MAINTAIN THE ORDER OF THE DECK.
^THE STACKER MAY BE UNLOADED WHILE CARDS ARE BEING READ.
.ELS
.HL 2 ^&CLEANING \\THE ^CARD ^READER\&\\
\\^THE IMPORTANT CLEANING AREA FOR A CARD READER IS THE CARD PATH,
WHICH ACCUMULATES CARD DUST. ^IF THIS BUILDS UP, IT CAUSES DATA
ERRORS, CARD MOTION ERRORS, AND POSSIBLY EVEN CARD JAMS. ^THE CARD
PATH SHOULD BE CLEANED AT LEAST WEEKLY. ^WITH THE POWER ^^OFF\\,
THE PATH FROM THE HOPPER TO THE STACKER SHOULD FIRST BE BLOWN OUT
AND THEN WELL VACUUMED.
.HL 1 ^&DECTAPE\&\\
\\^THE FOLLOWING PROCEDURES DESCRIBE THE ACTIONS NECESSARY TO MOUNT
AND DISMOUNT A ^^DEC\\TAPE ON THE ^^TU\\56 TRANSPORT. ^TO ASSIGN A
DRIVE TO YOUR JOB, ENTER:
.B;.LM20;.TS20;.I-15
_.^^ASSIGN DTA\\N	(WHERE N = 0-7, THE NUMBER ON THE DRIVE SELECTOR
INDICATOR OF SOME UNUSED DRIVE. ^NOTE, HOWEVER, THAT ON SOME DRIVES 0
IS REPLACED BY 8; YOU MUST STILL ENTER ^^DTA\\0.
.LM0
.HL 2 ^&MOUNTING \\AND ^DISMOUNTING ^^DEC\\TAPES\&
\\^REFER TO ^FIGURE 3-1 FOR A VIEW OF THE ^^TU\\56 TRANSPORT.
.B
^MOUNTING
.LS;.LE;^PLACE THE ^^REMOTE/LOCAL\\ SWITCH TO ^^OFF\\ (MIDDLE
POSITION). ^THIS SWITCH IS LOCATED IMMEDIATELY TO THE RIGHT OF THE
DRIVE SELECTOR INDICATOR.
.LE;^MOUNT THE ^^DEC\\TAPE ONTO THE LEFT HAND HUB SO THE TAPE
FEEDS UPWARD AT THE LEFT PERIMETER OF THE REEL.
.LE;^THREAD THE TAPE TO THE RIGHT, OVER THE TOP OF THE TAPE GUIDES
AND TAPE HEAD, AND CLOCKWISE ONTO THE TAKE-UP REEL.
.LE;^WIND SEVERAL TURNS OF TAPE CLOCKWISE ONTO THE TAKE-UP REEL.
.LE;^PRESS THE ^^REMOTE/LOCAL\\ SWITCH INTO THE ^^LOCAL\\ (BOTTOM
PRESSED) POSITION.
.LE;^ADVANCE THE TAPE ABOUT TEN TURNS ONTO THE TAKE-UP REEL BY
DEPRESSING THE TOP END OF THE RIGHTMOST ROCKER SWITCH.
.LE;^PRESS THE ^^REMOTE/LOCAL\\ SWITCH INTO THE ^^REMOTE\\ (TOP
PRESSED) POSITION.
.LE;^TO WRITE ON THE TAPE, SET THE ^^WRITE ENABLE/WRITE LOCK\\ SWITCH
TO THE ^^WRITE ENABLE\\ (TOP PRESSED) POSITION.
.ELS
.B
^DISMOUNTING
.B
^IF THE SOFTWARE HAS REWOUND AND UNLOADED THE TAPE, SKIP STEPS 1 AND 2.
.LS;.LE;^SET THE ^^REMOTE/LOCAL\\ SWITCH TO THE ^^LOCAL\\ POSITION.
.LE;^WIND THE TAPE COMPLETELY ONTO THE LEFT REEL BY PRESSING THE
REWIND SWITCH (TOP END OF THE LEFTMOST ROCKER SWITCH) AND HOLDING
IT PRESSED UNTIL ALL THE TAPE HAS WOUND ONTO THE LEFT REEL.
.LE;^PLACE THE ^^REMOTE/LOCAL\\ SWITCH TO ^^OFF\\ (MIDDLE)
POSITION AND REMOVE THE TAPE.
.ELS
.HL 2 ^&CLEANING ^^DEC\\TAPE ^DRIVES\&\\
\\^^DEC\\TAPES DO NOT HAVE A COMPLICATED TAPE PATH; HOWEVER, THE
BROWN OXIDE POWDER THAT FLAKES OFF WHEN A TAPE IS IN MOTION WILL
ACCUMULATE ON THE TAPE GUIDES AND TAPE HEAD. ^ONCE EACH SHIFT, OR AT LEAST
ONCE DAILY, YOU SHOULD CLEAN THESE AREAS WITH A COTTON-TIPPED
APPLICATOR AND 91% ISOPROPYL ALCOHOL.
.PS69,70
.HL 1 ^&MAGNETIC TAPE\&\\
\\^THE ^^DEC\\SYSTEM-10 SUPPORTS A VARIETY OF MAGNETIC TAPE DRIVES.
^THEY COVER BOTH 7 TRACK AND 9 TRACK OPERATION, TAPE SPEEDS OF 45 TO 200 INCHES
PER SECOND, AND RECORDING DENSITIES OF 200 TO 6250 BITS PER INCH.
^VARIOUS SIZE REELS CAN BE ACCOMMODATED AND SOME DRIVES WILL ACCEPT
INDUSTRY-STANDARD CARTRIDGES.
.PG
.HL 2 ^&MOUNTING \\AND ^DISMOUNTING\&\\
\\^THE FOLLOWING PROCEDURES DESCRIBE THE ACTION NECESSARY TO MOUNT
AND DISMOUNT MAGNETIC TAPE REELS ON THE VARIOUS DRIVES SUPPORTED
BY THE ^^DEC\\SYSTEM-10. ^SOME DRIVES PROVIDE FOR THE AUTOMATIC
THREADING OF THE TAPE ONTO THE TAKE-UP REEL WHILE OTHERS REQUIRE YOU TO
THREAD THE TAPE MANUALLY. ^FOR ALL DRIVES, YOU MUST INSERT A WRITE
ENABLE RING IN THE GROOVE ON THE BACK OF THE TAPE REEL IN ORDER TO
ALLOW WRITING. ^IF THIS RING IS NOT PRESENT, AN INDICATOR LIGHT
(^^FILE PROTECT\\ ON SOME DRIVES, ^^WRITE DISABLE\\ ON OTHERS) WILL WARN
YOU THAT WRITING IS INHIBITED.
.B3
7.4.1.1##^^^&TU\\10 \\AND ^^TU\\16 ^DRIVES\\ (^REFER TO ^FIGURE 7-10)\&
.B1
\\^MOUNTING
.LS;.LE;^ROTATE THE REEL HOLDDOWN KNOB OF THE LOWER HUB COUNTERCLOCKWISE
AS FAR AS IT WILL GO, AND PLACE THE SUPPLY REEL OVER THE HOLDDOWN
KNOB WITH THE GROOVE TOWARD THE BACK. ^HOLD THE REEL FIRMLY AGAINST
THE HUB FLANGE AND TURN THE HOLDDOWN KNOB CLOCKWISE UNTIL IT IS
TIGHT.
.LE;^PRESS ^^BR REL\\ AND PULL THE TAPE FROM THE SUPPLY REEL.
^THE TAPE SHOULD UNWIND FROM THE LEFT WITH THE OXIDE (DULL) SIDE
TOWARD THE HUB. ^IF THE TAPE UNWINDS FROM THE TOP, CHECK THAT THE
REEL IS MOUNTED WITH THE GROOVE TOWARD THE BACK.
.LE;^GRASP THE TAPE IN BOTH HANDS WITH THE LEFT HAND AT THE END AND
THE RIGHT HAND BACK ABOUT A FOOT. ^PLACE THE TAPE AGAINST THE BOTTOM
AND LEFT SIDE OF THE HEAD COVER OVER THE THREADING SLOT. ^PULL
THE TAPE TAUT AND SLIDE IT UPWARDS AND INTO THE SLOT. ^LEAD THE
TAPE AROUND THE UPPER RIGHT CORNER OF THE VACUUM COLUMN COVER, SLIDE
IT INTO THE SLOT BETWEEN THE COVER AND THE UPPER TAPE GUIDE, AND LEAD
IT AROUND THE GUIDE. ^PLACE THE END OF THE TAPE OVER THE TOP OF THE
TAKE-UP REEL HUB, AND WIND ABOUT SIX TURNS OF THE TAPE CLOCKWISE ON THE
REEL.
.LE;^PRESS ^^LOAD\\ TO DRAW TAPE INTO THE VACUUM COLUMNS. ^PRESS ^^FWD\\
AND PUSH ^^START\\ TO ADVANCE THE TAPE TO LOADPOINT. ^WHEN THE
LOADPOINT MARKER IS SENSED, THE TAPE STOPS, THE ^^FWD\\ LIGHT GOES OUT,
AND ^^LD PT\\ COMES ON. ^NOTE THAT IF TAPE MOTION CONTINUES FOR
MORE THAN TEN SECONDS, THE TAPE IS BEYOND LOADPOINT. ^PRESS
^^STOP, REV\\ AND THEN ^^START\\. ^THE TAPE SHOULD MOVE BACK AND
STOP AT LOADPOINT.
.LE;^PRESS ^^ONLINE\\.
.ELS
^DISMOUNTING
.LS;.LE;^REWIND TO LOADPOINT BY PRESSING ^^OFF LINE\\, SETTING THE
ROCKER SWITCH TO ^^REWIND\\, AND PRESSING ^^START\\.
.PG;.FG60;.C
^FIGURE 7-10 ^T^U16 ^MAGNETIC ^TAPE ^DRIVE
.PG
.LE;^PRESS ^^BR REL\\ AND WIND THE REMAINING TAPE ONTO THE SUPPLY REEL.
.LE;^TURN THE HOLDDOWN KNOB COUNTERCLOCKWISE AND REMOVE THE REEL.
.ELS
.B3
7.4.1.2##^^^&TU\\40 \\AND ^^TU41 D\\RIVES (^REFER TO ^FIGURE 7-11)\&
.B1
\\^MOUNTING
.LS;.LE;^IF THE TRANSPORT IS CLOSED, PRESS ^^UNLOAD REWIND\\ TO
LOWER THE WINDOW. ^PULL ONE END OF THE REEL LOCK RELEASE ON THE RIGHT
HUB AND PLACE THE SUPPLY REEL OVER THE HUB. ^IF THE REEL DOES
NOT HAVE A CARTRIDGE, SLIP THE END OF THE TAPE INTO THE SHOE AT THE
LOWER RIGHT OF THE REEL. ^IF THE REEL HAS A CARTRIDGE, PLACE IT ON THE
HUB SO THAT THE PROJECTIONS FROM THE CARTRIDGE FIT INTO THE TWO REEL-POSITIONING
GUIDES. ^THE PIN ON THE MOTOR FACE PLATE SHOULD GO INTO
THE OPENING ON THE TAPE CARTRIDGE TOGGLE.
.LE;^PRESS ^^LOAD REWIND\\ TO LOAD THE TAPE AUTOMATICALLY.
^PRESS ^^START\\
TO PLACE THE UNIT ON LINE.
.ELS
^DISMOUNTING
.LS;.LE;^PRESS ^^RESET\\ AND THEN ^^UNLOAD REWIND\\.
.LE;^WHEN THE WINDOW HAS OPENED, REMOVE THE TAPE BY OPENING THE
REEL LOCK RELEASE AND PULLING THE REEL FROM THE HUB.
.ELS
.B3
7.4.1.3##^^^&TU70, TU71, \\AND ^^TU72 D\\RIVES (^REFER TO ^FIGURE 7-12)\&
.B1
\\^MOUNTING
.LS;.LE;^PRESS THE ^^HUB/WINDOW UP\\ BUTTON TO OPEN THE TRANSPORT
WINDOW.
.LE;^PUSH THE TAPE ONTO RIGHT-HAND HUB SO THAT THE TAPE UNWINDS CLOCKWISE.
(^THE TAPE SNAPS ONTO THE HUB AND IS AUTOMATICALLY SECURED.)
.LE;^ENSURE THAT THE END OF TAPE IS NOT TWISTED AND LIES FLUSH
ON THE REEL.
.LE;^PRESS THE ^^RESET\\ BUTTON, CAUSING THE WINDOW TO CLOSE.
.LE;^PRESS ^^LOAD REWIND\\ BUTTON, PUTTING THE TAPE AT LOAD POINT.
.LE;^PRESS ^^START. READY\\ LIGHT GOES ON.
.B
^IF THE TAPE DID NOT LOAD CORRECTLY, THE ^^MACHINE CHECK\\ BUTTON
WILL FLASH, AND THE WINDOW WILL OPEN. ^THE OPERATOR SHOULD THEN
REPOSITION THE TAPE AND REPEAT STEPS 4, 5, AND 6 DESCRIBED ABOVE.
.ELS
^DISMOUNTING
.LS;.LE;^PRESS ^^RESET\\.
.PG;.FG60;.C
^FIGURE 7-11 ^T^U40 ^SERIES ^MAGNETIC ^TAPE ^DRIVE
.PG;.FG60;.C
^FIGURE 7-12 ^T^U70 ^SERIES ^MAGNETIC ^TAPE ^DRIVE
.PG
.LE;^PRESS ^^UNLOAD REWIND\\ BUTTON CAUSING THE TAPE TO REWIND
COMPLETELY AND THE TRANSPORT WINDOW TO OPEN.
.LE;^PULL THE TAPE OFF THE HUB.
.ELS
.NT
^THE ^^TU70\\ SERIES MAGNETIC TAPE DRIVES ARE ABLE TO ACCOMMODATE TAPE REELS THAT ARE ENCLOSED
IN CARTRIDGES. ^WHEN MOUNTING, THE CARTRIDGE MUST BE POSITIONED
ON THE HUB SO THAT THE TWO TABS ON EITHER SIDE OF THE CARTRIDGE
TOGGLE FIT INTO THE TWO SLOTS ON THE LEFT SIDE OF THE RIGHT-HAND
HUB. (^THE CARTRIDGE TOGGLE WILL AUTOMATICALLY BE OPENED IN THE
LOADING PROCESS AND CLOSED IN THE UNLOADING PROCESS.)
.EN
.B3
7.4.1.4##^^^&TU45 D\\RIVES (^REFER TO ^FIGURE 7-13)\&
.B1
\\^MOUNTING
.B
^THE SUPPLY REEL (REEL TO BE READ OR WRITTEN) IS LOCATED AT THE TOP
OF THE TRANSPORT. ^THE TAPE MUST UNWIND FROM THE SUPPLY REEL WHEN THE
REEL IS TURNED IN A CLOCKWISE DIRECTION. ^POSITION THE REEL ON THE
QUICK-RELEASE HUB AND DEPRESS THE HUB ACTUATOR.
^THREAD THE TAPE AS FOLLOWS:
.LS;.LE;^TOWARD THE ARROW TO THE UPPER LEFT OF THE SUPPLY REEL
.LE;^OVER THE TWO TOP GUIDE WHEELS FROM RIGHT TO LEFT
.LE;^DOWN AND TO THE LEFT OF THE UPPER WHITE GUIDE WHEEL
.LE;^SLIGHTLY RIGHT AND DOWN, TO GO UNDER THE HEAD
.LE;^DOWN AND TO THE LEFT OF THE LOWER WHITE GUIDE WHEEL
.LE;^DOWN UNDER THE CAPSTAN
.LE;^UP AND RIGHT, TOWARD THE ARROW TO THE LEFT OF THE TAKEUP REEL
.ELS
^WRAP THE TAPE LEADER ONTO THE TAKE-UP REEL SO THAT THE TAPE WILL BE
WOUND ONTO THE REEL WHEN IT IS ROTATED CLOCKWISE. ^WIND AT LEAST THREE
TURNS ONTO THE TAKE-UP REEL. ^REMOVE ALL SLACK IN THE TAPE PATH.
.B
^AFTER THE TAPE HAS BEEN LOADED AND CHECKED FOR CORRECT SEATING IN THE
GUIDES, POSITION THE TAPE AT THE ^LOAD ^POINT BY PRESSING THE
^^LOAD\\ SWITCH.
^RECHECK TAPE TRACKING IN THE GUIDES AND CLOSE THE DUST
COVER DOOR.
.NT
^THE TRANSPORT DOOR SHOULD REMAIN CLOSED DURING NORMAL OPERATION TO
ACHIEVE MAXIMUM DATA RELIABILITY.
.EN
.PG;.FG60;.C
^FIGURE 7-13 ^T^U45 ^MAGNETIC ^TAPE ^DRIVE
.PG
^WHEN THE LOAD CYCLE IS COMPLETE, THE TAPE WILL STOP AT THE ^LOAD
^POINT. ^THEN, IF THE ^^ONLINE\\ INDICATOR IS NOT LIT, PRESS ^^ONLINE\\.
^THE TRANSPORT IS NOW READY TO RECEIVE ADDITIONAL COMMANDS.
.B
^DISMOUNTING
.B
^TO UNLOAD A TAPE, DO THE FOLLOWING:
.LS;.LE;^PRESS THE ^^OFFLINE\\ SWITCH.
.LE;^PRESS THE ^^REWIND\\ SWITCH; THE TAPE WILL REWIND TO THE
^^BOT\\ (BEGINNING OF TAPE) MARKER.
.LE;^PRESS THE ^^REWIND\\ SWITCH A SECOND TIME; THIS WILL START
AN UNLOAD SEQUENCE.
.NT
^IT IS NOT NECESSARY TO WAIT FOR THE TAPE TO REWIND TO THE ^^BOT\\
MARKER IF AN UNLOAD IS DESIRED; PRESS THE ^^REWIND\\ SWITCH TWICE
IN SUCCESSION AND THE TAPE WILL REWIND AND UNLOAD.
.EN
.LE;^OPEN THE TRANSPORT DOOR AND REMOVE THE REEL. ^CLOSE THE TRANSPORT DOOR.
.ELS
.HL 2 ^&CLEANING MAGNETIC TAPE DRIVES\&\\
\\^CLEANLINESS IS ESSENTIAL FOR PROPER OPERATION. ^MINUTE PARTICLES
OF DIRT TRAPPED BETWEEN THE HEAD AND THE TAPE CAN CAUSE DATA ERRORS.
.B
^EACH DAY YOU SHOULD DO THE FOLLOWING:
.LS;.LE;^CLEAN THE HEAD. ^USE A LINT-FREE CLOTH OR COTTON SWAB MOISTENED
IN ISOPROPYL ALCOHOL. ^WIPE THE HEAD CAREFULLY TO REMOVE ALL
ACCUMULATED OXIDE AND DIRT.
.NT
^DO NOT USE ROUGH OR ABRASIVE CLOTHS TO CLEAN THE HEAD.
.EN
.LE;^CLEAN THE FIXED GUIDES, CAPSTAN, AND VACUUM CHAMBER
WITH A COTTON SWAB MOISTENED WITH ISOPROPYL ALCOHOL TO REMOVE
ACCUMULATED OXIDE AND DIRT. ^THE VACUUM COLUMN DOOR MAY BE OPENED
TO GAIN ACCESS TO THE CHAMBER SURFACES.
.LE;^CLEAN THE ROTATING TAPE GUIDES AND RUBBER PUNCH ROLLERS
WITH A LINT-FREE CLOTH OR COTTON SWAB MOISTENED IN ISOPROPYL ALCOHOL.
^WIPE THE SURFACES CAREFULLY TO REMOVE ALL ACCUMULATED OXIDE AND DIRT.
.PG
.NT
^DO NOT SOAK THE GUIDES WITH EXCESSIVE SOLVENT; IT CAN SEEP INTO THE
GUIDE BEARINGS, CAUSING CONTAMINATION OR A BREAKDOWN OF THE
BEARING LUBRICANT.
.EN
.ELS
.HL 1 ^&DISK DRIVES\&\\
\\^THREE TYPES OF DISK DRIVES WITH REMOVABLE DISK PACKS, ALONG WITH THEIR OPERATOR
CONTROL PANELS, ARE SHOWN IN ^FIGURES 7-14, 7-15, AND 7-16.
^THE ^^RHS\\04 FIXED-HEAD SWAPPING DISK SYSTEM DOES NOT REQUIRE
OPERATOR ACTION.
.HL 2 ^&MOUNTING \\AND ^DISMOUNTING ^DISK ^PACKS\&\\
\\^THE FOLLOWING STEPS DESCRIBE HOW TO MOUNT AND DISMOUNT DISK
PACKS ON THE ^^RP\\02, ^^RP03, RP04\\, AND ^^RP\\06 DISK DRIVES.
^EXTREME CARE MUST BE TAKEN TO AVOID PHYSICAL
DAMAGE TO THE PACK AND DRIVE. ^DO NOT PUT ANYTHING ON TOP OF A DRIVE
EXCEPT EMPTY DISK PACK COVERS. (^REFER TO ^FIGURES 7-14, 7-15, AND
7-16 FOR THE OPERATOR CONTROLS MENTIONED IN THE FOLLOWING INSTRUCTIONS.)
.B
^MOUNTING
.LS
.LE;^SLIDE BACK OR LIFT THE DRIVE COVER.
.LE;^REMOVE THE BOTTOM PLATE FROM THE DISK PACK CONTAINER BY MEANS
OF THE LOCKING HANDLE LOCATED ON THE UNDERSIDE OF THE BOTTOM PLATE.
.LE;^BE SURE THAT YOU HAVE THE PACK WITH THE CORRECT VISUAL INFORMATION ON IT; SLIDE THE PACK STRAIGHT DOWN ONTO THE DISK DRIVE HUB.
.LE;^TURN THE PACK COVER CLOCKWISE UNTIL THE PACK IS LOCKED INTO
POSITION. ^^DO NOT FORCE THE COVER ONCE IT STOPS TURNING.\\
.LE;^PULL THE PACK COVER STRAIGHT UP AND OFF THE PACK.
.LE;^CLOSE THE DRIVE COVER AND PUT THE EMPTY DISK PACK COVER ON TOP OF THE DRIVE.
.LE;^PUSH OR TOGGLE THE ^^START/STOP\\ SWITCH TO THE ^^START\\ POSITION.
.LE;^WHEN THE ^^READY\\ LIGHT IS ON, THE DRIVE IS
READY.
.ELS
^DISMOUNTING
.PS69,70
.LS
.LE;^PUSH OR TOGGLE THE ^^START/STOP\\ SWITCH TO THE ^^STOP\\ POSITION AND 
WAIT UNTIL THE PACK COMES TO A COMPLETE STOP.
.LE;^SLIDE BACK OR LIFT THE DRIVE COVER.
.LE;^SLIP THE PACK COVER STRAIGHT DOWN OVER THE PACK.
.LE;^TURN THE COVER COUNTERCLOCKWISE UNTIL THE PACK IS FREE.
.LE;^LIFT THE PACK STRAIGHT UP UNTIL IT CLEARS THE DRIVE.
.LE;^SECURE THE BOTTOM PLATE TO THE PACK COVER BY MEANS OF THE LOCKING
HANDLE LOCATED ON THE UNDERSIDE OF THE BOTTOM PLATE.
.LE;^CLOSE THE DRIVE COVER.
.ELS
.HL 2 ^&CLEANING DISK DRIVES\&\\
\\^OTHER THAN KEEPING THE OUTSIDE OF THE DRIVE AND THE COVER
OF THE PACKS CLEAN, YOU SHOULD LEAVE THIS TASK TO YOUR FIELD SERVICE
REPRESENTATIVE.
.HL 2 ^&FORMATTING ^DISK ^PACKS\&\\
\\^REFER TO THE SECTION CALLED ^FORMATTING ^DISK ^PACKS IN ^CHAPTER 5.
.PG;.FG60;.PS67,70;.C
^FIGURE 7-14 ^R^P03 ^DISK ^DRIVE
.PG;.FG60;.C
^FIGURE 7-15 ^R^P04 ^DISK ^DRIVE
.PG;.FG60;.C
^FIGURE 7-16 ^R^P06 ^DISK ^DRIVE
