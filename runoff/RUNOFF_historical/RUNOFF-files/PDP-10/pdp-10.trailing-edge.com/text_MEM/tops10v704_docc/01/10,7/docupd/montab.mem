















                    TOPS-10 Monitor Tables Descriptions


|                           Autopatch Tape # 23


|                               August 1989



                                  ABSTRACT

             This document contains illustrated descriptions of
|            the tables used by the TOPS-10 monitor to allocate
|            memory, control jobs and  resources,  and  provide
|            information.



|            Operating System:             TOPS-10 Version 7.04
             Software:                       GALAXY Version 5.1
                                          DECnet-10 Version 4.0










   digital equipment corporation               marlborough, massachusetts



|  Electronically distributed: August 1989

   First Printing, May 1984
   Revised, April 1986



   The information in this document is subject to change  without  notice
   and  should  not  be  construed  as  a commitment by Digital Equipment
   Corporation.  Digital Equipment Corporation assumes no  responsibility
   for any errors that may appear in this document.

   The software described in this document is furnished under  a  license
   and  may  only  be used or copied in accordance with the terms of such
   license.

   No responsibility is assumed for the use or reliability of software on
   equipment that is not supplied by Digital Equipment Corporation or its
   affiliated companies.



   Copyright C 1980, 1986, 1989 Digital Equipment Corporation.

   All Rights Reserved.



   The following are trademarks of Digital Equipment Corporation:

   CI             DECtape     LA50             SITGO-10
   DDCMP          DECUS       LN01             TOPS-10
   DEC            DECwriter   LN03             TOPS-20
   DECmail        DELNI       MASSBUS          TOPS-20AN
   DECnet         DELUA       PDP              UNIBUS
   DECnet-VAX     HSC         PDP-11/24        UETP
   DECserver      HSC-50      PrintServer      VAX
   DECserver 100  KA10        PrintServer 40   VAX/VMS
   DECserver 200  KI          Q-bus            VT50
   DECsystem-10   KL10        ReGIS
   DECSYSTEM-20   KS10        RSX              d i g i t a l




                                      CONTENTS

           1       ACC -- ACCESS TABLE  . . . . . . . . . . . . . . . . 1
           1.1       ACCNMB -- Next ACC Byte  . . . . . . . . . . . . . 2
           1.2       ACCPPB -- PPB Address  . . . . . . . . . . . . . . 3
           1.3       ACCADT -- Access Status  . . . . . . . . . . . . . 3
           1.4       ACCPRV -- Privilege Code . . . . . . . . . . . . . 4
           2       AVALTB -- AVAILABLE RESOURCE TABLE . . . . . . . . . 6
           3       BAF -- BAD ALLOCATION FILE . . . . . . . . . . . . . 7
           3.1       BAFNBS -- Bad Blocks . . . . . . . . . . . . . . . 8
           3.2       BAFREG -- Bad Region Word Pair . . . . . . . . . . 8
           4       USER I/O BUFFER  . . . . . . . . . . . . . . . . .  10
           4.1       First Word -- I/O Status Bits  . . . . . . . . .  10
           4.2       Second Word -- Use Bit . . . . . . . . . . . . .  10
           4.3       Third Word -- Word Count . . . . . . . . . . . .  11
           5       BUFFER RING HEADER . . . . . . . . . . . . . . . .  12
           6       CDB -- CPU DATA BLOCK  . . . . . . . . . . . . . .  13
           7       CB -- CONNECTION BLOCK . . . . . . . . . . . . . .  30
           8       CDT -- CONNECTED DEVICE TABLE  . . . . . . . . . .  33
           9       CHKTAB -- UUO CHECK BIT TABLE  . . . . . . . . . .  34
           10      CHKTBC -- CALL AND CALLI UUO CHECK BIT TABLE . . .  35
           11      CHN -- CHANNEL DATA BLOCK  . . . . . . . . . . . .  36
           12      CHTABL -- SPECIAL CHARACTER TABLE  . . . . . . . .  39
           13      CHREQV -- CHARACTER EQUIVALENCE TABLE  . . . . . .  52
           14      CIPWT -- CLOCK REQUEST QUEUE . . . . . . . . . . .  58
           15      COMTAB, COMTB2, CSTTAB -- COMMAND TABLE, NAMES OF 
                   COMMANDS . . . . . . . . . . . . . . . . . . . . .  59
           16      CSRTAB -- CONTEXT SAVE AND RESTORE TRANSLATION 
                   TABLE  . . . . . . . . . . . . . . . . . . . . . .  60
           17      DDB -- DEVICE DATA BLOCK . . . . . . . . . . . . .  64
           17.1      DEVCHR -- Device Characteristics Word  . . . . .  68
           17.2      DEVIOS -- Device Input/Output Status Word  . . .  68
           17.3      DEVMOD -- Device Modes Word  . . . . . . . . . .  71
           17.4      DEVIAD -- Input Buffer Word  . . . . . . . . . .  71
           17.5      DEVOAD -- Output Buffer Word . . . . . . . . . .  73
           17.6      DEVSTA -- Device Station Word  . . . . . . . . .  74
           17.7      DEVXTR -- Extra Word . . . . . . . . . . . . . .  75
           17.8      DEVEVM -- Exec Virtual Memory Word . . . . . . .  75
           17.9      DEVESE -- Extended Software Error Word . . . . .  76
           17.10     DEVHCW -- Device Hardware Characteristics Word .  76
           17.11     DEVCPU -- CPU Word . . . . . . . . . . . . . . .  77
           17.12     DEVJOB -- Job Word . . . . . . . . . . . . . . .  78
           17.13     DEVFUN -- UDB Pointer (Disk DDB only)  . . . . .  78
           17.14     DEVELB -- Error Information (Disk DDBs only) . .  78
           17.15     DEVRIB -- Current RIB Information (Disk DDBs 
                     only)  . . . . . . . . . . . . . . . . . . . . .  79
           17.16     DEVCUR -- Current Unit Information (Disk DDBs 
                     only)  . . . . . . . . . . . . . . . . . . . . .  79
           17.17     DEVFCS -- CFP-Supplied Word (Disk DDBs only) . .  79
           17.18     DEVRBn -- Retrieval Pointer (Disk DDBs only) . .  80
           17.19     TDVSTS -- Status Information Word (Magtape DDBs 
                     only)  . . . . . . . . . . . . . . . . . . . . .  80


                                    iii



           18      DEVDSP -- DEVICE DISPATCH TABLE  . . . . . . . . .  81
           19      DISK CACHE DATA STRUCTURE  . . . . . . . . . . . .  83
           20      DISP, DISP2, AND DISPC -- COMMAND DISPATCH TABLES   85
           21      DRIVER DISPATCH TABLE  . . . . . . . . . . . . . .  86
           22      DSCTAB -- DATASET CONTROL TABLE  . . . . . . . . .  88
           23      ECB -- ETHERNET CHANNEL BLOCK  . . . . . . . . . .  89
           23.1      ECBSTS -- Ethernet Channel Status Word . . . . .  89
           23.2      ECBCTR -- Ethernet Channel Counters Block  . . .  90
           23.2.1      CC.XFM -- Ethernet Channel Counters Transmit 
                       Failure Bit Mask . . . . . . . . . . . . . . .  91
           23.2.2      CC.RFM -- Ethernet Channel Counters Receive 
                       Failure Bit Mask . . . . . . . . . . . . . . .  91
           24      EKB -- ETHERNET KONTROLLER BLOCK . . . . . . . . .  92
           24.1      EKBKTY -- Ethernet Kontroller Type Word  . . . .  93
           24.2      EKBSTS -- Ethernet Kontroller Status Word  . . .  93
           24.3      EKBCTR -- Ethernet Kontroller Counters Block . .  93
           24.3.1      KC.XFM -- Ethernet Kontroller Counters Transmit 
                       Failure Bit Mask . . . . . . . . . . . . . . .  94
           24.3.2      KC.RFM -- Ethernet Kontroller Counters Receive 
                       Failure Bit Mask . . . . . . . . . . . . . . .  95
           25      EMB -- ETHERNET MULTICAST ADDRESS BLOCK  . . . . .  96
           26      ENQ/DEQ BLOCKS . . . . . . . . . . . . . . . . . .  97
           27      EPB -- ETHERNET PORTAL BLOCK . . . . . . . . . . .  99
           27.1      EPBSTS -- Ethernet Portal Status Word  . . . . . 100
           27.2      EPBCTR -- Ethernet Portal Counters Block . . . . 100
           28      EPT -- EXEC PROCESS TABLE  . . . . . . . . . . . . 101
           29      EXE FORMAT SAVE FILES  . . . . . . . . . . . . . . 103
           30      FETTBL -- TABLE OF BITS FOR MONITOR FEATURES . . . 106
           31      FRAGMENT TABLE . . . . . . . . . . . . . . . . . . 107
           32      HOM -- HOME BLOCK  . . . . . . . . . . . . . . . . 108
           33      INTTAB -- INTERRUPT ROUTINE TABLE  . . . . . . . . 112
           34      JBTADR -- JOB ADDRESS TABLE  . . . . . . . . . . . 114
           35      JBTAD2 -- SECOND JOB ADDRESS TABLE . . . . . . . . 115
           36      JBTCHK -- SEGMENT CHECKSUM TABLE . . . . . . . . . 116
           37      JBTCLM -- JOB CORE LIMITS  . . . . . . . . . . . . 117
           38      JBTCQ -- JOB QUEUES TABLE  . . . . . . . . . . . . 118
           39      JBTCSQ -- SUBQUEUES TABLE  . . . . . . . . . . . . 120
           40      JBTDDB -- DDB REQUESTED BY JOB . . . . . . . . . . 121
           41      JBTDEV -- HIGH SEGMENT DEVICE TABLE  . . . . . . . 121
           42      JBTDTC -- JOB REQUESTING DECTAPE DDB . . . . . . . 122
           43      JBTIMI -- JOB PAGE COUNT . . . . . . . . . . . . . 123
           44      JBTIMO -- SWAPPED-OUT PAGE COUNT . . . . . . . . . 124
           45      JBTIPC -- REQUESTED IPCF INTERLOCK . . . . . . . . 125
           46      JBTJIL -- JUST-SWAPPED-IN LIST . . . . . . . . . . 126
           47      JBTJRQ -- REQUEUE LIST . . . . . . . . . . . . . . 127
           48      JBTLIM -- JOB TIME LIMIT TABLE . . . . . . . . . . 128
           49      JBTLOC -- JOB LOCATION TABLE . . . . . . . . . . . 129
           50      JBTNAM -- JOB NAME TABLE . . . . . . . . . . . . . 130
           51      JBTOLS -- JOB OUTPUT LIST  . . . . . . . . . . . . 131
           52      JBTPC -- USER MODE PC  . . . . . . . . . . . . . . 132
           53      JBTPDB -- PROCESS DATA BLOCK TABLE . . . . . . . . 133
           54      JBTPIA -- SOFTWARE PROGRAM INTERRUPT TABLE . . . . 134


                                     iv



           55      JBTPPN -- PROJECT PROGRAMMER NUMBER TABLE  . . . . 135
           56      JBTPRV -- JOB PRIVILEGE BITS . . . . . . . . . . . 136
           57      JBTRQT -- JOB RUN-QUEUE TIME TABLE . . . . . . . . 137
           58      JBTRSP -- RESPONSE TIME TABLE  . . . . . . . . . . 138
           59      JBTRTD -- REAL TIME DEVICES  . . . . . . . . . . . 139
           60      JBTSCD -- SUBQUEUE (CLASS) TABLE . . . . . . . . . 140
           61      JBTSFD -- SUB-FILE DIRECTORY TABLE . . . . . . . . 141
           62      JBTSGN -- SEGMENT TABLE  . . . . . . . . . . . . . 142
           63      JBTSHR -- HIGH SEGMENT SHARER COUNT  . . . . . . . 144
           64      JBTSPL -- SPOOL CONTROL TABLE  . . . . . . . . . . 145
           65      JBTSPS -- SECOND PROCESSOR STATUS  . . . . . . . . 146
           66      JBTSTS -- STATUS TABLE . . . . . . . . . . . . . . 148
           67      JBTST2 -- JOB STATUS TABLE 2 . . . . . . . . . . . 152
           68      JBTST3 -- JOB STATUS TABLE 3 . . . . . . . . . . . 154
           69      JBTSWP -- JOB SEGMENT SWAP AREA  . . . . . . . . . 155
           70      JBTUPM -- UPT ADDRESS TABLE  . . . . . . . . . . . 156
           71      JBTVIR -- VIRTUAL SIZE TABLE . . . . . . . . . . . 157
           72      JBTWCH -- WATCH TABLE  . . . . . . . . . . . . . . 158
           73      JDA -- DEVICE ASSIGNMENT TABLE . . . . . . . . . . 159
           74      JOBDAT -- DATA AREA  . . . . . . . . . . . . . . . 161
           75      KDB -- KONTROLLER DATA BLOCK . . . . . . . . . . . 163
           75.1      Magtape Definitions (TKB)  . . . . . . . . . . . 164
           75.2      Disk Definitions (KON) . . . . . . . . . . . . . 165
           76      LDB -- LINE DATA BLOCK . . . . . . . . . . . . . . 169
           76.1      LDBCOM -- Forced Command Word  . . . . . . . . . 172
           76.2      LDBATR -- Line Attributes Word . . . . . . . . . 173
           76.3      LDBOST -- Output Bits Word . . . . . . . . . . . 174
           76.4      LDBIST -- Input Status Word  . . . . . . . . . . 175
           76.5      LDBDCH -- Hardware Status Word . . . . . . . . . 175
           76.6      LDBBYT -- First Word for Software Status . . . . 177
           76.7      LDBBY2 -- Second Word for Software Status  . . . 178
           76.8      LDBBY3 -- Third Word for Software Status . . . . 179
           76.9      LDBLSW -- Page Length Word . . . . . . . . . . . 179
           76.10     LDBPAG -- Page Bits  . . . . . . . . . . . . . . 180
           76.11     LDBISR -- Interrupt Service Routine  . . . . . . 181
           76.12     LDBISB -- Line Speed Word  . . . . . . . . . . . 181
           76.13     LDBTTW -- Line Type Word . . . . . . . . . . . . 182
           76.14     LDBREM+0 -- Remote Bits  . . . . . . . . . . . . 182
           76.15     LDBREM+2 -- Remote Line Number . . . . . . . . . 184
           76.16     LDBREM+3 -- Remote Node Number . . . . . . . . . 184
           76.17     LDBREM+4 -- MCR/VTM Word . . . . . . . . . . . . 185
           76.18     LDBTTD -- RSX-20F Word . . . . . . . . . . . . . 186
           76.19     LDBMIC -- MIC Bits . . . . . . . . . . . . . . . 187
           76.20     LDBBKB -- Break Mask Field Width . . . . . . . . 188
           76.21     LDBCHM -- RECMAP Characters  . . . . . . . . . . 188
           77      LINTAB -- LINE TABLE . . . . . . . . . . . . . . . 189
           78      LOGTAB -- LOGIN JBTTAB POINTER TABLE . . . . . . . 190
           79      LVDTBL -- LEVEL D DISK PARAMETER TABLE . . . . . . 191
           80      MEMTAB -- VIRTUAL MEMORY PAGE TABLE  . . . . . . . 196
           81      METABL -- META-CHARACTER TABLE . . . . . . . . . . 197
           82      MFD -- MASTER FILE DIRECTORY . . . . . . . . . . . 199
           83      NMB -- FILE NAME BLOCK . . . . . . . . . . . . . . 201


                                     v



           83.1      NMBPPB -- Next NMB   . . . . . . . . . . . . . . 202
           83.2      NMBACC -- First ACC  . . . . . . . . . . . . . . 202
           84      NUMTAB -- TABLE OF GETTAB TABLES . . . . . . . . . 203
           85      PAGTAB -- PAGE TABLE . . . . . . . . . . . . . . . 204
           86      PB -- PATH BLOCK . . . . . . . . . . . . . . . . . 205
           87      PCB -- PORT CONTROL BLOCK  . . . . . . . . . . . . 207
           88      PDB -- PROCESS DATA BLOCK  . . . . . . . . . . . . 212
           89      PPB -- PROJECT PROGRAMMER NUMBER DATA BLOCK  . . . 218
           90      PTYTAB -- PSEUDO-TERMINAL DDB TABLE  . . . . . . . 219
           91      PT2TAB -- PAGE SECTION NUMBERS . . . . . . . . . . 220
           92      QBITS -- WAIT STATE CODE REQUEUE TABLE . . . . . . 221
           93      QUEUE TRANSFER TABLE . . . . . . . . . . . . . . . 223
           94      QUEUE TABLE FOR JOB SCANNING . . . . . . . . . . . 225
           95      QQSTAB -- QUANTUM TIME QUEUE TABLE . . . . . . . . 226
           96      QTTAB -- QUEUE PROGRESSION QUEUE TABLE . . . . . . 227
           97      REQTAB -- SHARABLE DEVICE REQUEST TABLE  . . . . . 228
           98      RIB -- RETRIEVAL INFORMATION BLOCK . . . . . . . . 230
           98.1      RIBEXT -- File Extension . . . . . . . . . . . . 232
           98.2      RIBPRV -- Access Privilege   . . . . . . . . . . 232
           98.3      RIBSTS -- Status Word  . . . . . . . . . . . . . 233
           98.4      RIBELB -- Data Error Location  . . . . . . . . . 234
           98.5      File-Specific Definitions  . . . . . . . . . . . 234
           98.5.1      .RBTYP -- File Type  . . . . . . . . . . . . . 234
           98.5.2      .RBBSZ -- Byte Sizes . . . . . . . . . . . . . 235
           98.5.3      .RBRSZ -- Record Sizes . . . . . . . . . . . . 236
           98.5.4      .RBFFD -- FFB and ACW  . . . . . . . . . . . . 236
           98.6      RIBXRA -- Next RIB . . . . . . . . . . . . . . . 237
           98.7      Retrieval Pointer Format . . . . . . . . . . . . 237
           99      SAB -- STORAGE ALLOCATION BLOCK  . . . . . . . . . 238
           100     SAT.SYS -- CLUSTER ALLOCATION FILE . . . . . . . . 240
           101     SB -- SYSTEM BLOCK . . . . . . . . . . . . . . . . 241
           102     SCHEDULER SCAN TABLES  . . . . . . . . . . . . . . 242
           103     SPT -- STORAGE ALLOCATION POINTER TABLE  . . . . . 244
           104     STR -- FILE STRUCTURE DATA BLOCK . . . . . . . . . 245
           105     SWPLST -- SWAPPING LIST TABLE  . . . . . . . . . . 247
           106     SW2LST -- SECONDARY SWPLST . . . . . . . . . . . . 248
           107     SW3LST -- THIRD SWPLST . . . . . . . . . . . . . . 248
           108     SWPTAB -- SWAPPING TABLE . . . . . . . . . . . . . 249
           109     TABSTR -- STRUCTURE TABLE  . . . . . . . . . . . . 250
           110     TRANSFER TABLES  . . . . . . . . . . . . . . . . . 251
           111     TTFCOM -- FORCED COMMANDS TABLE  . . . . . . . . . 252
           112     TERMINAL CHUNKS  . . . . . . . . . . . . . . . . . 253
           113     TTUUOT -- TTCALL DISPATCH TABLE  . . . . . . . . . 255
           114     TTYTAB -- TTY TABLE  . . . . . . . . . . . . . . . 256
           115     TYPTAB -- DEVICE TYPES TABLE . . . . . . . . . . . 257
           116     UCLJMP -- CALL AND CALLI UUO DISPATCH TABLE  . . . 258
           117     UCLTAB -- CALL UUO NAMES TABLE . . . . . . . . . . 259
           118     UDB -- UNIT DATA BLOCK, OFFSETS COMMON TO ALL 
                   KONTROLLERS  . . . . . . . . . . . . . . . . . . . 260
           118.1     Magtape Definitions (TUB) Unit Data Block  . . . 260
           118.2     Disk Definitions (UNI) Unit Data Block . . . . . 264
           118.2.1     UNISYS -- Next UDB in System . . . . . . . . . 268


                                     vi



           118.2.2     UNISWP -- Next UDB For Swapping  . . . . . . . 268
           118.2.3     UNISTS -- Unit Status  . . . . . . . . . . . . 268
           118.2.4     UNICCT -- Channel Error  . . . . . . . . . . . 269
           118.2.5     UNIGRP -- Output Word  . . . . . . . . . . . . 269
           118.2.6     UNICHR -- Block Counts . . . . . . . . . . . . 269
           118.2.7     UNICPS -- SAT Word . . . . . . . . . . . . . . 270
           118.2.8     UNIDES -- Unit Description . . . . . . . . . . 270
           118.2.9     UNIALT -- First Word for Alternate Port  . . . 271
           118.2.10    UNI2ND -- Second Word for Alternate Port . . . 271
           118.2.11    UNIAJB -- DA Status  . . . . . . . . . . . . . 272
           118.2.12    UNIDS2 -- Lap Plug Number  . . . . . . . . . . 272
           119     UFB -- USER FILE DIRECTORY DATA BLOCK  . . . . . . 273
           119.1     UFBPPB -- Next UFB . . . . . . . . . . . . . . . 274
           120     UN BLOCK -- USER NI BLOCK  . . . . . . . . . . . . 275
           120.1     UN.STA -- Portal Status Word . . . . . . . . . . 277
           120.2     UN.PTY -- Protocol Identification Word . . . . . 277
           121     UNQTAB, UNQTB2, UNQTBC -- COMMAND TABLES . . . . . 278
           122     UNWTAB -- UNWIND RESOURCE TABLE  . . . . . . . . . 280
           123     UFD -- USER FILE DIRECTORY . . . . . . . . . . . . 281
           124     UPT -- USER PROCESS TABLE  . . . . . . . . . . . . 282
           125     USER PAGE MAP (SECTION MAP)  . . . . . . . . . . . 287
           126     UUOTAB -- UUO DISPATCH ADDRESS TABLE . . . . . . . 288
           127     WSBTAB -- WORKING SET BIT TABLE  . . . . . . . . . 289

























































                                    viii















                                  FOREWORD



   The TOPS-10 Monitor Tables Descriptions are the result of  the  effort
   to  document  and  illustrate  information  that  system  analysts and
   programmers might need to repair  or  modify  TOPS-10  monitor  source
   code.   This  document  is  provided  without  guarantee  of technical
   accuracy.

   The tables are simply an extension and summary of the  monitor  source
   code.  To the inexperienced user, they may seem bewilderingly complex.
   However, to the user with experience in TOPS-10 monitor internals, and
   in  the  TOPS-10  data  structures,  this  document  can  be  a useful
   reference for a conceptual view of the monitor.

   The monitor source code itself is complex and lengthy, since it allows
   many  types of hardware and many software applications.  The code does
   not regard the support  status  of  any  product,  and  this  document
   follows  suit.   For complete information about product support, refer
   to the current TOPS-10 Software Product Description.

   This document is  only  a  summary  of  the  information  written  and
   processed  by  the monitor.  It is an effort to record the information
   critical in developing and maintaining TOPS-10.  Do  not  assume  this
   document  is  correct  in  all  cases.   Please  refer  to source code
   listings of the appropriate modules whenever using the information  in
   these tables.

   The monitor tables are listed to reflect a  TOPS-10  operating  system
   based  on one or more KL processors.  The information is different for
   any other type of system.










                                     ix



                                    NOTE

|          The data structures for the ANF-10  network  software,
|          which  were  documented  for  the  release  of TOPS-10
|          Version 7.03, were not updated to reflect the  changes
|          made  to  the  software  for  the  release  of TOPS-10
|          Version 7.04, and are not included in this version  of
|          the manual.














































                                     x



                                Conventions


   The TOPS-10 tables are described in a consistent format that  is  used
   to  illustrate  actual  assembly  code.   The  tables are described as
   follows.

   Table Name -- Descriptive title of table

   Description:   A description of the table, including how and  when  it
                  is used.

   Defined in:    Module where table is defined.

   Used by:       Modules that access the table.

   GETTAB Tables: GETTAB UUO symbolic index, followed by the GETTAB table
                  number in parentheses.

   See also:      Where to look for more information.


                +-------------------------------------------------------+
   Word name    | General description of word's contents                |
                |-------------------------------------------------------|
                | Left half                 | Right half                |
                |-------------------------------------------------------|
   Symbol *     | * means "see following pages" for more information    |
                |-------------------------------------------------------|
   Symbol (2)   | (2) means "see Note no. 2" following the table        |
                +-------------------------------------------------------+


   * Special information about one or more words in the table.

   Notes:

        1.  Notes contain more information about about the monitor  table
            and the way the data is used by the monitor.

        2.  Numbered notes refer to specific words or items in the table.
            These  items  are  flagged  by  (n), where n is the number of
            note.

        3.  Notes also describe any restrictions or warnings in using the
            data in the table.

        4.  Data words  that  require  more  detail  are  listed  on  the
            subsequent pages, as shown below.





                                     xi



   Following  the  monitor  table,  a  word-by-word  description  of  the
   information stored in table is sometimes necessary.  Each complex word
   is illustrated as shown here.  The contents of bytes and  the  meaning
   of  certain  bit  settings  are  listed  after  the  illustration,  if
   necessary.


   +---------------------------------------------------------------+
   |Breakdown of bytes  | X | and bits  | X |  UN1 | X | X | X | X |
   +---------------------------------------------------------------+
    0                 17 18  19       26 27  28  31 32  33  34  35


   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   WORD      0-17      WR.LH     Description of contents.
   WORD      18        WR.MB     Meaning of bit settings.
   WORD      19-26     WR.FL     Contents of bytes (fields).
   WORD      27        WR.X      Flag settings.
   WORD      28-31     WR.UN1    Use of the data.
   WORD      32        WR.FL1    Results of setting bits.
   WORD      33        WR.FL2    Setting flags.
   WORD      34        WR.FL3    Storing codes.
   WORD      35        WR.FL4    Reading data.





























                                    xii



   1  ACC -- ACCESS TABLE   1  ACC -- ACCESS TABLE

   Description:   Contains information needed in order to gain access  to
                  a specific version of a specific file.

                  One table for each existing version of each open file.

                  The  access  table  for  the  current  and  possibly  a
                  superseding  version  of  the  file  are  linked to the
                  corresponding NMB.  Also, each disk Device  Data  Block
                  contains  a  pointer  to  the access table for the file
                  currently being accessed.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO, IPCSER, SEGCON, SYSINI, UUOCON

   See also:      NMB, PPB


   Symbol       Map
                +-------------------------------------------------------+
   ACCALC (2)   |  Highest relative block number allocated              |
                |-------------------------------------------------------|
   ACCNMB *     |  NMB or next ACC              | See following page    |
                |-------------------------------------------------------|
   ACCPT1       |  First retrieval pointer to file                      |
                |-------------------------------------------------------|
   ACCDOR (1)   |  Next dormant ACC        | Previous dormant ACC       |
                |-------------------------------------------------------|
   ACCPPB *     |  See following pages     | PPB                        |
                |-------------------------------------------------------|
   ACCADT *     |  See following pages                                  |
                |-------------------------------------------------------|
   ACCWRT (2)   |  Highest relative block number written                |
                |-------------------------------------------------------|
   ACCPRV *     |  Privileges | Mode | Creation time | Low creation date|
                +-------------------------------------------------------+


   * Details on following pages.

   Notes:

        1.  When all users have  closed  a  file,  its  access  table  is
            considered  dormant.  Dormant access tables are linked into a
            doubly linked list through ACCDOR, and are not deleted  until
            their  core  space  is  needed.   If  a table is not dormant,
            ACCDOR contains zero.

        2.  ACCWRT and ACCALC do not include the second RIB.



                                     1



   1.1  ACCNMB -- Next ACC Byte   1.1  ACCNMB -- Next ACC Byte

   +---------------------------------------------------------------+
   |  NMB or Next ACC          | A | LBS | 1 | UN1 | D | N | S | G |
   +---------------------------------------------------------------+
    0                        17 18  19-26  27 28-31  32  33  34  35


   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   ACCNMB    0-17                Address of next ACC for same name and
                                 PPN if there is one.
   ACCABC    18        ACPABC    This file always has bad checksum.
   ACCLBS    19-26     ACYLBS    Number of words in last data block of
                       ACZLBS    file.
   ACC1PT    27        ACP1PT    File has only one retrieval pointer.
   ACCUN1    28-31     COYUN1    Logical unit number, within structure,
                                 where file begins.
   ACCDIR    32        ACPDIR    This file is a directory.
   ACCNDL    33        ACPNDL    This file cannot be deleted.
   ACCSBC    34        ACPSBC    Sometimes bad checksum.
   ACCGRB    35        ACPGRB    Don't grab access table.

   Notes:

        1.  Normally there is only one ACC linked to an NMB.  But while a
            file  is  being superseded, both the old and the new versions
            of the file have ACCs linked to the NMB.

        2.  The low order two bits of a pointer to another ACC are  zero.
            The  pointer  back  to  the  NMB points to Word 2 of the NMB,
            NMBACC.  Hence, its low order bits are zero.

        3.  There may be an arbitrary number of ACCs for  older  versions
            of  a  file, which are still being read.  However, these ACCs
            are not linked to the NMB.  The only pointers to them are  in
            the DDBs of the readers.
















                                     2



   1.2  ACCPPB -- PPB Address   1.2  ACCPPB -- PPB Address

   +---------------------------------------------------------------+
   |   FSN    |Sim. updates | Z |   |       PPB                    |
   +---------------------------------------------------------------+
    0--------5 6----------13  14     18--------------------------35

   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   ACCFSN    0-5       ACYFSN    File structure number of structure
                       ACZFSN    to which this file belongs.
   ACCWCT    6-13      ACYWCT    Write count for simultaneous
                       ACZWCT    updates.
   ACCZRB    14        ACPZRB    If SFD, the SFD has empty data blocks.
   ACCPPB    18-35               Core address of Project-Programmer data
                                 Block (PPB).



   1.3  ACCADT -- Access Status   1.3  ACCADT -- Access Status

   +---------------------------------------------------------------+
   | A | Last Access Date | N | Count/Use| R | D | STS | S | P | N |
   +---------------------------------------------------------------+
    0-2 3---------------17  18 19------27  28  29 30-32  33  34  35


   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   ACCADT    0-2                 High-order 3 bits of creation date.
                                 Low-order part is in ACCCDT.
   ACCADT    3-17                Date this file was last accessed for
                                 more than just LOOKUP.
   ACCNIU    18        ACPNIU    File not in UFD.
   ACCCNT    19-27     ACYCNT    Count of user channels with LOOKUP
                       ACZCNT    in force for this version of this file
                                 or SFD use count.
   ACCREN    28        ACPREN    Rename in progress.
   ACCDEL    29        ACPDEL    File to be deleted when all readers
                                 finished.
   ACCSTS    30-32     ACYSTS    Access table status code.
             30        ACPCRE    File being created.
             31        ACPSUP    File being superseded.
             32        ACPUPD    File being updated.
   ACCSMU    33        ACPSMU    This file being simultaneously updated.
   ACCPAL    34        ACPPAL    Pre-allocated file.
   ACPSTS    35        ACPNDR    QUESER "don't delete on reset" bit.





                                     3



   Notes:

        1.  Access Table state codes are:

            ____  ______    _______            Code  Symbol    Meaning

            4     ACRCRE    File being created.
            2     ACRSUP    File superseding another.
            1     ACRUPD    File being updated.

        2.  The ACCADT word is called ACCUSE when the file is  stored  in
            an SFD.




   1.4  ACCPRV -- Privilege Code   1.4  ACCPRV -- Privilege Code

   +------------------------------------------------------------+
   | Privilege | Mode  |   Creation time   |    Creation date   |
   +------------------------------------------------------------+
    0---------8 9----12 13---------------23 24----------------35


   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   ACCPRV    0-8       ACYPRV    Privileges (described below).
   ACCMOD    9-12                Data mode of file.
   ACCCTM    13-23               File creation time.
   ACCCDT    24-35               Low-order 12 bits of file creation date.
                                 Upper 3 bits in ACCADT.

   Notes:

        1.  Privilege codes are stored in the following format:

            ____      _______            Bits      Meaning

            0         FILDAE called on protection failure.
            1-2       Owner's protection.
            4-7       Not used.
            3-5       Apply to any job with matching project number.
            6-8       Apply to all other jobs.










                                     4



        2.  A job is considered the  owner  of  a  file  if  one  of  the
            following is true:

             o  INDPPN set to 0 at MONGEN (default) and programmer number
                matches.

             o  INDPPN  set  to  -1  at  MONGEN  and  both  project   and
                programmer number match.


        3.  Privilege codes for user files:

            ____      _______ __________            Code      Highest Privileges

            7         None.
            6         Execute.
            5         Read.
            4         Append (allocate, deallocate).
            3         Update.
            2         Write (supersede, truncate).
            1         Rename (change attributes).
            0         Change privileges.


        4.  Privilege codes for directories:

            ____      _________ _____ __ ___ _____ ___            Code      Privilege Given by Bit Being Set

            4         Allows LOOKUPs in this directory.
            2         Allows creates.
            1         Allow directory to be read as a data file.

            Any combination of these bits may be set.





















                                     5



   2  AVALTB -- AVAILABLE RESOURCE TABLE   2  AVALTB -- AVAILABLE RESOURCE TABLE

   Description:   Contains flags to indicate that a sharable  device  has
                  become  available.   Each  entry  referenced by its own
                  label.

                  Entry is -1 if the corresponding sharable resource  has
                  become available since the last scheduling and some job
                  is waiting for it.

   Defined in:    COMMON
|  
|  Used by:       COMMON, CPNSER, SCHED1

   See also:      REQTAB

   The words in AVALTB are stored in the following order.   However,  all
   words may not be present on all systems.

   ____      ______    ________   Word      Symbol    Contents

   0         AUAVAL    Alter disk UFD quota.
   1         DAAVAL    Disk storage allocation wait.
   2         CBAVAL    Disk core block scan wait.
   3         DTAVAL    DECtape control wait.
   4         IPAVAL    IPCF interlock wait.
   5         CXAVAL    Context save wait.
   6         DCAVAL    Data control wait (magtape and DECtape).
|  7         CAAVAL    Semi-permanent core allocation wait.
|  12        EVAVAL    EVM wait.
|  13        EQAVAL    ENQ/DEQ wait.
|  14        FAAVAL    File allocation.

   The following words are conditional  and  depend  on  a  feature  test
   option to be included (see Note 2):

   ____      ______    _____     ________   Word      Symbol    Cond.     Contents

|  10        MCAVAL    FTMP      Disk cache.
|  11        MMAVAL    FTMP      Memory management wait.

   Notes:

        1.  Table REQTAB has entries corresponding to the AVALTB entries.

        2.  The AVALTB entries are built by the  conditionally  assembled
            RWAITS  macro  in  S.MAC; therefore, some of the above listed
            entries may not be present in all systems.

        3.  This table is initialized to zero.




                                     6



   3  BAF -- BAD ALLOCATION FILE   3  BAF -- BAD ALLOCATION FILE

   Description:   Disk  block  in  which  all  known  bad  regions  in  a
                  structure are recorded.

                  The BAF is always the next block after the  home  block
                  in  HOME.SYS,  with  a copy in Block 11 (decimal).  The
                  containing the BAF is  marked  in  the  file  HOME.SYS;
                  information  from  the  BAF  is  copied  into  the file
                  BADBLK.SYS by the monitor.

   Defined in:    COMMOD

   Used by:       FILIO, FILUUO, ONCMOD, REFSTR

   Symbol       Map
                +-------------------------------------------------------+
   BAFNAM       |        SIXBIT        / BAT  /                         |
                |-------------------------------------------------------|
   BAFFIR (1,3) | Number of words in      | Relative address of first   |
                | BAFREG area             | bad region pair             |
                |-------------------------------------------------------|
   BAFNBS *     | NBS      | NBR          | KDC  |                      |
                |-------------------------------------------------------|
   BAFCNT       | Number of  pairs added to BAF by monitor              |
                |-------------------------------------------------------|
   BAFREG * (1) | Bad region pair         |                             |
                |-------------------------------------------------------|
                | Bad region pair         |                             |
                |-------------------------------------------------------|
                /                          .                            /
                /                          .                            /
                /                          .                            /
                |-------------------------------------------------------|
   BAFCOD       |          0               | Unlikely code (606060)     |
                |                          |                            |
                |-------------------------------------------------------|
   BAFSLF       |          0               | This block # in unit       |
                |                          |                            |
                +-------------------------------------------------------+

   Notes:

        1.  The label BAFREG should not be used by programs that look  at
            this  block.   They  should  use  the right half of BAFFIR to
            determine location of the first bad region pair.

        2.  The Map Program is a stand-alone program that checks all disk
            blocks  and  writes an initial BAF.  As the monitor finds bad
            blocks, it makes additional entries in the BAF.




                                     7



        3.  Both halves of BAFFIR are written by the mapping program  and
            are never changed by the monitor.  The left half is always an
            even number.




   3.1  BAFNBS -- Bad Blocks   3.1  BAFNBS -- Bad Blocks

   +------------------------------------------------------------+
   |   NBS   |    NBR            |   KDC   |                    |
   +------------------------------------------------------------+
    0------8  9---------------17  18-----24 25                35

   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   BAFNBS    0-8                 Number of bad blocks found by the map
                                 program.
   BAFNBR    9-17      BAYNBR    Number of bad regions found by the map
                                 program.  (Number of entries in BAFREG
                                 table.)
   BAFKDC    18-24     BAYKDC    Controller device code used by map
                                 program.



   3.2  BAFREG -- Bad Region Word Pair   3.2  BAFREG -- Bad Region Word Pair

   First word of each bad region pair:

   +------------------------------------------------------------+
   |    NBB    | 0 |     PUB     | KNM | |          APN         |
   +------------------------------------------------------------+
    0--------8   9  10---------17 18-20   22------------------35

   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   BAFNBB    0-8       BAYNBB    Number of bad blocks -1 in this bad
                                 region (not clusters).
   BAFOTH    9         BAPOTH    Non-zero if this bad region is detected
                                 on another controller or processor than
                                 the one that originally added the entry.
   BAFPUB    10-17     BAPPUB    Physical unit within controller.
                                 Bit 17-n represents unit n, where
                                 n = 0-7.
   BAFKNM    18-20     BAYKNM    Logical controller number, of this type.
                                 From UNIKNM.
             21        BAPNTP    Non-zero if new-style BAT block entry.
   BAFAPN    22-35     BAYAPN    Serial number of APR running when error
                                 was detected.


                                     8



   Second word of bad region pair:

   +----------------------------------------------------------------+
   | Ver | OTR | DTR | HDR |      | LBN of 1st bad block in region  |
   +----------------------------------------------------------------+
    0---2   3     4     5   6----8 9------------------------------35

   ____                ____   Word                Mask
   ______    ____      ______    ___________   Symbol    Bits      Symbol    Description

   BAFVER    0-2                 Version number of entry (presently 0).
   BAFERR    3         BAPOTR    Other error (not data or search error).
             4         BAPDTR    Data error (parity or ECC hard error).
             5         BAPHDR    Search error or header compare error.
   BAFELB    9-35                LBN of first bad block in region.

   Notes:

   Values of the word labels are relative to the  beginning  of  the  bad
   region pair, that is, 0 and 1.


































                                     9



   4  USER I/O BUFFER   4  USER I/O BUFFER

   Description:   Contains pointers and storage area for I/O  data.   Set
                  up by user programs as needed.

   Defined in:    Status bits defined in S.MAC

                +-------------------------------------------------------+
                |                           | File status bits          |
                |-------------------------------------------------------|
                | U |  Buffer size          | Next buffer address       |
                |-------------------------------------------------------|
                | Bookkeeping               | Word count, n             |
                |-------------------------------------------------------|
                / n = number of data words                              /
                |-------------------------------------------------------|
                / Unused area  (S-n)-1 words                            /
                +-------------------------------------------------------+



   4.1  First Word -- I/O Status Bits   4.1  First Word -- I/O Status Bits

   ___       _______   Bit       Meaning

   18        Improper mode.
   19        Device detected error.
   20        Data error, for example, checksum failure.
   21        Block too large.
   22        End of file.
   23        Device is actively transmitting or receiving data.
   24-29     Device-dependent parameters.
   30        Synchronous input.  Stop device after each buffer is filled.
   31        Word count supplied by user for output.  (Monitor normally
             computes word count.)
   32-35     Data mode.



   4.2  Second Word -- Use Bit   4.2  Second Word -- Use Bit

   ____      ______    ___________   Bits      Symbol    Description

   0         IOUSE     "Use" bit is set as follows:

                       ___       __ ________    ________                       I/O       In Progress    Finished

                       Input     0              1
                       Output    1              0

                       Note that 0 means the buffer is available to
                       filler; 1 means buffer is available to emptier.


                                     10



   1         IOIBC     Inhibit zeroing output buffers at completion of
                       output.
   2-17      IOSIZ     Size of buffer, not counting first two words.
   18-35               Address of second word of next buffer of ring.



   4.3  Third Word -- Word Count   4.3  Third Word -- Word Count

   ___       _______   Bit       Meaning

   0-17      Depends on type of device and mode.
   18-35     Word count.  (Normally computed by monitor for the device
             being used.)








































                                     11



   5  BUFFER RING HEADER   5  BUFFER RING HEADER

   Description:   Contains information that is used by programs to access
                  their I/O buffers.

   Defined in:    S.MAC

   Symbol       Map
                +-------------------------------------------------------+
   JBFADR       | V |                      |  Current buffer address    |
                |-------------------------------------------------------|
   JBFPTR (3)   | Byte pointer                                          |
                |-------------------------------------------------------|
   JBFCTR (3)   | Byte count                                            |
                |-------------------------------------------------------|
   JBFUDX       | Universal Device Index (UDX)                          |
                +-------------------------------------------------------+

   Label values are relative to the beginning of the buffer ring header.

   ____   Word
   ______    ____      ___________   Symbol    Bits      Description

   JBFADR    0         Virgin buffer ring bit (1 if buffer ring has been
                       set up but not referenced).
             18-35     Address of second word of the buffer currently
                       available to the user program.
   JBFPTR    0-35      Byte pointer for user to access next byte of
                       buffer with ILDB or IDPB.
   JBFCTR    0-35      Number of remaining bytes available to user.
|  JBFUDX    0-35      UDX for MPXSER (MPX-controlled devices only).

   Notes:

        1.  Ring header must be set up within user program.

        2.  Values are initialized by each INPUT or OUTPUT UUO,  for  the
            buffer made available to the user.

        3.  User program must keep JBFPTR and JBFCTR up  to  date  as  it
            uses the buffer.













                                     12



   6  CDB -- CPU DATA BLOCK   6  CDB -- CPU DATA BLOCK

   Description:   There is one CPU Data Block for each CPU in the system.
                  The  block contains both a constant and a variable data
                  area, in contiguous address space.  Routine  addresses,
                  pointers,    bit    masks,    and   processor-dependent
                  instructions are representative of the  data  found  in
                  the  CPU  Constants  Area.   The  CPU Variables Area is
                  cleared at initialization.  This area contains  current
                  status   words  for  the  CPU,  including  current  job
                  information, protected job  data  locations,  scheduler
                  and swapper parameters, and so forth.

                  References can  be  made  to  a  CDB  location  without
                  indexing.   The  symbols  used  in this case are in the
                  form of .Cnxxx, where n is  the  CPU  number  (such  as
                  .C0xxx, .C1xxx, .C2xxx, and so on).

|                 A "CWRD" macro is used to  generate  labels  and  data.
|                 The  "CWRD" macro calls are contained in the CDB macro,
|                 which is expanded once for each CPU.
|  
|  Defined in:    COMMON
|  
|  Used by:       APRSER, CLOCK1, CP1SER, ERRCON, PSISER, SCHED1, SYSINI,
|                 UUOCON

   GETTAB Tables:

                  .GTC0C (55), .GTC0V (56)
                  .GTC1C (57), .GTC1V (60)
                  .GTC2C (61), .GTC2V (62)
                  .GTC3C (63), .GTC3V (64)
                  .GTC4C (65), .GTC4V (66)

                                    NOTE

           All CDB symbols in  the  following  tables  require  a
           prefix of .CP or .Cn, where n is the CPU number.

           The    following    tables    represent    a    KL-SMP
           (multiprocessor) system.  Entries vary for other types
           of systems.











                                     13



   CPU Data Block

   Symbol       Map
                +-------------------------------------------------------+
   CDB          | Address of next CDB,,0                                |
                |-------------------------------------------------------|
   ASN          | APR serial number                                     |
                |-------------------------------------------------------|
   OK           | Number of jiffies since this CPU stopped.  If the     |
                | value of this location is less than or equal to       |
                | zero, this CPU is running.                            |
                |-------------------------------------------------------|
   EPT          | Physical address of EPT                               |
                |-------------------------------------------------------|
   LOG          | Logical CPU name as SIXBIT/CPUn/ (n=CPU number)       |
                |-------------------------------------------------------|
   PHY          | Physical CPU name as SIXBIT/CPUxn                     |
                | (x=S or L,n=CPU number)                               |
                |-------------------------------------------------------|
   TYP          | CPU type, 4=KL10, 5=KS10                              |
                |-------------------------------------------------------|
   MPT          |          Pointer to bad address subtable bits         |
                | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|
   RTC          | Real time clock (DK10) DDB adr                        |
                |-------------------------------------------------------|
   RTD          | DK10 DDB adr if high prec. time, 0 if low (APR clock) |
                |-------------------------------------------------------|
   PAR          |               Pointer to parity subtable              |
                | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|
   RSP          |              Pointer to response subtable             |
                | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|
   DKX          | Number of DK10s on this CPU                           |
                |-------------------------------------------------------|
   EBS          | EBOX ticks per second                                 |
                |-------------------------------------------------------|
   MBS          | MBOX ticks per second                                 |
                |-------------------------------------------------------|
   NMT          |               Pointer to NXM subtable                 |
                | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|
   CSB          |             Pointer to CPU status block               |
                | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|
   DSB          |           Pointer to device status block              |
                | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|
   SDP          |            Pointer to SBDIAG subtable                 |
                | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|


                                     14



                |-------------------------------------------------------|
   BPA          |        Performance analysis subtable ptr              |
                | Bits 0-8=length          | RH=offset into CDB         |
|               |-------------------------------------------------------|
|  PCB          | Addr of CI port control block                         |
|               |-------------------------------------------------------|
|  NPB          | Addr of NI port control block                         |
|               |-------------------------------------------------------|
|  MSS          |              Soft memory error subtable               |
|               | Bits 0-8=length          | RH=offset into CDB         |
                |-------------------------------------------------------|
   MAP          | Addr of CPU's exec map                                |
                |-------------------------------------------------------|
   SPT          | Special pages table                                   |
                |-------------------------------------------------------|
   CHX          | This CPU's bit in TKBSTS word of MTA KDB, indicating  |
                | a sweep needs to be done                              |
                |-------------------------------------------------------|
   CPN          | CPU number                                            |
                |-------------------------------------------------------|
   SK0          | Generate SKPCPU(0) (Instruction to skip only on CPU0) |
                |-------------------------------------------------------|
   SK1          | Generate SKPCPU(1) (Instruction to skip only on CPU1) |
                |-------------------------------------------------------|
   OK1          | Address of policy CPU's OK word                       |
                |-------------------------------------------------------|
   SLF          | Pointer to start of CDB                               |
                |-------------------------------------------------------|
   SCN          | Scheduler run queue scan list addr (SSCAN or SSCAN1)  |
                |-------------------------------------------------------|
   SST          | Address of subqueue scanning table                    |
                |-------------------------------------------------------|
   NPD          | Null PDL pointer                                      |
                |-------------------------------------------------------|
   EPD          | Error PDL pointer                                     |
                |-------------------------------------------------------|
   NJD          | Address of null job data area (offset by 20)          |
                |-------------------------------------------------------|
   STO          | Scanner once-a-tick routine address                   |
                |-------------------------------------------------------|
   ISR          | Scanner once-a-second routine address                 |
                |-------------------------------------------------------|
   DLK          | Calls DSKLOK ownership flag (0=currently owns DSKLOK) |
                |-------------------------------------------------------|
   SCD          | Scheduler interlock flag (-1=doesn't own interlock,   |
                | 0=owns interlock, n>0=has owned interlock)            |
|               |-------------------------------------------------------|
|  DIE          | DIE interlock flag (-1=doesn't own interlock, 0=owns  |
|               | interlock, n>0=has owned interlock)                   |
|               |-------------------------------------------------------|




                                     15



                |-------------------------------------------------------|
   RES          | Address of power fail restart return                  |
                |-------------------------------------------------------|
   NBI          | Number interrupts broken by BRKLOK                    |
                |-------------------------------------------------------|
|  PFD          | 3 words of powerfail/restart data                     |
|               |-------------------------------------------------------|
   KAF          | Keep-alive-failure dispatch address                   |
                |-------------------------------------------------------|
|  SVP          | Saved AC "P" on KAF                                   |
|               |-------------------------------------------------------|
|  KFP          | KAF PDL                                               |
|               |-------------------------------------------------------|
|  EPL          | Address of this CPU's PDL for processing PDL overflows|
|               |-------------------------------------------------------|
|  CHL          | Address of interrupt PC for interrupt level (APnCHL)  |
|               |-------------------------------------------------------|
|  CKL          | Address of interrupt PC for clock level (CKnCHL)      |
|               |-------------------------------------------------------|
|  APP          | CONSO, CONI PI bits for APR PI in progress            |
|               |-------------------------------------------------------|
   CON          | APR CONSO mask for currently enabled condition        |
                |-------------------------------------------------------|
   EEB          | Standard EXEC enabled CONSO bits                      |
                |-------------------------------------------------------|
|  IEF          | Mask to clear all interrupting APR error flags        |
|               | except parity and clock errors and sweep done         |
|               |-------------------------------------------------------|
|  MPS          | Bits to request parity   | Addr of sweep subroutine   |
|               | sweep                    |                            |
|               |-------------------------------------------------------|
   SCS          | Scheduler doorbell bits for all CPUs except this CPU  |
                |-------------------------------------------------------|
   SCC          | Scheduler doorbell bit for this CPU                   |
                |-------------------------------------------------------|
   QPS          | Queued protocol doorbell bits for all except this CPU |
                |-------------------------------------------------------|
   QPC          | Queued protocol doorbell bit for this CPU             |
                |-------------------------------------------------------|
   DBM          | Mask of all doorbell bits for this CPU                |
                |-------------------------------------------------------|
   EBR          | Exec base register on this CPU                        |
                |-------------------------------------------------------|
   CTN          | CTY number for this CPU  | DLS line number on DTE     |
                |-------------------------------------------------------|
|  EDT          | EDT table for this CPU                                |
|               |-------------------------------------------------------|
|  SPF          | CFE secondary protocol flags                          |
|               |-------------------------------------------------------|





                                     16



|               |-------------------------------------------------------|
|  SCA          | SCA interlock nesting flag                            |
|               |-------------------------------------------------------|
|  SCP          | SCA channel enable states                             |
|               |-------------------------------------------------------|
|  SIN          | SCNSER interlock nesting flag                         |
|               |-------------------------------------------------------|
|  TPN          | Magtape interlock nesting flag                        |
|               |-------------------------------------------------------|
|  TPP          | Magtape channel enable states                         |
|               |-------------------------------------------------------|
|  ETH          | Ethernet interlock nesting flag                       |
|               |-------------------------------------------------------|
|  CA0          / Saved AC set 0 at start of stopcode processing        /
|               |-------------------------------------------------------|
|  STT          | APRSER temp for trap processing                       |
|               |-------------------------------------------------------|
|  ST1          | Saved T1 on page traps                                |
|               |-------------------------------------------------------|
|  ST2          | Saved T2 on page traps                                |
|               |-------------------------------------------------------|
|  TPC          | APRSER temp for IME processing                        |
|               |-------------------------------------------------------|
|  TP1          | APRSER temp for IME processing                        |
|               |-------------------------------------------------------|
|  TPF          | APRSER temp for IME processing                        |
|               |-------------------------------------------------------|
|  EJT          | APRSER temp for IME processing                        |
                |-------------------------------------------------------|
   RCT          / Real time PI channel table                   (6 words)/
                |-------------------------------------------------------|
   RDT          / Real time dismiss table                      (6 words)/
                |-------------------------------------------------------|
   CPI          | CONI PI at start of stopcode processing               |
                |-------------------------------------------------------|
|  SVA          | Stopcode processing JSRs here to save all AC sets.    |
|               | Instruction that jumps to routine to save all AC sets |
|               | (JRST SVSETS)                                         |
|               |-------------------------------------------------------|
   TRP          | Current MUUO saved at start of stopcode processing    |
                |-------------------------------------------------------|
   RTS          | Temporarily used during RTTRP error procedure         |
                |-------------------------------------------------------|
   RTT          | "RTTRP in progress" Flag                              |
                |-------------------------------------------------------|
   TML          | Value of time at last clock tick                      |
                |-------------------------------------------------------|
|  OCB          | 0 if this CDB isn't owned by a CPU                    |
|               |-------------------------------------------------------|





                                     17



|               |-------------------------------------------------------|
|  DWD          | Recursion interlock for DIE                           |
                |-------------------------------------------------------|
   SAV          |                    PI save routines                   |
                | PI Save routine addr      | Multi-port PI Save        |
                |                           | routine addr              |
                |-------------------------------------------------------|
|  ATR          | AUTCON interlock request count                        |
|               |-------------------------------------------------------|
|  ATO          | AUTCON interlock owner ID                             |
|               |-------------------------------------------------------|
|  ATP          | AUTCON saved PI system state                          |
|               |-------------------------------------------------------|
|  ASC          | Number of autoconfigured software channels            |
|               |-------------------------------------------------------|
|  DVC          | Current autoconfiguring device code                   |
|               |-------------------------------------------------------|
|  CHA          | Current autoconfiguring CHN address                   |
|               |-------------------------------------------------------|
|  TSN          / Temporary drive serial number                (2 words)/
|               |-------------------------------------------------------|
|  CNI          | AUTCON CONI 000,T1                                    |
|               |-------------------------------------------------------|
|  CNO          | AUTCON CONO 000,(T1)                                  |
|               |-------------------------------------------------------|
|  DTI          | AUTCON DATAI 000,T2                                   |
|               |-------------------------------------------------------|
|  DTO          | AUTCON DATAO 000,T2                                   |
|               |-------------------------------------------------------|
|  BKI          | AUTCON BLKI 000,T2                                    |
|               |-------------------------------------------------------|
|  BKO          | AUTCON BLKO 000,T2                                    |
|               |-------------------------------------------------------|
|  CML          | LDB address of line on which command is being         |
|               | processed on this CPU                                 |
|               |-------------------------------------------------------|
   SB0          | SBDIAG function 0 argument                            |
                |-------------------------------------------------------|
   S0A          | SBDIAG function 0 answer                              |
                |-------------------------------------------------------|
   SB1          | SBDIAG function 1 argument                            |
                |-------------------------------------------------------|
   S1A          | SBDIAG function 1 answer                              |
                |-------------------------------------------------------|
   TOA          | Addr of character typeout routine                     |
                |-------------------------------------------------------|
   TIV          | Addr of vector with input routines                    |
|               |-------------------------------------------------------|
|  LFL          | Last forward command index for job in COMCON          |
|               |-------------------------------------------------------|




                                     18



                |-------------------------------------------------------|
   DDT          | Instruction for this CPU to enter EDDT                |
                |-------------------------------------------------------|
   EDV          | Code "EDV"               | Length of EXEC data vector |
                |-------------------------------------------------------|
   ED1          | Adr of address swapping block                         |
                |-------------------------------------------------------|
   ED2          | Relocated contents of .JBSYM                          |
                |-------------------------------------------------------|
   ED3          | Relocated contents of .JBUSY                          |
                |-------------------------------------------------------|
   ED4          | Address of word for DDT to use                        |
                |-------------------------------------------------------|
   ED5          | CPU/paging hardware data                              |
                |-------------------------------------------------------|
   ED6          | Physical address of this CPU's EPT                    |
                |-------------------------------------------------------|
   ED7          | Physical address of this CPU's SPT                    |
                |-------------------------------------------------------|
   ED8          | Physical address of this CPU's CST                    |
|  ED9          | Physical address of CPNDDT                            |
|               |-------------------------------------------------------|
|  EDA          | AOBJN pointer to CPU serial numbers                   |
|               |-------------------------------------------------------|
|  EDB          | Physical address of virtual crash ACs                 |
|               |-------------------------------------------------------|
|  EDC          | Virtual address of next EDV in ring                   |
|               |-------------------------------------------------------|
   HSF          | Word for DDT to use                                   |
                |-------------------------------------------------------|
   SYB          | Length of address swapping block                      |
                |-------------------------------------------------------|
   SY1          | Number of words to swap                               |
                |-------------------------------------------------------|
   SY2          | Address of first word to swap                         |
                |-------------------------------------------------------|
   SY3          | Place where new map may be found                      |
                |-------------------------------------------------------|
   SY4          | Place to save old contents                            |
|               |-------------------------------------------------------|
|  SPC          / XPCW entry point to DIE                      (4 words)/
|               |-------------------------------------------------------|
|  VBG          | Size of largest user program (in words)               |
|  (CORMAX)     |                                                       |
|               |-------------------------------------------------------|
|  (CORLST)     | Pointer to last free block possible                   |
|               |-------------------------------------------------------|
|  (CORTAL)     | Free + dormant + idle core blocks                     |
|               |-------------------------------------------------------|





                                     19



|               |-------------------------------------------------------|
|  (SHFWAT)     | Obsolete                                              |
|               |-------------------------------------------------------|
|  (HOLEF)      | Absolute address of lowest hole in core               |
|               |-------------------------------------------------------|
|  UPT          | Uptime for this CPU in clock ticks                    |
|               |-------------------------------------------------------|
|  (SHFWRD)     | Obsolete                                              |
|               |-------------------------------------------------------|
|  (STUSER)     | Obsolete                                              |
|               |-------------------------------------------------------|
|  (HIGHJB)     | Highest job number currently assigned                 |
|               |-------------------------------------------------------|
|  (CLRWRD)     | Number of words cleared by CLRCOR                     |
|               |-------------------------------------------------------|
|  LST          | Lost time on this CPU in jiffies                      |
|  (LSTWRD)     |                                                       |
|               |-------------------------------------------------------|
|  (MEMSIZ)     | Size of physical memory in words                      |
|               |-------------------------------------------------------|
   TPE          | Total parity errors detected on this CPU              |
                |-------------------------------------------------------|
   SPE          | Total spurious parity errors (did not recur) on this  |
                | CPU                                                   |
                |-------------------------------------------------------|
   MPC          | Total number of times this CPU continued after a      |
                | parity error                                          |
                |-------------------------------------------------------|
   MPA          | Memory parity address of first bad address            |
                |-------------------------------------------------------|
   MPW          | Contents of first bad word found                      |
                |-------------------------------------------------------|
   MPP          | Memory parity PC exclusive of parity sweep            |
                |-------------------------------------------------------|
   (EPOCNT)     | Number of PDL overflows at UUO level not recovered    |
                |-------------------------------------------------------|
   (EPOREC)     | Number of PDL overflows at UUO level recorded         |
                |-------------------------------------------------------|
   (MAXMAX)     | Highest legal value of CORMAX                         |
                |-------------------------------------------------------|
   (SYSKTM)     | Count-down timer for SET KSYS command                 |
                |-------------------------------------------------------|
   (CORMIN)     | Lower bound on CORMAX                                 |
                |-------------------------------------------------------|
   ABC          | Address break count on this CPU                       |
                |-------------------------------------------------------|
   ABA          | Address break address on this CPU                     |
                |-------------------------------------------------------|
   LJR          | Last job run on this CPU                              |
                |-------------------------------------------------------|




                                     20



                |-------------------------------------------------------|
   ODA          / Obsolete                                     (3 words)/
                |-------------------------------------------------------|
   STS          | Stop timesharing on this CPU.  Contains job number    |
                | that did TRPSET or RECON. UUO                         |
                |-------------------------------------------------------|
   RUN          | Operator-controlled scheduling bit for this CPU.      |
                | (Refer to GETTAB word %CVRUN for bit definitions)     |
                |-------------------------------------------------------|
   NUL          | Null time for this CPU in jiffies                     |
                |-------------------------------------------------------|
   EDI          | Number of Exec "don't care" interrupts                |
                |-------------------------------------------------------|
   JOB          | Current job on this CPU                               |
                |-------------------------------------------------------|
   OHT          | Overhead time for this CPU in jiffies                 |
                |-------------------------------------------------------|
   EVM          | Maximum amount of exec space for jobs mapped in exec  |
                | mode by LOCK UUO                                      |
                |-------------------------------------------------------|
   EVU          | Total exec virtual address space currently being used |
                | to map user segments                                  |
                |-------------------------------------------------------|
   LLC          | Number of times this CPU has looped waiting for other |
                | CPU                                                   |
                |-------------------------------------------------------|
   TUC          | Total number of UUOs on this CPU                      |
                |-------------------------------------------------------|
   TJC          | Total job context-switches                            |
                |-------------------------------------------------------|
   TNE          | Total NXMs                                            |
                |-------------------------------------------------------|
   SNE          | Total non-reproducible NXMs                           |
                |-------------------------------------------------------|
   NJA          | Total jobs crashed this NXM                           |
                |-------------------------------------------------------|
   MNA          | First address found with NXM                          |
                |-------------------------------------------------------|
   EBJ          | EBOX ticks/jiffy                                      |
                |-------------------------------------------------------|
   MBJ          | MBOX ticks/jiffy                                      |
                |-------------------------------------------------------|
   PBA          | Physical address with bad parity on last parity trap  |
                |-------------------------------------------------------|
   TBD          | Contents of bad word on last AR/ARX parity trap       |
                |-------------------------------------------------------|
   TGD          | Good contents of word after recovery from parity trap |
                |-------------------------------------------------------|
   NPT          | Total number of AR/ARX parity traps                   |
                |-------------------------------------------------------|




                                     21



                |-------------------------------------------------------|
   AER          | Results of RDERA on last parity/NXM interrupt         |
                |-------------------------------------------------------|
   PEF          | Results of CONI APR, on parity interrupt              |
                |-------------------------------------------------------|
   PSB          / Obsolete                                     (4 words)/
                |-------------------------------------------------------|
   PPC          | PC on last AR/ARX parity trap                         |
                |-------------------------------------------------------|
   PFW          | Page fail word on last AR/ARX parity trap             |
                |-------------------------------------------------------|
   HPT          | Number of hard AR/ARX parity traps                    |
                |-------------------------------------------------------|
   SAR          | Number of soft AR/ARX parity traps                    |
                |-------------------------------------------------------|
   PTP          | Number of page table parity traps                     |
                |-------------------------------------------------------|
   CSN          | Number of cache sweeps started                        |
                |-------------------------------------------------------|
   CLN          | Number of times scheduler skipped a job because the   |
                | job needed a cache sweep on another CPU               |
                |-------------------------------------------------------|
   CLT          | Number of jiffies CPU ran null job waiting for cache  |
                | sweep                                                 |
                |-------------------------------------------------------|
   CSD          | Number of times swap-out had to wait for cache sweep  |
                |-------------------------------------------------------|
   CRN          | Cache sweep request sweep count                       |
                |-------------------------------------------------------|
   CEC          | Number of non-recoverable AR/ARX parity errors        |
                | involving cache                                       |
                |-------------------------------------------------------|
   PTR          | Retry word for AR/ARX parity trap                     |
                |-------------------------------------------------------|
   TSD          | Obsolete                                              |
                |-------------------------------------------------------|
   REP          | Parity error/NXM reporting flag                       |
                | 0 = report NXM error, -1 = report parity error        |
                |-------------------------------------------------------|
   NDB          | Number of times this CPU's doorbell was rung          |
                |-------------------------------------------------------|
   SBR          | Status blocks read on this CPU (see SR.xxx in S.MAC)  |
                | Not used                 | Bit settings               |
                |-------------------------------------------------------|
   BPF          | Background performance analysis timer.  If meter is   |
                | running, contains negative of the number of clock     |
                | ticks to next performance analysis update.            |
                |-------------------------------------------------------|
   FBI          | File blocks input (read)                              |
                |-------------------------------------------------------|




                                     22



                |-------------------------------------------------------|
   FBO          | File blocks output (written)                          |
                |-------------------------------------------------------|
   SBI          | Swapping blocks input (read)                          |
                |-------------------------------------------------------|
   SBO          | Swapping blocks output (written)                      |
                |-------------------------------------------------------|
   SNC          | Number of CPU stopcodes                               |
                |-------------------------------------------------------|
   SND          | Number of DEBUG stopcodes                             |
                |-------------------------------------------------------|
   SNJ          | Number of JOB stopcodes                               |
                |-------------------------------------------------------|
   SJN          | Job number as last stopcode                           |
                |-------------------------------------------------------|
   SNM          | Name of last stopcode    | PC+1 of last stopcode      |
                |-------------------------------------------------------|
   SPN          | Program running at last stopcode                      |
                |-------------------------------------------------------|
   SPP          | PPN of user at last stopcode                          |
                |-------------------------------------------------------|
   STN          | TTY name at last stopcode                             |
                |-------------------------------------------------------|
   SUP          | User PC at time of last stopcode                      |
                |-------------------------------------------------------|
   SUU          | UUO at time of last stopcode                          |
                |-------------------------------------------------------|
   EJN          | Job number at last parity/NXM error                   |
                |-------------------------------------------------------|
   EPN          | Program at last parity/NXM error                      |
                |-------------------------------------------------------|
   PPI          | Results of CONI PI, on parity/NXM interrupt           |
                |-------------------------------------------------------|
   TPI          | Results of CONI PI, on page fail trap                 |
                |-------------------------------------------------------|
|  RSI          | Number of times scheduler interlock was requested     |
|               | when not owned.                                       |
|               |-------------------------------------------------------|
   TFI          | Number of tape frames read on this CPU                |
                |-------------------------------------------------------|
   TFO          | Number of tape frames written on this CPU             |
                |-------------------------------------------------------|
   SNI          | Number of stopcodes that did not dump (Events)        |
                |-------------------------------------------------------|
       (1)      / Response subtable                                     /
                |-------------------------------------------------------|
       (1)      / Memory parity subtable                                /
                |-------------------------------------------------------|
       (1)      / Memory NXM subtable                                   /
                |-------------------------------------------------------|




                                     23



                |-------------------------------------------------------|
       (1)      / CPU status block subtable                             /
                |-------------------------------------------------------|
       (1)      / SBDIAG status block subtable                          /
                |-------------------------------------------------------|
       (1)      / Device status block subtable                          /
                |-------------------------------------------------------|
       (1)      / KL background performance analysis subtable           /
                |-------------------------------------------------------|
   ADR          | Same as JBTADR (J) for current job                    |
   (JOBADR)     |                                                       |
                |-------------------------------------------------------|
   REL          | Highest relative address for current user             |
                |-------------------------------------------------------|
   PC           / Job PC when scheduler is called              (2 words)/
                |-------------------------------------------------------|
   XTM          | Time of last switch from monitor cycle to user job or |
                | back                                                  |
|               |-------------------------------------------------------|
|  QTM          | Current quantum run time                              |
|               |-------------------------------------------------------|
   LS2          | Additional lost time (fractional jiffy)               |
                |-------------------------------------------------------|
   NL2          | Additional null time (fractional jiffy)               |
                |-------------------------------------------------------|
   OH2          | Additional overhead time (fractional jiffy)           |
                |-------------------------------------------------------|
   TNT          | Time interval since last at clock level               |
                |-------------------------------------------------------|
   HTM          | Hung device time check                                |
                |-------------------------------------------------------|
   SEC          | Seconds left before doing once-a-minute code          |
                |-------------------------------------------------------|
   RCU          / Count of realtime CONSOs of skip chain       (6 words)/
                |-------------------------------------------------------|
   RIT          / Realtime initialization table                (6 words)/
                |-------------------------------------------------------|
   DMI          | Realtime dismiss instruction                          |
                |-------------------------------------------------------|
   CKF (2)      | Non-zero when CLK interrupt (PI 7) requested          |
   (CLKFLG)     |                                                       |
                |-------------------------------------------------------|
   TMF (3)      | Non-zero when APR clock ticked                        |
   (TIMEF)      |                                                       |
                |-------------------------------------------------------|
   SCF (4)      | Force scheduling from exec mode                       |
                |-------------------------------------------------------|
   CHT          | Flag to remember clock has ticked.  Used to call      |
                | queued I/O protocol routines.                         |
                |-------------------------------------------------------|




                                     24



                |-------------------------------------------------------|
   RTF          | Non-zero when realtime reschedule is required         |
   (SCDRTF)     |                                                       |
                |-------------------------------------------------------|
   ISF          | "In-scheduler" flag                                   |
                |-------------------------------------------------------|
   SUD          | Address of scan table used during last scheduler scan |
                |-------------------------------------------------------|
   HQU          | Nonzero if current job needs rescheduling for HPQ UUO |
                |-------------------------------------------------------|
   PLT          | Flag set if current clock tick is potentially lost    |
                | time                                                  |
                |-------------------------------------------------------|
   CLF          | Flag set if current clock tick is potentially lost    |
                | time due to the state of the stack                    |
                |-------------------------------------------------------|
   CL2          | Low order cache lost time                             |
                |-------------------------------------------------------|
   SDA          | Number cache sweeps for core deallocation             |
                |-------------------------------------------------------|
   CSR          | Cache sweep request flag for this CPU                 |
                |-------------------------------------------------------|
|  CSW          | Sweep serial number to wait for                       |
|               |-------------------------------------------------------|
   AEF          | APR error flag                                        |
                |-------------------------------------------------------|
   SAC          | Saved copy of .CPAEF                                  |
                |-------------------------------------------------------|
   APC          / Current PC on detecting APR error            (2 words)/
                |-------------------------------------------------------|
   MDP          / Memory parity error double-word PC                    /
                |-------------------------------------------------------|
   PPD          / AR/ARX double-word PC                                 /
                |-------------------------------------------------------|
   NJE          | Error in null job if non-zero                         |
                |-------------------------------------------------------|
   SFC          | Scheduler fairness count                              |
                |-------------------------------------------------------|
   SQF          | Non-zero if current job from subqueues                |
                |-------------------------------------------------------|
   APR          | Current user address break conditions                 |
                |-------------------------------------------------------|
   IPI          | Interval timer PI assignment                          |
                |-------------------------------------------------------|
|  DTT          | Minutes until next send date/time to RSX-20F          |
|               |-------------------------------------------------------|
|  EPW          / Saved examine/protection word for each DTE   (4 words)/
|               |-------------------------------------------------------|
|  ABF          | Exec address break flags (STOPCD type and break mask) |
|               |-------------------------------------------------------|




                                     25



|               |-------------------------------------------------------|
|  ABI          | Exec address break instruction to execute             |
|               |-------------------------------------------------------|
|  ABW          | Exec address break conditions                         |
|               |-------------------------------------------------------|
|  ABS          / Exec address break STOPCD               ($$MAXL words)/
|               |-------------------------------------------------------|
|  CN1          | CONSO mask for APR interrupts user wants to handle    |
|               |-------------------------------------------------------|
   SP           / Place to save P on APR interrupt             (2 words)/
                |-------------------------------------------------------|
   S17          / Place to save AC17 on CLK interrupt          (2 words)/
|               |-------------------------------------------------------|
|  A00          / Saved ACs on parity sweep                   (20 words)/
|               |-------------------------------------------------------|
   A17          | 20th (octal) word for storing ACs on parity trap      |
                |-------------------------------------------------------|
   LPP          | Last memory parity PC                                 |
                |-------------------------------------------------------|
   LSB          | Obsolete                                              |
                |-------------------------------------------------------|
   LCI          | Time of last parity/NXM interrupt caused by channel   |
                | reference                                             |
                |-------------------------------------------------------|
   PIP          | Pointer to real interrupt PC                          |
                |-------------------------------------------------------|
   PSP          | Parity/NXM sweep in progress on this CPU              |
                |-------------------------------------------------------|
   CHE          | Channel error reporting in progress on this CPU       |
                |-------------------------------------------------------|
   TCX          | Results of DATAI PAG, on error trap                   |
|               |-------------------------------------------------------|
|  PFT          | Pre-emptive page fault handler                        |
|               |-------------------------------------------------------|
   TCT          | Triad counter for 60Hz leap jiffies                   |
                |-------------------------------------------------------|
   PJB          | Owner of performance meter (job no.)                  |
                |-------------------------------------------------------|
   MJB          | Measured job of PERF.  UUO.                           |
                |-------------------------------------------------------|
   MJ1          | Job enable condition                                  |
                |-------------------------------------------------------|
   PMR          | Non-zero means PERF. meter is running                 |
                |-------------------------------------------------------|
   PAE          | Used to store PERF. analysis enables                  |
                |-------------------------------------------------------|
   PRQ          | Flag used in testing and giving PERF. meter away      |
                |-------------------------------------------------------|






                                     26



                |-------------------------------------------------------|
   APS          | Non-zero means ACCT and PERF. meters should be kept   |
                | in sync                                               |
                |-------------------------------------------------------|
   MM0          | "Virtual PERF meter's" high order memory reference    |
                | count                                                 |
                |-------------------------------------------------------|
   MM1          | Low order memory reference count                      |
                |-------------------------------------------------------|
   BPC          | Background performance analysis (BPA) sample interval |
                | (in ticks)                                            |
|               |-------------------------------------------------------|
|  BPI          | BPA saved PACTAB index                                |
|               |-------------------------------------------------------|
   BPT          / BPA saved RDTIME at start of current interval (2words)/
                |-------------------------------------------------------|
   TIM          | Clock interrupt flag for KL10s                        |
                |-------------------------------------------------------|
   ETM          | SOSN done on this location every minute, to make sure |
                | KL error chunks don't remain allocated                |
                |-------------------------------------------------------|
   EAD          |              KL error chunk addresses                 |
                | Addr of last KL error    | Addr of first KL error     |
                | chunk                    | chunk                      |
                |-------------------------------------------------------|
   KPB          / KLINIK parameter buffer                      (6 words)/
                |-------------------------------------------------------|
   20F          | Flags about RSX20F       | Count of characters        |
                | front end                | being output               |
                |-------------------------------------------------------|
   20S          / Space for incoming line speeds               (2 words)/
                |-------------------------------------------------------|
   20B          / Buffer for 16-bit data to RSX20F            (30 words)/
|               |-------------------------------------------------------|
|  20D          | Chain of device status messages                       |
|               |-------------------------------------------------------|
   PTH          | Parity/NXM trap occurred during cache sweep           |
                |-------------------------------------------------------|
   STE          | RDERA contents on sweep trap                          |
                |-------------------------------------------------------|
   PTF          | Number of page-table parity traps allowed between     |
                | clock ticks. (Used to crash system if too many.)      |
|               |-------------------------------------------------------|
|  IOP          | API function word on I/O page fail                    |
|               |-------------------------------------------------------|
|  IPG          | DATAI PAG, on I/O page fail                           |
|               |-------------------------------------------------------|
|  73           | Contents of AC block 7, AC 3 (IOP function word)      |
|               |-------------------------------------------------------|





                                     27



                |-------------------------------------------------------|
   CA1          / Power fail AC block 1 save area                       /
                |-------------------------------------------------------|
   CA2          / Power fail AC block 2 save area                       /
                |-------------------------------------------------------|
   CA3          | Power fail AC block 3 save area                       /
                |-------------------------------------------------------|
   CA4          / Power fail AC block 4 save area                       /
                |-------------------------------------------------------|
   CTQ          | SCNSER output queue header for CTY on this CPU        |
                | (for KL10, is header for all RSX20F lines)            |
                |-------------------------------------------------------|
   SWP          | Non-zero if swap request from another CPU             |
                |-------------------------------------------------------|
   QUE          | Queue of DDBs for I/O requests on other CPUs.         |
                | Emptied into CPUDSQ once per tick                     |
                |-------------------------------------------------------|
   QND          | Address of last DDB in .CPQUE                         |
                |-------------------------------------------------------|
   SWD          | Flag for FILIO cache sweeps                           |
                |-------------------------------------------------------|
   DRQ          | Disks on this CPU need requeuing. -1 if disk requests |
                | for this CPU need to be requeued to another CPU       |
                | because this one is dead.                             |
                |-------------------------------------------------------|
   TAP          | Tape waiting for cache sweep:                         |
                |     0 if no tape waiting for sweep                    |
                |     -1 if tape I/O waiting for sweep                  |
                |     0,,-1 if tape waiting, DSKTIC did sweep           |
                |-------------------------------------------------------|
   PIB          | Save PI state for NBFOFF                              |
                |-------------------------------------------------------|
   PIS          | Save PI state for SYSPIN                              |
                |-------------------------------------------------------|
   DPI          | Save PI state for DEVPIN                              |
                |-------------------------------------------------------|
   BTI          | Save PI state for BTSOFF                              |
|               |-------------------------------------------------------|
|  SCI          | Save  PI state for SCNOFF                             |
|               |-------------------------------------------------------|
|  NTI          | Save  PI state for NETOFF                             |
|               |-------------------------------------------------------|
|  DBI          | Saved PI state for DDBSRL                             |
|               |-------------------------------------------------------|
   IUT          | Uptime a second ago                                   |
                |-------------------------------------------------------|
   NTF          | NETSER software interrupt flag                        |
                |-------------------------------------------------------|
   QTS          / QUESER variables                            (23 words)/
                |-------------------------------------------------------|




                                     28



                |-------------------------------------------------------|
   CPG          | Result of DATAI PAG, done by SVSETS with bits set so  |
                | that DATAO restores current AC set                    |
                |-------------------------------------------------------|
   ACA          | Addr of 20 word block where SVSETS saved the AC set   |
                |-------------------------------------------------------|
   KPM          | PM.KPM is set if MCA25                                |
                |-------------------------------------------------------|
   JCH          | Job/context handle for the current job on this CPU    |
|               |-------------------------------------------------------|
|  CXJ          | Job owning CX on this CPU                             |
|               |-------------------------------------------------------|
|  DSN          / CFE disk drive serial numbers                (4 words)/
|               |-------------------------------------------------------|
|  EMU          / +0=PDL for calling DIE on EUE                (2 words)/
|               / +1=saved P before calling DIE                         /
|               |-------------------------------------------------------|
   PAT          / Patch space (here to next page boundary)              /
                +-------------------------------------------------------+

   Notes:

        1.  The subtables are defined by GETTAB symbols;  their  contents
                              _______ _______ _____ _______ ______ _            are listed in the TOPS-10 Monitor Calls Manual, Volume 2.

        2.  CKF-CLKFLG takes the place of a hardware interrupt flag.

        3.  TMF-TIMFF is set so clock interrupt routines know each time a
            jiffy has passed.

        4.  Normally, clock interrupts are dismissed when they  interrupt
            exec  mode.   SCF  is  set after monitor detects an error and
            desires to force rescheduling.





















                                     29



   7  CB -- CONNECTION BLOCK   7  CB -- CONNECTION BLOCK

   Description:   Contains information  describing  a  connection  to  an
                  application on a CI node.

                  Connection blocks are created and destroyed  by  SCASER
                  as  connections  to applications on CI nodes are opened
                  and closed.

   Defined in:    SCAPRM

   Used by:       KLPSER, MSCCOM, RAXKON, SCASER, SCSUUO

   See also:      PB, SB, PCB

   Symbol       Map
                +-------------------------------------------------------+
   .CBANB       | Address of: next Connection Block                     |
                |-------------------------------------------------------|
   .CBAPB       |             previous Connection Block                 |
                |-------------------------------------------------------|
   .CBPBK       |             Path Block (PB)                           |
                |-------------------------------------------------------|
   .CBSTS (1)   | Status information                                    |
                |-------------------------------------------------------|
   .CBFLG (2)   | Flags                                                 |
                |-------------------------------------------------------|
   .CBSCI       | Source connect ID                                     |
                |-------------------------------------------------------|
   .CBDCI       | Destination connect ID                                |
                |-------------------------------------------------------|
   .CBADR       | Address of routine to call when condition changes     |
                |-------------------------------------------------------|
   .CBBUF (3)   | Number of message and datagram buffers to queue       |
                |-------------------------------------------------------|
   .CBNWQ       | Address of next entry on work queue                   |
|               |-------------------------------------------------------|
|  .CBSPN       / Source process name                   (varying length)/
|               |-------------------------------------------------------|
|  .CBDPN       / Destination process name              (varying length)/
|               |-------------------------------------------------------|
   .CBDTA       / Connection data                       (varying length)/
                |-------------------------------------------------------|
   .CBREA (4)   | Destination and source disconnect reasons             |
                |-------------------------------------------------------|
   .CBRSP       | Expected response                                     |
                |-------------------------------------------------------|
   .CBMCD (5)   | Minimum send and receive credits                      |
                |-------------------------------------------------------|
   .CBSCD       | Send credit                                           |
                |-------------------------------------------------------|



                                     30



                |-------------------------------------------------------|
   .CBRCD       | Receive credit                                        |
                |-------------------------------------------------------|
   .CBPRC       | Pending receive credit                                |
                |-------------------------------------------------------|
   .CBRQC       | Credits outstanding                                   |
                |-------------------------------------------------------|
   .CBRTC       | Return credit                                         |
                |-------------------------------------------------------|
   .CBNPO       | Number of: packets on port command queue              |
                |-------------------------------------------------------|
   .CBDGR       |            datagram buffers on hardware queue         |
                |-------------------------------------------------------|
   .CBCDD       |            dropped datagrams                          |
                |-------------------------------------------------------|
   .CBLCK       | Interlock word                                        |
                |-------------------------------------------------------|
   .CBPND       | Flag word for credit requests in progress             |
                |-------------------------------------------------------|
   .CBJNB       | Address of: next CB in the job list                   |
                |-------------------------------------------------------|
   .CBJPB       |             previous CB in the job list               |
                |-------------------------------------------------------|
   .CBMGJ       | Number of: UUO message receive buffers queued         |
                |-------------------------------------------------------|
   .CBDGJ       |            datagram buffers in user space             |
                |-------------------------------------------------------|
   .CBJCH (6)   | Job number and JCH of job owning the connection       |
                |-------------------------------------------------------|
   .CBTMQ       | Pointer to: top of message pending queue              |
                |-------------------------------------------------------|
   .CBBMQ       |             bottom of message pending queue           |
                |-------------------------------------------------------|
   .CBTDQ       |             top of datagram available queue           |
                |-------------------------------------------------------|
   .CBBDQ       |             bottom of datagram available queue        |
                |-------------------------------------------------------|
   .CBTXQ       |             top of data request complete queue        |
                |-------------------------------------------------------|
   .CBBXQ       |             bottom of data request complete queue     |
                |-------------------------------------------------------|
   .CBTEQ       |             top of event queue                        |
                |-------------------------------------------------------|
   .CBBEQ       |             bottom of event queue                     |
                |-------------------------------------------------------|
   .CBTBQ       |             first buffer list descriptor block        |
                |-------------------------------------------------------|
   .CBBBQ       |             last buffer list descriptor block         |
                +-------------------------------------------------------+





                                     31



   Notes:

        1.  .CBSTS contains the Connection Block's state in the left half
            and the connection state in the right half.

        2.  The contents of .CBFLG consist of  bits  with  the  following
            meanings:

            ___       ______    _______            Bit       Symbol    Meaning

            0         CB.NCC    Needs credit notify.
            1         CB.JSY    CB is for UUO connection.
            2         CB.ABT    CB has been aborted.
            3         CB.RAP    CB has to be reaped.
            4         CB.DCL    This was a "don't-care" listener.
            5         CB.KIL    Fork has been killed.
            6         CB.MDC    Maintenance data CB.
            7         CB.CVC    VC was closed.
            8         CB.SOB    Stuck on buffers.
            9         CB.PTC    Protocol complete.
            10        CB.ERR    SC.ERR deferred.
            11        CB.DIS    SC.DIS deferred.
            12        CB.DRQ    SC.DRQ deferred.
            13        CB.SNM    SC.SNM deferred.
            10-13     CB.DEF    All deferred bits.
|  
|       3.  .CBBUF contains the number of message buffers to queue in the
|           left  half and the number of datagram buffers to queue in the
|           right half.
|  
|       4.  .CBREA contains the destination disconnect reason in the left
|           half and the source disconnect reason in the right half.
|  
|       5.  .CBMCD contains the minimum send credit in the left half  and
|           the minimum receive credit in the right half.
|  
|       6.  .CBJCH contains the job number in the left half and  the  job
|           context handle in the right half.
















                                     32



   8  CDT -- CONNECTED DEVICE TABLE   8  CDT -- CONNECTED DEVICE TABLE

   Description:   Used to point to  DDBs  of  devices  connected  to  the
                  Multiplexed  I/O  Facility  (MPX).  This table contains
                  the connected device's UDX number and DDB  address  and
                  is sorted by UDX number.

                  The left half of the DEVXTR word of the MPX DDB  points
                  to the CDT table.
|  
|  Defined in:    MPXSER
|  
|  Used by:       MPXSER

                Map
                +-------------------------------------------------------+
                | Size of table            | Number of free slots       |
                |-------------------------------------------------------|
                | UDX 1                    | DDB addr                   |
                |-------------------------------------------------------|
                | UDX 2                    | DDB addr                   |
                |-------------------------------------------------------|
                | UDX 2                    | DDB addr                   |
                |-------------------------------------------------------|
                                       .   .   .





























                                     33



   9  CHKTAB -- UUO CHECK BIT TABLE   9  CHKTAB -- UUO CHECK BIT TABLE

   Description:   Contains bits for checking UUOs that can be executed on
                  any   CPU  (UU.CP1),  for  checking  effective  address
                  (UU.EA) and for flagging LOOKUP, ENTER, and RENAME UUOs
                  (UU.LER).

                  The table is in the same order as UUOTAB so the  UUOTAB
                  index in AC T2 serves to get the CHKTAB entry.

                  If a check bit is  specified  for  the  requested  UUO,
                  UUOCON goes to the UUOCHK routine in VMSER.

   Defined in:    UUOCON


                Map
                +-------------------------------------------------------+
                | Check bit for 40         | Check bit for 41           |
                |-------------------------------------------------------|
                | 0                        | 0                          |
                |-------------------------------------------------------|
                | 0                        | 0                          |
                |-------------------------------------------------------|
                | 0                        | Check bit for 47           |
                |-------------------------------------------------------|
                                      .    .    .

   Because this table is accessed in half words, the bit definitions  are
   equivalent  for the right half and left half words.  The following bit
   definitions are based on the number of bits in the half word.

   ____      ______    ___________   Bits      Symbol    Description

   0,18      UU.CP1    UUO can be executed on any CPU.
   7,25      UU.LER    Argument list is a LOOKUP/ENTER/RENAME block.
   11,29     UU.EA     Check effective address.

















                                     34



   10  CHKTBC -- CALL AND CALLI UUO CHECK BIT TABLE   10  CHKTBC -- CALL AND CALLI UUO CHECK BIT TABLE

   Description:   Contains validity check bits for CALL and  CALLI  UUOs.
                  This  table  is  in  the  same  order as UCLJMP, so the
                  UCLJMP index in AC T2 serves to get the  CHKTBC  entry.
                  If  a  check  bit  is  specified for the requested UUO,
                  UUOCON goes to the UUOCHK routine in VMSER.

   Defined in:    UUOCON

   Used by:       UUOCON, CPNSER

                Map
                +-------------------------------------------------------+
                | Check bits for CALLI 0   | Check bits for CALLI 1     |
                |-------------------------------------------------------|
                | Check bits for CALLI 2   | Check bits for CALLI 3     |
                |-------------------------------------------------------|
                | Check bits for CALLI 4   | Check bits for CALLI 5     |
                |-------------------------------------------------------|
                                       .   .   .

   Bit Definitions:

   Because the  table  is  organized  as  halfwords,  the  following  bit
   definitions apply for both left halfwords and right halfwords.

   +--------------------------------------------------------------------+
   |CP1|   |   |NCL|WCC|NAL|LFT|LER|MNS|CEA|CAC| EA| Arg. list length   |
   +--------------------------------------------------------------------+

   ____      ______    ___________   Bits      Symbol    Description

   0,18      UU.CP1    UUO can be executed on any CPU.
   1,19      UU.SE1    UUO is executed in Section 1.
   3,21      UU.NCL    Negative argument (repeat) count is legal.
   4,22      UU.WCC    Working set can change.
   5,23      UU.NAL    Not allowed if locked.
   6,24      UU.LFT    Use left half of UUO for argument count.
   7,25      UU.LER    Argument list is a LOOKUP/ENTER/RENAME block.
   8,26      UU.MNS    User-supplied argument list length is a negative
                       value.
   9,27      UU.CEA    Use contents of effective address as list length.
   10,28     UU.CAC    Use contents of UUO ac as list length (modifiable
                       using UU.LFT).
   11,29     UU.EA     Check effective address.
   12-17               Length of user's argument list.
   30-35

   If neither UUO.CEA nor UU.CAC is set, the list length  is  taken  from
   the CHKTBC table.



                                     35



   11  CHN -- CHANNEL DATA BLOCK   11  CHN -- CHANNEL DATA BLOCK

   Description:   Contains information pertaining to all devices  on  one
                  data channel.

                  One Channel Data  Block  is  generated  dynamically  by
                  AUTCON  for each channel when the system is started and
                  when a new channel comes on-line.

   Defined in:    COMMOD
|  
|  Used by:       APRSER, AUTCON, ERRCON, FILFND, FILIO, RNXKON,  RPXKON,
|                 SYSINI, T78KON, TAPUUO, TDZKON, TMXKON, TMZKON, TX1KON

   The format of the prototype CHN is illustrated in the following table.
   Where  a different symbol is defined for right and left halfwords, the
   left half symbol is followed by two commas (,,)  and  the  right  half
   symbol is listed below it.

|  Note:  KL definition.


   Symbol       Map
                +-------------------------------------------------------+
|  CHNBSY       | Number pending requests on this channel ( -1 is idle) |
|               |-------------------------------------------------------|
|  CHNSYS       | Addr of next CHN,,0                                   |
|               |-------------------------------------------------------|
|  CHNLUE       | Addr of last UDB with soft or hard error              |
|               |-------------------------------------------------------|
|  CHNICW       | Initial control word on last error                    |
|               |-------------------------------------------------------|
|  CHNFCW       | Final control word after last error                   |
|               |-------------------------------------------------------|
|  CHNCW2       | Command word -2 on last error                         |
|               |-------------------------------------------------------|
|  CHNCW1       | Command word -1 on last error                         |
|               |-------------------------------------------------------|
|  CHNCW0       | Command word on last error                            |
|               |-------------------------------------------------------|
|  CHNDWZ       | Data word -2 on last error                            |
|               |-------------------------------------------------------|
|  CHNDW1       | Data word -1 on last error                            |
|               |-------------------------------------------------------|
|  CHNDW0       | Data word on last error                               |
|               |-------------------------------------------------------|
|  CHNMPE       | Number of memory parity errors                        |
|               |-------------------------------------------------------|
|  CHNDPE       | Number of data parity errors (from device)            |
|               |-------------------------------------------------------|




                                     36



|               |-------------------------------------------------------|
|  CHNNXM       | Number of non-existent memory errors or data          |
|               |-------------------------------------------------------|
|  CHNCSR       | Bits to request CPU to   | Last DDB Address           |
|  CHNLDE       | sweep core               |                            |
|               |-------------------------------------------------------|
|  CHNETW       | Expected termination control word of last error       |
                |-------------------------------------------------------|
   CHNECT       | Error count on current data transfer                  |
                |-------------------------------------------------------|
   CHNRCT       | Current recalibrate count                             |
                |-------------------------------------------------------|
   CHNQUE (2)   | First DDB in TWQ         | Job number of DDB          |
|               |-------------------------------------------------------|
|  CHNTYP *     | Channel type bits                                     |
|               |-------------------------------------------------------|
|  CHVIFP       | Initial fairness count for positioning                |
|               |-------------------------------------------------------|
|  CHNCFP       | Current fairness count for positioning                |
|               |-------------------------------------------------------|
|  CHVIFT       | Initial fairness count for transfers                  |
|               |-------------------------------------------------------|
|  CHBSCN       | Software channel number                               |
|               |-------------------------------------------------------|
   CHNCFT       | Current fairness count for transfers                  |
                |-------------------------------------------------------|
   CHNIFS       | Initial swapping fairness count                       |
                |-------------------------------------------------------|
   CHNCFS       | Current swapping fairness count                       |
                |-------------------------------------------------------|
   CHNNUM       | Number of blocks currently being transferred          |
                |-------------------------------------------------------|
   CHNQUL       | Length of XFER wait queue (TWQ)                       |
                |-------------------------------------------------------|
   CHNTCW       | Expected termination control word                     |
                |-------------------------------------------------------|
   CHNCUA       | Current unit active on channel                        |
|               |-------------------------------------------------------|
|  CHNDVC       | Autoconfiguration CPU/device word                     |
|               |-------------------------------------------------------|
|  CHNTBP       | AOBJN pointers to controllers on CHN                  |
|               |-------------------------------------------------------|
|  CHNKTB       / Controller table                            (20 words)/
|               +-------------------------------------------------------+
|  
|  * CHNTYP bytes are described on the next page.








                                     37



   Notes:

        1.  The errors referred to in the Channel  Data  Block  are  both
            soft and hard errors.

        2.  TWQ = Transfer Wait Queue

        3.  CHNRSC applies only to internal channels.

|  CHNTYP -- Channel Type Bits
|  
|               |-------------------------------------------------------|
|  CHNTYP       |22B|DX1|RH2|R11|LP2|CD2|MX|KLP|KNI|    |SWF|   IFP     |
|               |-------------------------------------------------------|
|                 0   1   2   3   4   5  6   7   8  9-16  17 18--------35

   ____                ____   Word                Byte
   ______    ___       ______    _______   Symbol    Bit       Symbol    Meaning

   CHB22B    0         CP.22B    This is a 22-bit channel.
             1         CP.DX1    This is a DX10 channel
             2         CP.RH2    This is an RH20 channel.
             3         CP.R11    This is a RH11.
             4         CP.LP2    This is a LP20.
             5         CP.CD2    This is a CD20.
             6         CP.MX     This channel can start multiple
                                 transfers at the same time (for example,
                                 CI disks).
             7         CP.KLP    This is a CI20 channel.
             8         CP.KNI    This is an NIA20 channel.
|            17        CP.SWF    Cache sweep must be done before
|                                interrupt exit in FILIO.
|  CHVIFP    18-35               Initial fairness count for positioning.





















                                     38



   12  CHTABL -- SPECIAL CHARACTER TABLE   12  CHTABL -- SPECIAL CHARACTER TABLE

   Description:   One table entry for each  ASCII  character,  specifying
                  characteristics  and,  in  some cases, the address of a
                  special action  routine  for  processing  the  received
                  character.

                  Indexed by the ASCII value of the character.

   Defined in:    SCNSER

   Used by:       PTYSER, SCNSER

   Format of left half of each word:

   |--------------------------------------------------------------------|
   |SPO|  |PUNC|2PC|EPAR|VPOS|CRE|FILO|INVL|CNC|CRET|RIA|ALT|FIL|UAE|BRK|
   |--------------------------------------------------------------------|
     0  1-3  4   5    6    7    8    9   10  11   12  13  14  15  16  17

   ___       _____     _______   Bit       Label     Meaning

   0         CHSPO     Requires special checking on output.
   1-3                 Undefined.
   4         CHPUNC    Punctuation character.
   5         CH2PC     8-bit character that has a multi-character 7-bit
                       expansion.
   6         CHEPAR    Character is even parity (see Note 1).
   7         CHVPOS    Vertical positioning simulated with line feeds.
   8         CHCRE     Gets CRLF after its <CTRL/x> echo.
   9         CHFILO    Bit for output filler routine (not in table).
   10        CHINVL    Reserved 9-bit ASCII character (should never be
                       received).
   11        CHCNC     This is <CTRL/C>.
   12        CHCRET    This is carriage return.
   13        CHRIA     RCV interrupt level action required (See Note 2).
   14        CHALT     This is an altmode.
   15        CHFIL     Requires fillers at some speeds.
   16        CHUAE     Echoes as <CTRL/x>.
   17        CHBRK     This is a break character.

   Right half of each word may  contain  the  address  of  a  routine  to
   process the character upon receipt.

   The format of CHTABL, the special character table, is described below.
   The  character's  ASCII  code  is followed by the printable characters
   (Char), the name of the character used in the code (Name), and the bit
   definitions  for  the  character  (Bits).   The  meanings  of  the bit
   settings are described on the previous page.  Note that  Bits  1-3  of
   each word are undefined.




                                     39



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   +----------------------------------------------------+
   000        NUL  | 1| 1|  | 1| 1|  |  |  |  |  | 1|  |  |  |  | RINU  |
                   |----------------------------------------------------|
   001   ^A   SOA  | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICA  |
                   |----------------------------------------------------|
   002(2) B   STX  | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICB  |
                   |----------------------------------------------------|
   003   ^C   ETX  | 1| 1|  | 1|  | 1|  |  | 1|  | 1|  |  | 1| 1| RICC  |
                   |----------------------------------------------------|
   004   ^D   EOT  | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICD  |
                   |----------------------------------------------------|
   005   ^E   ENQ  | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   006   ^F   ACK  | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   007   ^G   BEL  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   010   ^H   BS   | 1| 1|  |  |  |  |  |  |  |  | 1|  |  |  | 1| RIBSP |
                   |----------------------------------------------------|
   011   ^T   HT   | 1| 1|  | 1|  |  |  |  |  |  |  |  | 1|  |  |       |
                   |----------------------------------------------------|
   012   ^J   LF   | 1| 1|  | 1|  |  |  |  |  |  |  |  | 1|  | 1|       |
                   |----------------------------------------------------|
   013   ^K   VT   | 1| 1|  |  | 1|  |  |  |  |  |  |  | 1|  | 1|       |
                   |----------------------------------------------------|
   014   ^L   FF   | 1| 1|  | 1| 1|  |  |  |  |  |  |  | 1|  | 1|       |
                   |----------------------------------------------------|
   015   ^M   CR   | 1| 1|  |  |  |  |  |  |  | 1| 1|  | 1|  |  | RICM  |
                   |----------------------------------------------------|
   016   ^N   SO   | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   017   ^O   IS   | 1| 1|  | 1|  | 1|  |  |  |  | 1|  |  | 1|  | RICO  |
                   |----------------------------------------------------|
   020(2)^P   DLE  | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICP  |
                   |----------------------------------------------------|
   021   ^Q   DC1  | 1| 1|  | 1|  |  |  |  |  |  | 1|  | 1| 1|  | RICQ  |
                   |----------------------------------------------------|
   022   ^R   DC2  | 1| 1|  | 1|  |  |  |  |  |  | 1|  | 1| 1| 1| RICR  |
                   |----------------------------------------------------|
   023   ^S   DC3  | 1| 1|  |  |  |  |  |  |  |  | 1|  | 1| 1|  | RICS  |
                   |----------------------------------------------------|
   024   ^T   DC4  | 1| 1|  | 1|  |  |  |  |  |  | 1|  | 1| 1| 1| RICT  |
                   |----------------------------------------------------|
   025   ^U   NAK  | 1| 1|  |  |  | 1|  |  |  |  | 1|  |  | 1| 1| RICU  |
                   |----------------------------------------------------|
   026   ^V   SYN  | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|




                                     40



   _____  ____  ____      ___ ______   ASCII  Char  Name      Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   027   ^W   ETB  | 1| 1|  | 1|  |  |  |  |  |  | 1|  |  | 1| 1| RIDEL |
                   |----------------------------------------------------|
   030   ^X   CAN  | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   031   ^Y   EM   | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   032   ^Z   SUB  | 1| 1|  |  |  | 1|  |  |  |  |  |  |  | 1| 1|       |
                   |----------------------------------------------------|
   033    $   ESC  | 1| 1|  | 1|  |  |  |  |  |  | 1| 1|  |  | 1| RIALT |
                   |----------------------------------------------------|
   034   ^\    FS  | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   035   ^]    GS  | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   036   ^^    RS  | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   037   ^_    US  | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                   |----------------------------------------------------|
   040   (Space)   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   041    |        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   042    "        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   043    #        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   044    $        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   045    %        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   046    &        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   047    '        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   050    (        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   051    )        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   052    *        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   053    +        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   054    ,        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   055    -        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     41



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   056    .        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   057    /        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   060    0        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   061    1        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   062    2        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   063    3        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   064    4        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   065    5        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   066    6        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   067    7        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   070    8        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   071    9        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   072    :        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   073    ;        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   074    <        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   075    =        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   076    >        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   077    ?        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   100    @        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   101    A        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   102    B        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   103    C        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   104    D        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     42



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   105    E        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   106    F        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   107    G        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   110    H        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   111    I        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   112    J        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   113    K        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   114    L        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   115    M        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   116    N        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   117    O        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   120    P        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   121    Q        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   122    R        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   123    S        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   124    T        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   125    U        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   126    V        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   127    W        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   130    X        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   131    Y        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   132    Z        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   133    [        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     43



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   134    \        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   135    ]        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   136    ^        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   137    _        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   140    `        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   141    a        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   142    b        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   143    c        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   144    d        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   145    e        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   146    f        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   147    g        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   150    h        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   151    i        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   152    j        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   153    k        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   154    l        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   155    m        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   156    n        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   157    o        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   160    p        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   161    q        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   162    r        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     44



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   163    s        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   164    t        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   165    u        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   166    v        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   167    w        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   170    x        |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   171    y        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   172    z        |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   173    {        |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   174    |        |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   175(3) }        | 1| 1|  | 1|  |  |  |  |  |  | 1| 1|  |  |  | RIALT |
                   |----------------------------------------------------|
   176(3) ~        | 1| 1|  | 1|  |  |  |  |  |  | 1| 1|  |  |  | RIALT |
                   |----------------------------------------------------|
   177        DEL  | 1| 1|  |  |  |  |  |  |  |  | 1|  |  |  | 1| RIDEL |
                   |----------------------------------------------------|
   200 (reserved)  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   201 (reserved)  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   202 (reserved)  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   203 (reserved)  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   204        IND  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   205        NEL  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   206        SSA  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   207        ESA  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   210        HTS  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   211        HTJ  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|




                                     45



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   212        VTS  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   213        PLD  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   214        PLU  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   215        RI   | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   216        SS2  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   217        SS3  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   220        DCS  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   221        PU1  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   222        PU2  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   223        STS  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   224        CCH  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   225        MW   | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   226        SPA  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   227        EPA  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   230 (reserved)  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   231 (reserved)  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   232 (reserved)  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   233        CSI  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   234        ST   | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   235        OSC  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   236        PM   | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   237        APC  | 1| 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   240 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|




                                     46



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   241        SP03 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   242        SC04 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   243        SC02 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   244 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   245        SC05 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   246 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   247        SM24 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   250        SC01 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   251        SM52 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   252        SM21 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   253        SP17 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   254 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   255 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   256 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   257 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   260        SM19 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   261        SA02 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   262        NS02 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   263        NS03 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   264 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   265        SM17 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   266        SM25 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   267        SM26 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     47



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   270 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   271        NS01 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   272        SM20 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   273        SP18 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   274        NF04 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   275        NF01 |  | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   276 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   277        SP16 |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   300        LA14 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   301        LA12 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   302        LA16 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   303        LA20 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   304        LA18 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   305        LA28 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   306        LA52 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   307        LC42 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   310        LE14 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   311        LE12 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   312        LE16 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   313        LE18 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   314        LI14 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   315        LI12 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   316        LI16 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     48



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   317        LI18 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   320 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   321        LN20 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   322        LO14 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   323        LO12 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   324        LO16 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   325        LO20 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   326        LO18 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   327        LO52 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   330        LO62 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   331        LU14 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   332        LU12 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   333        LU16 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   334        LU18 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   335        LY18 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   336 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   337        LS61 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   340        LA13 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   341        LA11 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   342        LA15 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   343        LA19 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   344        LA17 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   345        LA27 |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     49



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   346        LA51 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   347        LC41 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   350        LE13 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   351        LE11 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   352        LE15 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   353        LE17 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   354        LI13 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   355        LI11 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   356        LI15 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   357        LI17 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   360 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   361        LN19 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   362        LO13 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   363        LO11 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   364        LO15 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   365        LO19 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   366        LO17 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   367        LO51 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   370        LO61 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   371        LU13 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   372        LU11 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   373        LU15 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   374        LU17 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|




                                     50



   _____  ____  ____   ___ ______   ASCII  Char  Name   Map (Bits)
   ____   Code
                     0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                   |----------------------------------------------------|
   375        LY17 |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |       |
                   |----------------------------------------------------|
   376 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   |----------------------------------------------------|
   377 (reserved)  | 1| 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|       |
                   +----------------------------------------------------+

   Notes:

        1.  CHEPAR is set for entries whose ASCII character code contains
            an even number of 1 bits.

        2.  Entries 2 and 20 have CHRIA and the dispatch address set only
            if FTMIC is non-zero.

        3.  Character codes 175 (}) and 176 (~) are  converted  to  ASCII
            code 33 (ESC) only if SET TTY ALTMODE is in effect.

































                                     51



   13  CHREQV -- CHARACTER EQUIVALENCE TABLE   13  CHREQV -- CHARACTER EQUIVALENCE TABLE

   Description:   Used by SCNSER to translate 8-bit ASCII  characters  to
                  7-bit ASCII.  This table is indexed by character, where
                  the offset is obtained from CHTABL,  and  is  used  for
                  translation   only  when  the  octal  code  is  between
                  200-377.

                  The  Equivalence  Tables  (CHREQV   and   METEQV)   are
                  formatted in 9-bit bytes, each byte containing an octal
                  code for a 7-bit ASCII characters.  The bytes are  read
                  in  reverse.   Therefore,  they are listed from left to
                  right in the following table.

   Defined in:    SCNSER

   Used by:       SCNSER

   ASCII   Name     
   Code               Byte 4      Byte 3      Byte 2       Byte 1
                   +----------------------------------------------------+
   200 (reserved)  |   033      |  100      |    000     |    000       |
                   |----------------------------------------------------|
   201 (reserved)  |   033      |  101      |    000     |    000       |
                   |----------------------------------------------------|
   202 (reserved)  |   033      |  102      |    000     |    000       |
                   |----------------------------------------------------|
   203 (reserved)  |   033      |  103      |    000     |    000       |
                   |----------------------------------------------------|
   204     IND     |   033      |  104      |    000     |    000       |
                   |----------------------------------------------------|
   205     NEL     |   033      |  105      |    000     |    000       |
                   |----------------------------------------------------|
   206     SSA     |   033      |  106      |    000     |    000       |
                   |----------------------------------------------------|
   207     ESA     |   033      |  107      |    000     |    000       |
                   |----------------------------------------------------|
   210     HTS     |   033      |  110      |    000     |    000       |
                   |----------------------------------------------------|
   211     HTJ     |   033      |  111      |    000     |    000       |
                   |----------------------------------------------------|
   212     VTS     |   033      |  112      |    000     |    000       |
                   |----------------------------------------------------|
   213     PLD     |   033      |  113      |    000     |    000       |
                   |----------------------------------------------------|
   214     PLU     |   033      |  114      |    000     |    000       |
                   |----------------------------------------------------|
   215     RI      |   033      |  115      |    000     |    000       |
                   |----------------------------------------------------|
   216     SS2     |   033      |  116      |    000     |    000       |
                   |----------------------------------------------------|



                                     52



   ASCII   Name     
   Code               Byte 4      Byte 3      Byte 2       Byte 1
                   |----------------------------------------------------|
   217     SS3     |   033      |  117      |    000     |    000       |
                   |----------------------------------------------------|
   220     DCS     |   033      |  120      |    000     |    000       |
                   |----------------------------------------------------|
   221     PU1     |   033      |  121      |    000     |    000       |
                   |----------------------------------------------------|
   222     PU2     |   033      |  122      |    000     |    000       |
                   |----------------------------------------------------|
   223     STS     |   033      |  123      |    000     |    000       |
                   |----------------------------------------------------|
   224     CCH     |   033      |  124      |    000     |    000       |
                   |----------------------------------------------------|
   225     MW      |   033      |  125      |    000     |    000       |
                   |----------------------------------------------------|
   226     SPA     |   033      |  126      |    000     |    000       |
                   |----------------------------------------------------|
   227     EPA     |   033      |  127      |    000     |    000       |
                   |----------------------------------------------------|
   230 (reserved)  |   033      |  130      |    000     |    000       |
                   |----------------------------------------------------|
   231 (reserved)  |   033      |  131      |    000     |    000       |
                   |----------------------------------------------------|
   232 (reserved)  |   033      |  132      |    000     |    000       |
                   |----------------------------------------------------|
   233     CSI     |   033      |  133      |    000     |    000       |
                   |----------------------------------------------------|
   234     ST      |   033      |  134      |    000     |    000       |
                   |----------------------------------------------------|
   235     OSC     |   033      |  135      |    000     |    000       |
                   |----------------------------------------------------|
   236     PM      |   033      |  136      |    000     |    000       |
                   |----------------------------------------------------|
   237     APC     |   033      |  137      |    000     |    000       |
                   |----------------------------------------------------|
   240 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   241     SP03    |   041      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   242     SC04    |   174      |  010      |    143     |    000       |
                   |----------------------------------------------------|
   243     SC02    |   075      |  010      |    114     |    000       |
                   |----------------------------------------------------|
   244 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|







                                     53



   ASCII   Name     
   Code               Byte 4      Byte 3      Byte 2       Byte 1
                   |----------------------------------------------------|
   245     SC05    |   075      |  010      |    131     |    000       |
                   |----------------------------------------------------|
   246 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   247     SM24    |   123      |  143      |    000     |    000       |
                   |----------------------------------------------------|
   250     SC01    |   170      |  010      |    117     |    000       |
                   |----------------------------------------------------|
   251     SM52    |   050      |  103      |    051     |    000       |
                   |----------------------------------------------------|
   252     SM21    |   137      |  010      |    141     |    000       |
                   |----------------------------------------------------|
   253     SP17    |   074      |  074      |    000     |    000       |
                   |----------------------------------------------------|
   254 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   255 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   256 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   257 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   260     SM19    |   157      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   261     SA02    |   137      |  010      |    053     |    000       |
                   |----------------------------------------------------|
   262     NS02    |   062      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   263     NS03    |   063      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   264 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   265     SM17    |   165      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   266     SM25    |   120      |  162      |    000     |    000       |
                   |----------------------------------------------------|
   267     SM26    |   056      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   270 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   271     NS01    |   061      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   272     SM20    |   137      |  010      |    157     |    000       |
                   |----------------------------------------------------|
   273     SP18    |   076      |  076      |    000     |    000       |
                   |----------------------------------------------------|





                                     54



   ASCII   Name     
   Code               Byte 4      Byte 3      Byte 2       Byte 1
                   |----------------------------------------------------|
   274     NF04    |   061      |  057      |    064     |    000       |
                   |----------------------------------------------------|
   275     NF01    |   061      |  057      |    062     |    000       |
                   |----------------------------------------------------|
   276 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   277     SP16    |   077      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   300     LA14    |   101      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   301     LA12    |   101      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   302     LA16    |   101      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   303     LA20    |   101      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   304     LA18    |   101      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   305     LA28    |   101      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   306     LA52    |   101      |  105      |    000     |    000       |
                   |----------------------------------------------------|
   307     LC42    |   054      |  010      |    103     |    000       |
                   |----------------------------------------------------|
   310     LE14    |   105      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   311     LE12    |   105      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   312     LE16    |   105      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   313     LE18    |   105      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   314     LI14    |   111      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   315     LI12    |   111      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   316     LI16    |   111      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   317     LI18    |   111      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   320 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   321     LN20    |   116      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   322     LO14    |   117      |  000      |    000     |    000       |
                   |----------------------------------------------------|





                                     55



   ASCII   Name     
   Code               Byte 4      Byte 3      Byte 2       Byte 1
                   |----------------------------------------------------|
   323     LO12    |   117      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   324     LO16    |   117      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   325     LO20    |   117      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   326     LO18    |   117      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   327     LO52    |   117      |  105      |    000     |    000       |
                   |----------------------------------------------------|
   330     LO62    |   057      |  010      |    117     |    000       |
                   |----------------------------------------------------|
   331     LU14    |   125      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   332     LU12    |   125      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   333     LU16    |   125      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   334     LU18    |   125      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   335     LY18    |   131      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   336 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   337     LS61    |   163      |  163      |    000     |    000       |
                   |----------------------------------------------------|
   340     LA13    |   140      |  010      |    141     |    000       |
                   |----------------------------------------------------|
   341     LA11    |   047      |  010      |    141     |    000       |
                   |----------------------------------------------------|
   342     LA15    |   136      |  010      |    141     |    000       |
                   |----------------------------------------------------|
   343     LA19    |   176      |  010      |    141     |    000       |
                   |----------------------------------------------------|
   344     LA17    |   042      |  010      |    141     |    000       |
                   |----------------------------------------------------|
   345     LA27    |   141      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   346     LA51    |   141      |  145      |    000     |    000       |
                   |----------------------------------------------------|
   347     LC41    |   054      |  010      |    143     |    000       |
                   |----------------------------------------------------|
   350     LE13    |   140      |  010      |    145     |    000       |
                   |----------------------------------------------------|
   351     LE11    |   047      |  010      |    145     |    000       |
                   |----------------------------------------------------|





                                     56



   ASCII   Name     
   Code               Byte 4      Byte 3      Byte 2       Byte 1
                   |----------------------------------------------------|
   352     LE15    |   136      |  010      |    145     |    000       |
                   |----------------------------------------------------|
   353     LE17    |   042      |  010      |    145     |    000       |
                   |----------------------------------------------------|
   354     LI13    |   140      |  010      |    151     |    000       |
                   |----------------------------------------------------|
   355     LI11    |   047      |  010      |    151     |    000       |
                   |----------------------------------------------------|
   356     LI15    |   136      |  010      |    151     |    000       |
                   |----------------------------------------------------|
   357     LI17    |   042      |  010      |    151     |    000       |
                   |----------------------------------------------------|
   360 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   361     LN19    |   176      |  010      |    156     |    000       |
                   |----------------------------------------------------|
   362     LO13    |   140      |  010      |    157     |    000       |
                   |----------------------------------------------------|
   363     LO11    |   047      |  010      |    157     |    000       |
                   |----------------------------------------------------|
   364     LO15    |   136      |  010      |    157     |    000       |
                   |----------------------------------------------------|
   365     LO19    |   176      |  010      |    157     |    000       |
                   |----------------------------------------------------|
   366     LO17    |   042      |  010      |    157     |    000       |
                   |----------------------------------------------------|
   367     LO51    |   157      |  145      |    000     |    000       |
                   |----------------------------------------------------|
   370     LO61    |   057      |  010      |    157     |    000       |
                   |----------------------------------------------------|
   371     LU13    |   140      |  010      |    165     |    000       |
                   |----------------------------------------------------|
   372     LU11    |   047      |  010      |    165     |    000       |
                   |----------------------------------------------------|
   373     LU15    |   136      |  010      |    165     |    000       |
                   |----------------------------------------------------|
   374     LU17    |   042      |  010      |    165     |    000       |
                   |----------------------------------------------------|
   375     LY17    |   042      |  010      |    171     |    000       |
                   |----------------------------------------------------|
   376 (reserved)  |   137      |  000      |    000     |    000       |
                   |----------------------------------------------------|
   377 (reserved)  |   137      |  000      |    000     |    000       |
                   +----------------------------------------------------+







                                     57



   14  CIPWT -- CLOCK REQUEST QUEUE   14  CIPWT -- CLOCK REQUEST QUEUE

   Description:   This table allows a monitor routine to be run  after  a
                  specific time interval.  One entry for each job number,
                  plus three more.

                  Position of entry in table is of no  importance.   Each
                  entry occupies 2 words.

                  Each count is decremented by clock-level service in the
                  monitor.   When  any  countdown  reaches  0,  (or  goes
                  negative), the contents of the second word of the entry
                  are  put  into T1 and a PUSHJ is done to the address in
                  the left half of the first word.

                  CLOCK is a 36 bit byte pointer to  the  highest  in-use
                  entry.   Routines  which  make requests to be stored in
                  this  table  reference  CLOCK.   When   an   entry   is
                  eliminated  from  the  table,  the last entry is copied
                  into its place, and CLOCK is decremented.

   Defined in:    COMMON

   Used by:       CLOCK1, DISSER, DLSINT, ERRCON, FILIO, PSISER,  RPXKON,
                  SCNSER, SYSINI, UUOCON, VBCSER

   Format of each two-word entry:

   |---------------------------------------------------------------|
   | Routine address              | Count down timer               |
   |---------------------------------------------------------------|
   | 0| 1-3 | 4 | 5---------------------------------------------35 |
   |---------------------------------------------------------------|

   The bits in the second word of each entry are defined as follows:

   ___       _______   Bit       Meaning

   0         Request is CPU-specific.
   1-3       CPU number.
   4         Scanned by CLOCK1.
   5-35      Data.












                                     58



   15  COMTAB, COMTB2, CSTTAB -- COMMAND TABLE, NAMES OF COMMANDS|  15  COMTAB, COMTB2, CSTTAB -- COMMAND TABLE, NAMES OF COMMANDS
|  
|  Description:   Specify legal command names.
|  
                  _____ ____    ________ _____ ___          ______ _____|                 Table Name    Contains names for          GETTAB Table
|  
|                 COMTAB        Standard monitor commands   .GTCOM (30)
|                 COMTB2        Standard SET commands       .GTCM2 (43)
|                 CSTTAB        Customer-defined commands   .GTCCM (204)
|  
|  
|  Defined in:    COMMON
|  
|  Used by:       UUOCON, COMCON
|  
|  See also:      DISP, UNQTAB
|  
|  Format:
|  
|  +---------------------------------------------------------------+
|  |                    SIXBIT    /    CMD1     /                  |
|  |---------------------------------------------------------------|
|  |                    SIXBIT    /    CMD2     /                  |
|  |---------------------------------------------------------------|
|  |                    SIXBIT    /    CMD3     /                  |
|  |---------------------------------------------------------------|
|                             .   .   .
|  
|  Notes:
|  
|       Each command name table has two tables associated with  it.   One
|       table  contains  the  dispatch  address of the monitor routine to
|       handle each command, while the other table contains bits defining
|       the  characteristics of the commands.  The correspondance between
|       tables is as follows:
|  
        _______ _____    ________ _____    _______________ _____|       Command Table    Dispatch Table    Characteristics Table
|  
|       COMTAB           DISP              UNQTAB
|       COMTB2           DISP2             UNQTB2
|       CSTTAB           DISPC             UNQTBC
|  
|  Entries in the dispatch and characteristics tables correspond  to  the
|  command  names  in  the  associated  command  table.  For example, the
|  offset of the command in COMTAB  is  the  index  into  both  DISP  and
|  UNQTAB.








                                     59



   16  CSRTAB -- CONTEXT SAVE AND RESTORE TRANSLATION TABLE   16  CSRTAB -- CONTEXT SAVE AND RESTORE TRANSLATION TABLE

   Description:   CSRTAB is used by the context service  module  (CTXSER)
                  to save and restore certain job parameters.

                  Each word in the CSRTAB corresponds to information that
                  must be saved and restored with each context switch for
                  every job.  When the  information  is  contained  in  a
                  single  word  (for  example, the user PC for <CTRL/T>),
                  the information is pointed to by the address in CSRTAB.

                  Other types of information (such as the TTY DDB) cannot
                  be  saved  and  restored  in a single word.  The CSRTAB
                  entry for this kind of information contains a flag (bit
                  0 is set) to indicate that the effective address of the
                  entry is the  location  of  a  subroutine  to  save  or
                  restore that information.

                  Entries in CSRTAB are  defined  using  the  CTX  macro.
                  Using  CSRTAB,  data  is  copied  to  and  from the job
                  parameter portion  of  a  context  block,  starting  at
                  offset .CTBPR (Beginning of the Parameter Block).  Each
                  offset in the parameter block is assigned a name by the
                  CTX macro.

   Defined in:    CTXSER

   Used by:       CTXSER

   Format of CSRTAB Entry:

   +------------------------------------------------------------+
   | S | Z |              | @ | (AC) |      Address             |
   +------------------------------------------------------------+


   Every CSRTAB entry contains the following fields:

   ___       ______    _______   Bit       Symbol    Meaning

   0         S         A subroutine is used to save or restore the data.
   1         Z         Bit 0 is off, and the data word is zeroed after
                       the save.
   13        @         Bit 0 is off, and hardware indirection is used to
                       find the data word.
   14-17     (AC)      Bit 0 is off, and hardware indexing is used to
                       find the data word.
   18-35     Address   If bit 0 is off, this address is used to calculate
                       the effective address of the data word.  If bit 0
                       is on, this is the location of the subroutine to
                       save or restore data.



                                     60



   Format of the  CSRTAB  table  is  illustrated  below.   Each  word  is
   described by:

            ______         o  Symbol is the symbol associated with the offset.

                                      _         o  The setting of bit 0, the S flag described above.

                                      _         o  The setting of bit 1, the Z flag described above.

            _______         o  Address is the symbol associated  with  the  word  where  job
            parameters are saved.

         o  Job information saved in the word at Address.


   Symbol     Bits      Address     Job Information
                0   1   
              +---------------------------------------------------------+
   .CXSYS     | 1 | 0 |     CSRSYS |  "From SYS" bit                    |
              |---------------------------------------------------------|
   .CXMON     | 1 | 0 |     CSRMON |  Monitor mode bit, and others      |
              |---------------------------------------------------------|
   .CXSCX     | 0 | 1 | .PDSCX (W) |  SAVCTX word                       |
|             |---------------------------------------------------------|
|  .CXBKM     | 1 | 0 |     CSRBKM |  Terminal break mask               |
|             |   |   |            |  (saves 40(8) words)               |
|             |---------------------------------------------------------|
|  .CXPIA     | 0 | 1 | JBTPIA (J) |  PSI data base (PIT) address       |
|             |---------------------------------------------------------|
   .CXIPC     | 1 | 0 |     CSRIPC |  IPCF data base (saves 11 words)   |
              |---------------------------------------------------------|
   .CXENQ     | 1 | 0 |     CSRENQ |  ENQ/DEQ queue chain address       |
              |---------------------------------------------------------|
   .CXTTY     | 1 | 0 |     CSRTTY |  TTY DDB (save 13 words)           |
              |---------------------------------------------------------|
   .CXSTS     | 1 | 0 |     CSRSTS |  Job status                        |
|             |---------------------------------------------------------|
|  .CXST2     | 1 | 0 |     CSRST2 |  Second job status word            |
|             |---------------------------------------------------------|
   .CXSWP     | 0 | 0 | JBTSWP (J) |  Swapped-out disk address          |
              |---------------------------------------------------------|
   .CXIMI     | 0 | 0 | JBTIMI (J) |  Swapped-in image size             |
              |---------------------------------------------------------|
   .CXIMO     | 0 | 0 | JBTIMO (J) |  Swapped-out image size            |
|             |---------------------------------------------------------|
|  .CXSGN     | 1 | 0 |     CSRSGN |  High segment list address         |
|             |---------------------------------------------------------|
   .CXAD2     | 1 | 0 |     CSRAD2 |  JBTAD2                            |
              |---------------------------------------------------------|
   .CXPDB     | 0 | 0 | JBTPDB (J) |  Number of funny pages             |
              |---------------------------------------------------------|



                                     61



   Symbol     Bits      Address     Job Information
                0   1   
              |---------------------------------------------------------|
   .CXCHK     | 0 | 0 | JBTCHK (J) |  Swapped-out checksum              |
|             |---------------------------------------------------------|
|  .CXPRG     | 0 | 0 | JBTNAM (J) |  Name of running program           |
|             |---------------------------------------------------------|
   .CXPC      | 0 | 0 |  JBTPC (J) |  User PC for <CTRL/T>              |
              |---------------------------------------------------------|
   .CXDDB     | 0 | 0 | JBTDDB (J) |  I/O wait DDB                      |
              |---------------------------------------------------------|
   .CXNAM     | 0 | 0 | .PDNAM (W) |  Program file name                 |
              |---------------------------------------------------------|
   .CXSTR     | 0 | 0 | .PDSTR (W) |  Program's file structure          |
              |---------------------------------------------------------|
   .CXDIR     | 0 | 0 | .PDDIR (W) |  Program's PPN                     |
|             |---------------------------------------------------------|
|  .CXSFD     | 0 | 0 | .PDSFD (W) |  Program's SFD(s) (saves 5 words)  |
|             |---------------------------------------------------------|
   .CXSTM     | 0 | 0 | .PDSTM (W) |  Time of last RESET                |
              |---------------------------------------------------------|
   .CXCMN     | 0 | 0 | .PDCMN (W) |  Ptr to user-defined commands      |
              |---------------------------------------------------------|
   .CXUNQ     | 0 | 0 | .PDSJB (W) |  Ptr to UNQTAB for user commands   |
              |---------------------------------------------------------|
   .CXSJB     | 0 | 1 | .PDSJB (W) |  DECnet data base                  |
|             |---------------------------------------------------------|
|  .CXABS     | 0 | 1 | .PDABS (W) |  KL10 only, address break settings |
|             |---------------------------------------------------------|
|  .CXTMI     | 0 | 1 | .PDTMI (W) |  Virtual timer trap interval       |
|             |---------------------------------------------------------|
|  .CXTMC     | 0 | 1 | .PDTMC (W) |  Virtual timer counter             |
|             |---------------------------------------------------------|
|  .CXSPS     | 1 | 0 |     CSRSPS |  SET CPU command bits              |
|             |---------------------------------------------------------|
|  .CXVRT     | 0 | 0 | JBTVIR (J) |  Program size for <CTRL/T>         |
|             |---------------------------------------------------------|
|  .CXCVL     | 0 | 0 | .PDCVL (W) |  Current phys. and virt. limits    |
|             |---------------------------------------------------------|
|  .CXPVT     | 0 | 0 | .PDVRT (W) |  Fault rate                        |
|             |---------------------------------------------------------|
   .CXLBS     | 1 | 0 |     CSRLBS |  UUO setting for BIGBUF            |
              |---------------------------------------------------------|
   .CXRTD     | 1 | 0 |     CSRRTD |  HPQ and HIBER settings            |
|             |---------------------------------------------------------|
|  .CXSCS     | 0 | 0 | .PDSCS (W) |  SCS. UUO data address             |
|             |---------------------------------------------------------|
|  .CXEJB     | 0 | 1 | .PDEJB (W) |  ETHNT. UUO data address           |
|             |---------------------------------------------------------|
   .CXPAT     | 1 | 0 |     CSRPAT |  Patch space                       |
              +---------------------------------------------------------+



                                     62



   In the table illustrated above, the fields are:

            ______         o  Symbol is the symbol name associated with the  entry  in  the
            table.  The symbols are formatted as .CXxxx, where xxx is the
            unique, three-character name, and is added to .CX by the  CTX
            macro.

            ___ _         o  Bit 0 is the flag, indicating whether a data word is saved or
            restored,  or  whether  a subroutine is called to perform the
            save or restore operation.  If bit 0 is on, the subroutine is
|           pointed to by the symbolic address.  It is called at offset 0
|           for a save and offset 1 for a restore.

            ___ _         o  Bit 1 indicates whether a data word is  to  be  preserved  or
            zeroed  after  a  save or restore operation.  If bit 0 is on,
            bit 1 must be off.  If bit 1 is on, the data word referred to
            by the symbolic address is zeroed after the save operation.

                _______         o  The address in the table is the symbolic location of the data
            word  or  subroutine  (depending  on  bit 0).  Data words are
            subject to indirection and  indexing,  as  indicated  by  the
            presence  of  (J)  or  (W)  after  the  symbol  above.  A (J)
            indicates the address is the location of a job table, and the
            exact  data  word to be saved/restored found by indexing into
            the table using the job number ("J" = Job).  A (W)  indicates
            the data word is in the job's Process Data Block (PDB); it is
            found using the location of the data word in the PDB.

                ___ ___________         o  The job information column in  the  above  table  contains  a
            description  of  the  type  of job information to be saved or
            restored.

            Most of the entries in CSRTAB save one data  word.   However,
            certain  subroutines save more that one word, as indicated in
            the description of the job information  in  the  table  shown
            above.


















                                     63



   17  DDB -- DEVICE DATA BLOCK   17  DDB -- DEVICE DATA BLOCK

   Description:   Contains information needed to perform I/O  operations.
                  One  such  block exists for each device or, in the case
                  of disk, one for each INIT or ASSIGN.

                  Number of entries in the DDB varies with the device.

                  Labels for DDBs are  defined  in  S.MAC.   Each  device
                  service  routine  contains  a DDB for that device.  For
                  devices with more  than  one  DDB,  the  DDBs  are  set
                  dynamically as needed or at system initialization time.
                  The new DDBs are modeled after the one contained in the
                  device service routine.

                  The label of a DDB entry is defined as the location  of
                  that  entry  relative  to  the  beginning of the block.
                  Such labels must be indexed by  an  AC  containing  the
                  address  of the beginning of the DDB.  AC F is normally
                  used for this purpose in the monitor.

                  The start of the DDB chain is accessible as GETTAB item
                  %CNDEV  from  a  user program, or in location DEVLST in
|                 the monitor.  DDBTAB + .TYxxx points to  the  start  of
|                 DDBs for device type .TYxxx.

   Defined in:    Device service routines and in S.MAC


   Used by:       Device service routines

   Symbol       Map
                +-------------------------------------------------------+
   DEVNAM       | SIXBIT device name                                    |
                |-------------------------------------------------------|
   DEVCHR *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVIOS *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVSER       | Adr of next DDB          | Dispatch table address     |
                |-------------------------------------------------------|
   DEVMOD *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVLOG       | SIXBIT logical device name                            |
                |-------------------------------------------------------|
   DEVBUF       | Address of user's 3-word | Address of user's 3-word   |
                | output buffer header     | input buffer header        |
                |-------------------------------------------------------|






                                     64



                |-------------------------------------------------------|
   DEVIAD *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVOAD *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVSTS       | Word for device CONI                                  |
                |-------------------------------------------------------|
   DEVSTA *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVXTR *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVEVM *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVPSI       | Enabled PSI conditions   | Pending PSI interrupts     |
                |-------------------------------------------------------|
   DEVESE *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVHCW *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVCPU *     | See bit definitions                                   |
|               |-------------------------------------------------------|
|  DEVDRV       | Driver dispatch                                       |
|               |-------------------------------------------------------|
   DEVJOB *     | See bit definitions                                   |
                |-------------------------------------------------------|

   The remainder of the DDB is different for different types of  devices.
   The  TTY  DDB  is  continued  after  the  following description of the
   magtape and disk DDBs.  The disk and magtape DDB contain the following
   words, following DEVJOB:

                |-------------------------------------------------------|
   DEVFIL       | File name on last LOOKUP/ENTER (arg to FNDFIL)        |
                |-------------------------------------------------------|
   DEVEXT,,     | File extension on        | Number blocks left         |
   DEVLFT       | last LOOKUP/ENTER        | in current group           |
                |-------------------------------------------------------|
   DEVPPN       | PPN on last LOOKUP/ENTER                              |
                |-------------------------------------------------------|
   DEVNBF       | Number buffers swept for | Buffers not swept for      |
                |-------------------------------------------------------|
   DEVSBF       | Saved value of DEVNBF                                 |
                |-------------------------------------------------------|
   DEVCSN       | Cache sweep serial number                             |
                |-------------------------------------------------------|
   DEVISN       |                          | Section number for I/O     |
                |-------------------------------------------------------|







                                     65



   The disk  DDB  follows.   The  magtape  DDB  is  continued  after  the
   remainder of the disk DDB.

   The disk DDB continues from offset DEVISN, as follows:

                |-------------------------------------------------------|
   DEVDMP       | Current IOWD for dump mode                            |
                |-------------------------------------------------------|
   DEVRET       | 0                        | Addr of current retrieval  |
                |                          | pointer in DDB             |
                |-------------------------------------------------------|
   DEVREL       | Relative block number in file to read or write next   |
   DEVDIA       |                                                       |
                |-------------------------------------------------------|
   DEVUNI       | Addr of original UDB     | Addr of current UDB        |
                |-------------------------------------------------------|
   DEVUFB       |                          | Addr of UFD Data Block     |
                |-------------------------------------------------------|
   DEVSFD       |                          | Addr of NMB for father SFD |
                |-------------------------------------------------------|
   DEVBLK       | Logical block number in unit to read or write next    |
                |-------------------------------------------------------|
   DEVRSU       | -Num of unused pointer   | Addr of access table entry |
   DEVACC       | positions in RIB         | for user channel           |
                |-------------------------------------------------------|
   DEVFLR       | Block number of file the first in-core ptr points to  |
                |-------------------------------------------------------|
   DEVFUN *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVQUE       | Addr of next DDB in queue|  Job number of DDB in LH   |
                |-------------------------------------------------------|
   DEVELB *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVLRL       | Last DEVREL              |      Disk priority         |
   DEVPRI       |                          |                            |
                |-------------------------------------------------------|
   DEVSPN       | SIXBIT spooled file name                              |
                |-------------------------------------------------------|
   DEVSPM       | Pointer to spooling parameter block                   |
                |-------------------------------------------------------|
   DEVRIB *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVUPP       | "In-your-behalf" PPN                                  |
                |-------------------------------------------------------|
   DEVCUR *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVGEN       | Generation number of UDB | Addr of core copy of RIBs  |
                |-------------------------------------------------------|
   DEVLNM       | Current SFD looking for  | Logical name spec used     |
                |-------------------------------------------------------|




                                     66



                |-------------------------------------------------------|
   DEVCFS *     | See bit definitions                                   |
                |-------------------------------------------------------|
   DEVRB1 *     | First retrieval pointer (Same format as RIB)          |
                |-------------------------------------------------------|
   DEVRB2 *     | Second retrieval pointer                              |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
   DEVRBn *     | Last retrieval pointer in core                        |
                |-------------------------------------------------------|
   DEVDRB       | Addr. of I/O Request Block for CI disks               |
                +-------------------------------------------------------+

   The magtape DDB has different words following DEVISN, as follows:

|               |-------------------------------------------------------|
|  TDVUDB       | UDB pointer                                           |
|               |-------------------------------------------------------|
   TDVSTS *     | See bit definitions                                   |
                |-------------------------------------------------------|
   TDVIOR       | IORB to wait for                                      |
                |-------------------------------------------------------|
   TDVSUL       | Saved user upper limit                                |
                |-------------------------------------------------------|
   TDVSLL       | Saved user lower limit                                |
                |-------------------------------------------------------|
   TDVSVM       | Saved M for dump mode                                 |
                |-------------------------------------------------------|
   TDVREM       | Remainder for mode 16                                 |
                |-------------------------------------------------------|
      
   The terminal DDB (TTY DDB) differs from the disk and magtape DDBs.  It
   contains the following information after the DEVJOB word:

|               |-------------------------------------------------------|
|  DDBLDB       | Address of attached LDB                               |
|               +-------------------------------------------------------+
|  
   * These words are described in more detail on the following pages.














                                     67



   17.1  DEVCHR -- Device Characteristics Word   17.1  DEVCHR -- Device Characteristics Word

   |--------------------------------------------------------------------|
   |LPTL|CMDA|DATJ|DIBP|CNET|OFLN|C2IO|PDVTIM| PDVCNT |     | PBUFSZ    |
   |--------------------------------------------------------------------|
    0      1   2     3    4    5    6   7---9 10----16 17-18 19-------35

             ____             Byte
   ____      _______   _______   Bits      Pointer   Meaning

   0         DVLPTL    Lowercase line printer.
   1         DVCMDA    Device controlled by mountable device allocator.
   2         DVDATJ    Device allocated to job in DEVJOB.
   3         DVDIBP    Device is a batch PTY.
   4         DVCNET    Device controlled by NETSER.
   5         DVOFLN    Device off-line last time service routine polled.
   6         PDV2IO    Device can do simultaneous input and output.
   7-9       PDVTIM    Code for hung device timeout:  0 means device
                       cannot be hung, n means hung time is 2**n-1
                       seconds.
   10-16     PDVCNT    Countdown timer for the hung device.  PDVCNT
                       contains the number of seconds to go before
                       considering device hung.  This value is
                       initialized every time the device is serviced,
                       using the hung constant to determine the value.
   17-18               Not used.
   19-35     PBUFSZ    Buffer size.



   17.2  DEVIOS -- Device Input/Output Status Word   17.2  DEVIOS -- Device Input/Output Status Word

   |--------------------------------------------------------------------|
   | DEV1 | E| I| S| F| B| W| I| E|DT|BK|DE| A| DEV2 | C|WC| PIOMOD     |
   |--------------------------------------------------------------------|
    0--11  12 13 14 15 16 17 18 19 20 21 22 23  24-29 30 31 32--------35

             ____             Byte
   ____      _______   _______   Bits      Pointer   Meaning

   0-11                Device-dependent bits (see Notes, below).
   12        IOEND     Service routine has transmitted last data.
   13        I/O       1 for output; 0 for input.
   14        IOSTBL    Device error flag.
   15        IOFST     Next item is the first item of a buffer.
   16        IOBEG     Virgin device.
   17        IOW       Input/output wait.
   18        IOIMPM    Improper mode.
   19        IODERR    Device error.
   20        IODTER    Data error.




                                     68



   21        IOBKTL    Block too large.
   22        IODEND    Data end encountered.
   23        IOACT     Device active.
   24-29               Device-dependent bits (listed below).
   30        IOCON     Continuous.
   31        IOWC      Don't compute word count.
   32-35     PIOMOD    Data mode codes:

                       ____  ______  ____                       Code  Symbol  Mode

                       0     A       ASCII.
                       1     AL      ASCII line.
                       2     PIMMOD  Packed image.
                       3     BYTMOD  Byte.
                       10    I       Image.
                       13    IB      Image binary.
                       14    B       Binary.
                       15    SD      Scope dump.
                       16    DR      Dump by records.
                       17    D       Dump across records.
   Notes:

   Bits 0-11 and 24-29 of the DEVIOS word are defined differently for the
   type of device DDB.  Those bits are defined in the following lists:

   Disk DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   0         IOSMON    Monitor I/O request (such as reading a RIB).
   1         IOSAU     File has AU resource.
   2         IOSUPR    Super-USETI/USETO being used.
   3         IOSDA     File has DA resource.
   4         IOSRIB    RIB is in monitor buffer.
   5         IOSRDC    File has read count up.
   6         IOSWLK    File structure is software write-locked.
   7         IOSPBF    Partial buffer done.
   8         IOSFIR    First block of group being accessed (compute or
                       check retrieval pointer checksum).
   9         IOSSCE    Software checksum error encountered.
   10        IOSHWE    Hardware write error encountered.
   11        IOSHRE    Hardware read error encountered.
   16        IOSHMS    Hung message already typed.
   17        IOSRST    RESET or RELEAS done on spooled device.
   28        UDSX      Super-USETO is formatting disk.









                                     69



   Magtape DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   1         OFFLIN    Unit is off-line.
   2         OFLUNH    Off-line unit is not ready.
   3         FINP      First input operation.
   4         LBLNED    Labelling action needed.
   5         LBLWAT    Waiting for labelling process.
   6         LBLSTP    Stop I/O because of error.
   7         FOUT      First output operation.
   8         LBLEOF    EOF encountered.
   24        IOBOT     Beginning of tape.
   25        IOTEND    End of tape.
   26        IOPAR     Write even parity if 1 on magtape.
   27-28     PDENS     Density of magtape:
                       Installation default
                       200 BPI
                       556 BPI
                       800 BPI
   29        IONRCK    Read with no reread check.

   TTY DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   0         TTYOUW    I/O wait is for output.
   1         FRCEND    Force EOF due to image mode timeout.
   2         IOLBKA    Saved value of IOSBKA when HALTed.
   25        IOSABS    Break on characters in break mask table.
   26        IOSBKA    Break on all characters.
   27        IOSTEC    "Truth in echoing" mode.
   28        IOSNEC    "No echo" mode.
   29        IOSFCS    User wants all characters.

   TSK DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   4         IOSUSO    UUOCON stopped output (no output buffers
                       available).
   5         IOSUSI    UUOCON stopped input (no input buffers available).
   6         IOSERR    I/O can't continue due to an error.
   7         IOSZAP    Device no longer owned by job.
   8         IOSCON    Device is connected.
   9         IOSREL    Device has been released.
   11        IOSDMR    Disable message reassembly.







                                     70



   17.3  DEVMOD -- Device Modes Word   17.3  DEVMOD -- Device Modes Word

   |--------------------------------------------------------------------|
   |DC|DS|CD|LP|AT|TF|TU|DI|LN|PT|PR|DT|AV|MT|TT|DR|IN|OU|AC|AP|I/O mode|
   |--------------------------------------------------------------------|
     0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20----35

   ____      _______   _______   Bits      Pointer   Meaning

   0         DVDIRI    DECtape directory is in core.
   1         DVDSK     Disk.
   2         DVCDR     Card reader.
   3         DVLPT     Line printer.
   4         TTYATC    TTY attached to job if 1.
   5         TTYUSE    TTYDDB in use flag.
   6         TTYBIU    TTYDDB in use.
   7         DVDIS     Display (DIS) device.
   8         DVLNG     Device has long dispatch table.
   9         DVPTP     Paper tape punch.
   10        DVPTR     Paper tape reader.
   11        DVDTA     DECtape.
   12        DVAVAL    Device is available to this job.
   13        DVMTA     Magnetic tape (rewind).
   14        DVTTY     Terminal.
   15        DVDIR     Directory-oriented device.
   16        DVIN      Device can do input.
   17        DVOUT     Device can do output.
   18        ASSCON    Device assigned by ASSIGN command.
   19        ASSPRG    Device assigned by program, using a monitor call.
   20-35               If data mode n is legal, bit 35-n is set.



   17.4  DEVIAD -- Input Buffer Word   17.4  DEVIAD -- Input Buffer Word

   |--------------------------------------------------------------------|
   |  Device-dependent bits     |    Current input buffer address       |
   |--------------------------------------------------------------------|
    0-------------------------13 14-----------------------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0-13                Device-dependent bits (listed below).
   14-35     PDVIAD    Address of current user's input buffer (exec
                       virtual address if EVM, user virtual address if
                       not in EVM).








                                     71



   Disk DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   0-2       DEYCOD    File status code (from UNISTS):

                       ____  ______  _______                       Code  Symbol  Meaning

                       0     ICOD    Idle.
                       3     PWCOD   Position wait.
                       4     PCOD    Positioning.
                       5     TWCOD   Transfer wait.
                       6     TCOD    Transferring.

   3         DEYSCN    SFD scanning (/SCAN) in effect.
   4         DEPLPC    Last RIB pointer is in core.
   5-8       DEYFNC    Highest allowed function with file:

                       ____  ______  _______                       Code  Symbol  Meaning

                       1     FNCEXC  Execute only.
                       2     FNCRED  Read.
                       3     FNCALL  Allocate.
                       4     FNCDLL  Deallocate.
                       5     FNCAPP  Append.
                       6     FNCUDP  Update.
                       7     FNCCRE  Create.
                       10    FNCSUP  Supersede.
                       11    FNCTRN  Truncate.
                       12    FNCCAT  Change attributes except
                                     name, directory, and privs.
                       13    FNCDEL  Delete.
                       14    FNCCNM  Change name.
                       15    FNCCPR  Change privileges.

   9-12      DEYEUN    Logical unit, within structure, of error.

   DECtape DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   1-2       IADPTR    Number of channels on which the device is
                       initiated.

   Magtape DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   0         OFLHNG    Hung device.
   9         MTSNAR    Set if user disabled RETRY.
   10        IOSRTY    No retry on error.
   11        IOSCPZ    I/O being started on a queued I/O request.


                                     72



   17.5  DEVOAD -- Output Buffer Word   17.5  DEVOAD -- Output Buffer Word

   |--------------------------------------------------------------------|
   | Device-dependant bits   |        Current output buffer address     |
   |--------------------------------------------------------------------|
    0---------------------13  14--------------------------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0-13                Device-dependent bits (listed below).
   14-35     PDVOAD    Address of current user's output buffer (exec
                       virtual address if in EVM, user virtual address if
                       not in EVM).

   Disk DDB:

   ____      ______    _______   Bits      Symbol    Meaning

   0         DEPSWP    SWPSER DDB.
   1         DEPLIB    LOOKUP from LIB/SYS.
   2-8       DEYRLC    Offset into RIB of first retrieval pointer stored
                       in DEVRB1.
   9         DEPUWZ    USETO writing zeros to extend file.
   10        DEPPP0    Zero PPN was specified in UUO.
   11        DEPFDA    FILDAE should be called on CLOSE.

   Magtape DDB:

   ____      ______    ________   Bits      Symbol    Contents

   0-13      PBUFRM    Maximum frame count from TAPOP. UUO function.

   TTY DDB:

   ____      ______    ________   Bits      Symbol    Contents

   1-12      BYTCNT    Remaining byte count for asynchronous
                       (non-blocking) output.

   DECtape DDB:

   ____      ______    ________   Bits      Symbol    Contents

   0-6       SLPNTR    Dead-reckoning sleep time, in seconds.










                                     73



   17.6  DEVSTA -- Device Station Word   17.6  DEVSTA -- Device Station Word

   |--------------------------------------------------------------------|
   |SP|AD|LE|RA|TYP|IB|  SPL  |AI|IN|ON|EC|MS|EV|DR|DL|     |  PDVSTA   |
   |--------------------------------------------------------------------|
     0  1  2  3 4-9 10 11---17 18 19 20 21 22 23 24 25 26-29 30-------35

   ____      ______    _______   Bits      Symbol    Meaning

   0         DEPSPL    DDB is for a spooled device.
   1         DEPADY    Disk in 10/11 compatibility mode.
   2         DEPLEN    Variable length buffers.
   3         DEPRAS    Device has restricted assignment.
   4-9       PDVTYP    Device type.
   10        DEPIBC    Inhibit clearing output buffers.
   11-17               Spool bits:

                       ____  ______  ______                       Mask  Symbol  Device

                       37    .SPALL  Bit mask for defined spool bits.
                       20    .SPCDR  Card reader spool bit.
                       10    .SPCDP  Card punch spool bit.
                       4     .SPPTP  Paper tape punch spool bit.
                       2     .SPPLT  Plotter spool bit.
                       1     .SPLPT  Line printer spool bit.

   ____      ______    _______   Bits      Symbol    Meaning

   18        DEPAIO    Doing asynchronous input/output.
   19        DEPIND    Input not yet done (asynch I/O).
   20        DEPOND    Output not yet done (asynch I/O).
   21        DEPECS    On if a non-superceding enter.
|  22        DEPMSG    This device controlled by MPXSER.
   23        DEPEVM    Device doesn't need EVM.
   24        DEPDER    Disable error recovery on this device.
   25        DEPDEL    Disable error logging on this device.
   26-29               Not used.
   30-35     PDVSTA    Station number (node) of device.
















                                     74



   17.7  DEVXTR -- Extra Word   17.7  DEVXTR -- Extra Word

   The DEVXTR contains different information for different types of DDBs.
   The format for each type of DDB is listed below:

   MPX DDB:

   ____                ________   Bits                Contents

   0-17                Address of connected device table.
   18-35               Number of connected devices.

   MPX-Controlled Device DDB:

   ____                ________   Bits                Contents

   0-17                I/O flags (same as left half of USRJDA).
   18-35               Address of MPX:  DDB to which device is connected.

   Magtape DDB:

   ____      ______    ________   Bits      Symbol    Contents

   0-2       TDYHNI    Initial value of queued/asynch I/O hung timer.
   3-5       TDYHNG    Current value of queued/asynch I/O hung timer.
                       The value of TDYHNG is the number of times a
                       queued I/O or asynchronous I/O request can get
                       hung device errors if it has not been actually
                       started, before a hung device condition actually
                       occurs.
   6-35                Not used.



   17.8  DEVEVM -- Exec Virtual Memory Word   17.8  DEVEVM -- Exec Virtual Memory Word

   |--------------------------------------------------------------------|
   |   PIEVM      |    PIEVMS     |     POEVM       |   POEVMS          |
   |--------------------------------------------------------------------|
    0-----------8  9-----------17  18------------26  27---------------35

   ____      ______    ________   Bits      Symbol    Contents

   0-8       PIEVM     Page # of this device's EVM for buffered input.
   9-17      PIEVMS    # of pages of EVM allocated for buffered input.
   18-26     POEVM     Page # of this device's EVM for buffered output.
   27-35     POEVMS    # of pages of EVM allocated for buffered output.







                                     75



   17.9  DEVESE -- Extended Software Error Word   17.9  DEVESE -- Extended Software Error Word

   |--------------------------------------------------------------------|
   |      Next DDB      |  PI Level |  CNDSIZ       |  PDVESE           |
   |--------------------------------------------------------------------|
    0-----------------17 18-------19  20 ---------26 27---------------35

   ___       ______    _______   Bit       Symbol    Meaning

   0-17                Address of next DDB in pending PSI chain.
   18-19               PSI interrupt level.
   20-26               PSI vector offset.
   27-35     PDVESE    Extended software error status.



   17.10  DEVHCW -- Device Hardware Characteristics Word   17.10  DEVHCW -- Device Hardware Characteristics Word

   |--------------------------------------------------------------------|
   | L | P | VFT | CST | TYP |  TYU  |     |    Character set name      |
   |--------------------------------------------------------------------|
     0   1   2--5  6--8  9--11 12--14 15-17 18------------------------35

   ____      ______    ________   Bits      Symbol    Contents

   0         HC.LCP    Lowercase printer.
   1         HC.PGC    Printer has page counter.
   2-5       HC.VFT    VFU type, one of the following codes:

                       ____  ______  _______                       Code  Symbol  Meaning

                       0     .HCVTO  Optical (paper tape) VFU.
                       1     .HCVTD  Direct access VFU (DAVFU).
                       2     .HCVTN  No VFU (handled by hardware).

   6-8       HC.CST    Character set type, one of the following codes:

                       ____  ______  _______                       Code  Symbol  Meaning

                       0     .HCC64  64-character set.
                       1     .HCC95  95-character set.
                       2     .HCC28  128-character set.
                       3     .HCCVR  Variable character set.











                                     76



   9-11      HC.TYP    Line printer type, one of the following codes:

                       ____  ______ _______                       Code  Symbol Meaning

                       0     .HCTUK  Unknown.
                       1     .HCTBX  BA10.
                       2     .HCTLC  LP100.
                       3     .HCT20  LP20.

   12-14     .HCTYU    Line printer class, one of the following codes:

                       ____  ______  _______                       Code  Symbol  Meaning

                       0     .HCUUK  Unknown or unspecified.
                       1     .HCULP  LP05-type.
                       2     .HCULN  LN01-type.

   18-35     HC.CSN    Character set name (SIXBIT/nnn/).



   17.11  DEVCPU -- CPU Word   17.11  DEVCPU -- CPU Word

   |--------------------------------------------------------------------|
   |CPF|CPS|PCL| CPU|              |  Addr of interrupt interlock       |
   |--------------------------------------------------------------------|
    0-2 3-5 6-8 9-11  12---------17  18-------------------------------35

   ____      ______    ________   Bits      Symbol    Contents

   0-2       DEYCPF    CPU number of primary CPU owning device.  DEYCPF=7
                       when any CPU can do I/O to the device.  In this
                       case, DEYPCL contains 0.
   3-5       DEYCPS    CPU number of secondary CPU owning device.
   6-8       DEYPCL    CPU number of CPU doing I/O to device.
   9-11      DEYCPU    CPU number of CPU that did last IN or OUT UUO.
   18-35               Address of UUO/interrupt level interlock word.

















                                     77



   17.12  DEVJOB -- Job Word   17.12  DEVJOB -- Job Word

   |--------------------------------------------------------------------|
   |               |      PUNIT       |     PCTXN      |       PJOBN    |
   |--------------------------------------------------------------------|
    0-------------8 9---------------17 18------------26 27------------35

   ____      ______    ________   Bits      Symbol    Contents

   0-8                 Reserved.
   9-17      PUNIT     Unit number.
   18-35     PJCHN     Byte pointer to job context handle for INITed
                       devices (includes both context number and job
                       number).
   18-26     PCTXN     Byte pointer to context number for INITed devices.
   27-35     PJOBN     Job number of device owner.



   17.13  DEVFUN -- UDB Pointer (Disk DDB only)   17.13  DEVFUN -- UDB Pointer (Disk DDB only)

|  |--------------------------------------------------------------------|
|  | S | L | W | F |               |  UDB address to which first        |
|  |   |   |   |   |               |  retrieval pointer points          |
|  |--------------------------------------------------------------------|
|    0   1   2-------------------17 18--------------------------------35 
|  
   ____      ______    ________|  Bits      Symbol    Contents
|  
|  0         DEPFFS    File found by scanning (/SCAN).
|  1         DEPFFL    File found in LIB or SYS.
|  2         DEPUWL    Write-lock.
|  3         DEPSIO    Open by FILOP. for super I/O.
|  4-17                Not used.
|  18-35               Address of UDB for unit, to which first retrieval
|                      pointer in DDB points (DEVRB1).



   17.14  DEVELB -- Error Information (Disk DDBs only)   17.14  DEVELB -- Error Information (Disk DDBs only)

   |--------------------------------------------------------------------|
   | Error bits |         First logical block number of bad region      |
   |--------------------------------------------------------------------|
    0---------8  9----------------------------------------------------35 

   ____      ______    ________   Bits      Symbol    Contents

   3         BAPOTR    Other error (neither BAPDTR nor BAPHDR).
   4         BAPDTR    Data error.
   5         BAPHDR    Search or header compare error.
   9-35                Logical block number, within structure, of start
                       of bad region.

                                     78



   17.15  DEVRIB -- Current RIB Information (Disk DDBs only)   17.15  DEVRIB -- Current RIB Information (Disk DDBs only)

   |--------------------------------------------------------------------|
   | E |   Count   |   Unit |           Cluster address                 |
   |--------------------------------------------------------------------|
     0   1--------8 9-----12 13---------------------------------------35

   ____      ______    ________   Bits      Symbol    Contents

   0                   Extended RIB.
   1-8       DEYRBC    Count of RIBs.
   9-12      DEYRBU    Unit within structure.
   13-35     DEYRBA    Cluster address within unit.



   17.16  DEVCUR -- Current Unit Information (Disk DDBs only)   17.16  DEVCUR -- Current Unit Information (Disk DDBs only)

   |--------------------------------------------------------------------|
   |RAD|PRV|RRC|RHC|PHO|LBF| DEYNB1 | DEYNBB  | Address of current UDB  |
   |--------------------------------------------------------------------|
     0   1   2   3   4   5   6----11 12-----17 18---------------------35 

   ____      ______    ________   Bits      Symbol    Contents

   0         DEPRAD    Rename in progress.
   1         DEPPRV    Don't check privileges on LOOKUP.
   2         DEPRRC    Auto-rewrite of RIB on change.
   3         DEPRHC    RIB had changed.
   4         DEPPHO    Physical-only set in INIT.
   5         DEPLBF    Use large buffers.
   6-11      DEYNB1    Number of blocks in first buffer.
   12-17     DEYNBB    Number of blocks per buffer.
   18-35               Address of current UDB doing I/O.



   17.17  DEVFCS -- CFP-Supplied Word (Disk DDBs only)   17.17  DEVFCS -- CFP-Supplied Word (Disk DDBs only)

   |--------------------------------------------------------------------|
   |                               | P |  CFP-supplied on LOOKUP        |
   |--------------------------------------------------------------------|
    0----------------------------16  17 18----------------------------35

   ____      ______    ________   Bits      Symbol    Contents

   17        DEPCFS    CFP can be supplied by program.
   18-35               CFP from LOOKUP UUO.






                                     79



   17.18  DEVRBn -- Retrieval Pointer (Disk DDBs only)   17.18  DEVRBn -- Retrieval Pointer (Disk DDBs only)

   |--------------------------------------------------------------------|
   |     Cluster count   |       Checksum     |       Cluster address   |
   |--------------------------------------------------------------------|

   Widths of these fields are defined symbolically, and may be  different
   for each file structure.  Byte pointer is in Structure Data Block.

   _____               ____ _______   Field               Byte Pointer

   Cluster count       STYCNP
   Checksum            STYCKP
   Cluster address     STYCLP (23 bits maximum)

   If cluster count = 0, the word actually is one of the following:

         o  Pointer to new unit, if bit  18  =  1.   Bits  19-35  specify
            logical unit number within file structure.

         o  EOF flag, if whole word is zero.




   17.19  TDVSTS -- Status Information Word (Magtape DDBs only)   17.19  TDVSTS -- Status Information Word (Magtape DDBs only)

   |--------------------------------------------------------------------|
   |0|1| |3|TDYDEN | TDYMOD |                         | TDYMD1 | TDYDN1 |
   |--------------------------------------------------------------------|
    0 1 2 3 4-----7  8----10 11--------------------28  29---31  32---35 

   ____      ______    ________   Bits      Symbol    Contents

   0         D.RDBK    Read backwards.
   1         D.NRLT    Read next record at low threshold.
   2                   Not used.
   3         D.EPAR    Even parity.
   4-7       TDYDEN    Tape density used.
   8-10      TDYMOD    Tape data format from TAPOP. UUO function .TFMOD.
   11-28               Not used.
   29-31     TDYMD1    Tape data format from SET FORMAT command.
   32-35     TDYDN1    Tape density from TAPOP. UUO function .TFDEN.











                                     80



   18  DEVDSP -- DEVICE DISPATCH TABLE   18  DEVDSP -- DEVICE DISPATCH TABLE

   Description:   Table  of  JRSTs  to  routines  that  perform   various
                  device-dependent    functions.     For   each   device,
                  corresponding table entries go to routines to perform a
                  specific function.

                  The first nine  entries  are  present  in  each  device
                  service  routine.   Tables  that contain the additional
                  entries are referred to as long dispatch tables.

   Defined in:    Device Service Routines
|  
|  Used by:       COMMON, MPXSER, SYSINI, UUOCON

   The format of each word in this table is a JRST instruction, where the
   subroutine performs one of the following functions:

        Label of entry          Relative
        (Relative to DEVDSP)    Address      Function

        +---------------------------------------------------------------+
        | DOFL                 |    -5     | Is device offline          |
        |---------------------------------------------------------------|
        | DDVO                 |    -4     | DEVOP. UUO                 |
        |---------------------------------------------------------------|
        | DSZ                  |    -3     | Return buffer size         |
        |---------------------------------------------------------------|
        | DINI                 |    -2     | Device and service         |
        |                      |           | routine initialization     |
        |---------------------------------------------------------------|
        | DHNG                 |    -1     | "Hung device" action       |
        |---------------------------------------------------------------|
        | DRL                  |     0     | Release (table base        |
        |                      |           | adr - DEVDSP)              |
        |---------------------------------------------------------------|
        | DCL                  |     1     | CLOSE, CLOSE output        |
        |---------------------------------------------------------------|
        | DOU                  |     2     | OUTPUT operation           |
        |---------------------------------------------------------------|
        | DIN                  |     3     | INPUT operation            |
        |---------------------------------------------------------------|
   (1)  | DEN                  |     4     | ENTER operation            |
        |---------------------------------------------------------------|
   (1)  | DLK                  |     5     | LOOKUP operation           |
        |---------------------------------------------------------------|
   (1)  | DDO                  |     6     | DUMP mode output           |
        |---------------------------------------------------------------|
   (1)  | DDI                  |     7     | DUMP mode input            |
        |---------------------------------------------------------------|
   (1)  | DSO                  |    10     | USETO operation            |
        |---------------------------------------------------------------|


                                     81



        |---------------------------------------------------------------|
   (1)  | DSI                  |    11     | USETI operation            |
        |---------------------------------------------------------------|
   (1)  | DGF                  |    12     | UGETF operation            |
        |---------------------------------------------------------------|
   (1)  | DRN                  |    13     | RENAME operation           |
        |---------------------------------------------------------------|
   (1)  | DCLI                 |    14     | CLOSE input - dump mode    |
        |---------------------------------------------------------------|
   (1)  | DCLR                 |    15     | UTPCLR UUO                 |
        |---------------------------------------------------------------|
   (1)  | DMT                  |    16     | MTAPE operation            |
        +---------------------------------------------------------------+


   Labels for table entries, relative to the base address, are defined in
   S.MAC.

   Notes:

        1.  Only a "long dispatch table"  contains  entries  DEN  through
            DMT.   The long dispatch table is used for directory-oriented
            devices (DECtape, disk, and labelled magtape).

        2.  The actual tables are defined in the device service routines.
            The base address of the device dispatch table is contained in
            the corresponding Device Data Block, in  the  right  half  of
            DEVSER.

        3.  The device dispatch table labels are normally indexed  by  AC
            T4,  which  must  contain the base address of the appropriate
            table.  The dispatch is  usually  performed  by  a  PUSHJ  P,
            Dxxx(T4)  where  Dxxx represents the label of the appropriate
            table entry.

        4.  Before attempting to dispatch to any  of  the  long  dispatch
            table  entries, the monitor checks the DVLNG bit of DEVMOD in
            the Device Data Block for that device.

        5.  The actual names of the tables are xyzDSP where  xyz  is  the
            three-letter  name of the device (for example, PTRDSP for the
            paper tape reader).












                                     82



   19  DISK CACHE DATA STRUCTURE   19  DISK CACHE DATA STRUCTURE

   Description:   The data structures described in this section are  used
                  by the monitor to implement a software disk cache.

                  The basic data structure consists of two  doubly-linked
                  lists,  a  list header, and a hash table.  Each node in
                  the list contains forward  and  backward  pointers  for
                  each  of  the  two  lists  to  which  it is linked (the
                  pointers are .CBNHB, .CBPHB, .CBNAB, and .CBPAB), a UDB
                  address  (.CBUDB),  a  block  number  (.CBBLK),  and  a
                  pointer to the address in  FRECOR  (.CBDAT)  where  the
                  block  is  stored.   For  statistics purposes, the node
                  also contains a count of the number of times this block
                  has been hit since it was in the cache, named (.CBHIT).

                  The list header points to the two  linked  lists.   The
                  first  linked  list  is  the  access  list.   The  most
                  recently accessed block is at the head of the list; the
                  least  recently  accessed block is at the bottom of the
                  list.  This list is linked  through  the  .CBNAB/.CBPAB
                  words.   The  second  linked list is the free list.  It
                  contains a list of all blocks that are not currently in
                  use,  and  as  such  do  not  appear  in  the hash list
                  described below.   This  list  is  linked  through  the
                  .CBNHB/.CBPHB words.

                  The  hash  table  consists   of   pointers   into   the
                  .CBNHB/.CBPHB  list  for  the  corresponding  list  for
                  blocks that hash to the same position.  Thus, the  hash
                  table  is  really a number of separate list headers for
                  the lists of blocks that hash to that position  in  the
                  hash table.

                  At initialization time (CSHINI),  all  the  blocks  are
                  allocated and linked into the free list.  They are also
                  linked into the access list.  The  hash  table  entries
                  are linked to themselves because the table is empty.

                  To find an entry, given its UDB and block number,  hash
                  the block into the hash table, and, using that entry as
                  a list head, follow the list until you find a match  or
                  return  to  the  header.  This is done with the routine
                  CSHFND.  In general, these lists are one or two  blocks
                  in length.

                  The  main  cache  handling  routine  is  CSHIO,   which
                  simulates  I/O  from  the  cache,  doing  the necessary
                  physical I/O to fill and write the  cache.   Note  that
                  this  is write-through cache, so no sweeps are required
                  and the data in the cache always reflects the blocks on
                  disk.


                                     83



   Format of CBHEAD List Header:

   Symbol       Map
                +-------------------------------------------------------+
   .CBNHB       | Pointer to first block in free list                   |
                |-------------------------------------------------------|
   .CBPHB       | Pointer to last block in free list                    |
                |-------------------------------------------------------|
   .CBNAB       | Pointer to first block in access list                 |
                |-------------------------------------------------------|
   .CBPAB       | Pointer to last block in access list                  |
                +-------------------------------------------------------+

   The following items are cached:  RIBs, UDF data, SFD data, and SATs.

   Format of Two-Word CBHSHT Hash Table Entry:

   Symbol       Map
                +-------------------------------------------------------+
   .CBNHB       | Pointer to first hash block in this chain             |
                |-------------------------------------------------------|
   .CBPHB       | Pointer to last hash block in this chain              |
                +-------------------------------------------------------+

   Format of Each List Entry:

   Symbol       Map
                +-------------------------------------------------------+
   .CBNHB       | Pointer to next hash block in this chain              |
                |-------------------------------------------------------|
   .CBPHB       | Pointer to previous hash block in this chain          |
                |-------------------------------------------------------|
   .CBNAB       | Pointer to next accessed block                        |
                |-------------------------------------------------------|
   .CBPAB       | Pointer to previous accessed block                    |
                |-------------------------------------------------------|
   .CBUDB       | UDB of unit containing this block                     |
                |-------------------------------------------------------|
   .CBBLK       | Block number                                          |
                |-------------------------------------------------------|
   .CBDAT       | Pointer to 128(8) words for this disk block           |
                |-------------------------------------------------------|
   .CBHIT       | Count of hits for this disk block                     |
                +-------------------------------------------------------+










                                     84



   20  DISP, DISP2, AND DISPC -- COMMAND DISPATCH TABLES|  20  DISP, DISP2, AND DISPC -- COMMAND DISPATCH TABLES
|  
|  Description:   Specify dispatch routine  addresses  for  each  monitor
|                 command.  The DISP table contains addresses for monitor
|                 commands, DISP2  contains  addresses  for  monitor  SET
|                 commands,    and    DISPC    contains   addresses   for
|                 customer-defined system-wide monitor commands.
|  
|                 Entries in DISP, DISP2, and  DISPC  correspond  to  the
|                 command  names  in  COMTAB,  COMTB2,  and  CSTTAB.  The
|                 offset of the command name in each of these  tables  is
|                 the index into the corresponding dispatch table.

   Defined in:    COMMON

   Used by:       COMCON

                Map
                +-------------------------------------------------------+
                | Dispatch address for command 1                        |
                |-------------------------------------------------------|
                | Dispatch address for command 2                        |
                |-------------------------------------------------------|
                | Dispatch address for command 3                        |
                |-------------------------------------------------------+
                                    .   .   .




























                                     85



   21  DRIVER DISPATCH TABLE|  21  DRIVER DISPATCH TABLE
|  
|  Description:   A table of values, pointers  to  data  structures,  and
|                 subroutine   addresses   that  provide  device-specific
|                 information.  It is used by AUTCON to add support for a
|                 device  and  used  by  higher  levels  of  the  monitor
|                 (UUOCON,  FILIO,  TAPUUO,  and   TAPSER)   to   perform
|                 device-specific functions.
|  
|  Defined in:    DEVPRM
|  
|  Used by:       All autoconfigurable devices
|  
|               +-------------------------------------------------------+
|  DRVLNK       | Link to next dispatch                                 |
|               |-------------------------------------------------------|
|  DRVNAM       | Generic device name                                   |
|               |-------------------------------------------------------|
|  DRVKDB       | Prototype KDB address                                 |
|               |-------------------------------------------------------|
|  DRVKLN       | Prototype KDB length                                  |
|               |-------------------------------------------------------|
|  DRVUDB       | Prototype UDB address                                 |
|               |-------------------------------------------------------|
|  DRVULN       | Prototype UDB length                                  |
|               |-------------------------------------------------------|
|  DRVDDB       | Prototype DDB address                                 |
|               |-------------------------------------------------------|
|  DRVDDL       | Prototype DDB length                                  |
|               |-------------------------------------------------------|
|  DRVULP       | Prototype microcode loader block address              |
|               |-------------------------------------------------------|
|  DRVULO       | Prototype microcode loader offset in UDB              |
|               |-------------------------------------------------------|
|  DRVICD       | Prototype interrupt code address                      |
|               |-------------------------------------------------------|
|  DRVICL       | Prototype interrupt code length                       |
|               |-------------------------------------------------------|
|  DRVCNF       | Characteristics                                       |
|               |-------------------------------------------------------|
|  DRVCF2       | Characteristics                                       |
|               |-------------------------------------------------------|
|  DRVPIC       | PI channel                                            |
|               |-------------------------------------------------------|
|  DRVINT       | Interrupt service                                     |
|               |-------------------------------------------------------|
|  DRVDIA       | DIAG. UUO dispatch                                    |
|               |-------------------------------------------------------|
|  DRVADF       | Starting address for section 1 fixup                  |
|               |-------------------------------------------------------|
|  DRVMDT       | MONGEN'ed device table                                |
|               |-------------------------------------------------------|


                                     86



|               |-------------------------------------------------------|
|  DRVCKT       | Compatible Kontroller table                           |
|               |-------------------------------------------------------|
|  DRVINI       | Initialization                                        |
|               |-------------------------------------------------------|
|  DRVCFG       | Autoconfigure                                         |
|               |-------------------------------------------------------|
|  DRVLEN       | Length of dispatch                                    |
|               +-------------------------------------------------------+
|  
|  The driver dispatch table for magtape devices contains  the  following
|  additional entries:

   ______      ______    ________   Offset      Symbol    Contents

|  DRVLEN+0    TPKISR    Interrupt service routine.
   DRVLEN+1    TPKRES    Reset active transfer.
   DRVLEN+2    TPKSIO    Start I/O.
|  DRVLEN+3    TPKCCF    Command chaining flag.
|  DRVLEN+4    TPKCMD    Set device command in list.
   DRVLEN+5    TPKIDL    Set device idle.
   DRVLEN+6    TPKONL    Skip if controller online.
   DRVLEN+7    TPKSCH    Cause schedule cycle.
|  DRVLEN+10   TPKELG    Make an error log entry.
|  DRVLEN+11   TPKEDL    Enable/disable microcode loading.
|  DRVLEN+12   TPKLOD    Load microcode.
|  DRVLEN+13   TPKDRV    Autoconfigure a single drive.
|  DRVLEN+14   TPKBSY    Check for controller busy.
|  DRVLEN+15   TPKBSZ    Maximum blocksize allowable.

























                                     87



   22  DSCTAB -- DATASET CONTROL TABLE   22  DSCTAB -- DATASET CONTROL TABLE

   Description:   Contains information required for  timing  function  on
                  datasets.   One  entry  for  each  data  set that needs
                  timing.  Index is contained in Line Data Block,  LDBBY2
                  word.

   Defined in:    COMDEV, COMMON, SCNSER


   Each word in DSCTAB is formatted as follows:

   |---------------------------------------------------------------|
   |HWC|SWC|FAI|NCR|BLI|DLW|DLF|DLC|EON| Res.| Time | LINTAB Index |
   |---------------------------------------------------------------|
     0   1   2   3   4   5   6   7   8  9--11 12--17 18----------35

   ____      ______    _______   Bits      Symbol    Meaning

   0         DSCHWC    When last heard from, the hardware carrier was on.
   1         DSCSWC    Software considers carrier to be on.
   2         DSCFAI    Carrier went off, but may be brief failure.
   3         DSCNCR    New carrier flag; on briefly for clock sync.
   4         DSCBLI    Blind flag; ignore everything for 1 second.
   5         DSCDLW    Dialer wait; waiting for results from dialer.
   6         DSCDLF    Dialer fail; unsuccessful dialer attempt.
   7         DSCDLC    Dialer complete; successful dialer action.
   8         DSCEON    End of number; sent all digits to dialer.
   9-11                Not used.
   12-17     DSTIMP    Time field for functions that require timing.
   18-35               Line number for this dataset (LINTAB index).























                                     88



   23  ECB -- ETHERNET CHANNEL BLOCK   23  ECB -- ETHERNET CHANNEL BLOCK

   Description:   Contains  information  needed  to  control  a  system's
                  access to Ethernet.

   Defined in:    ETHPRM

   Used by:       ETHSER

   See also:      EPB, EMB, EKB

                +-------------------------------------------------------+
   ECBSYS       | Address of next ECB in system                         |
                |-------------------------------------------------------|
   ECBCID       | Ethernet channel ID                                   |
                |-------------------------------------------------------|
   ECBSTS (1)   | Ethernet channel status                               |
                |-------------------------------------------------------|
   ECBEAD (2)   / Ethernet channel address                     (2 words)/
                |-------------------------------------------------------|
   ECBEPB       | Address of first EPB on this channel                  |
                |-------------------------------------------------------|
   ECBEKB       | Address of first EKB on this channel                  |
                |-------------------------------------------------------|
   ECBCTR (3)   | Ethernet channel counters block                       |
                +-------------------------------------------------------+

   Notes:

        1.  The ECBSTS word is described below.

        2.  The two words  reserved  for  ECBEAD  contain  the  channel's
            Ethernet address stored as six 8-bit bytes left justified.

        3.  The channel counters are described below.




   23.1  ECBSTS -- Ethernet Channel Status Word   23.1  ECBSTS -- Ethernet Channel Status Word

   |---------------------------------------------------------------|
   | O|                        Not used                            |
   |---------------------------------------------------------------|
     0 1---------------------------------------------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0         ECSONL    Channel is on-line.





                                     89



   23.2  ECBCTR -- Ethernet Channel Counters Block   23.2  ECBCTR -- Ethernet Channel Counters Block

   Contains channel-wide Ethernet counters.  Only updated on read channel
   counters or read Kontroller counters function calls to ETHSER.

                +-------------------------------------------------------+
   CC.SLZ       | Seconds since counters zeroed                         |
                |-------------------------------------------------------|
   CC.BYR       | Bytes received                                        |
                |-------------------------------------------------------|
   CC.BYX       | Bytes transmitted                                     |
                |-------------------------------------------------------|
   CC.DGR       | Datagrams received                                    |
                |-------------------------------------------------------|
   CC.DGX       | Datagrams transmitted                                 |
                |-------------------------------------------------------|
   CC.MBR       | Multi-cast bytes received                             |
                |-------------------------------------------------------|
   CC.MDR       | Multi-cast datagrams received                         |
                |-------------------------------------------------------|
   CC.DXD       | Datagrams transmitted, initially deferred             |
                |-------------------------------------------------------|
   CC.DX1       | Datagrams transmitted, single collision               |
                |-------------------------------------------------------|
   CC.DXM       | Datagrams transmitted, multiple collisions            |
                |-------------------------------------------------------|
   CC.XMF       | Transmit failures                                     |
                |-------------------------------------------------------|
   CC.XFM *     | Transmit failure bit mask                             |
                |-------------------------------------------------------|
   CC.RCF       | Receive failures                                      |
                |-------------------------------------------------------|
   CC.RFM *     | Receive failure bit mask                              |
                |-------------------------------------------------------|
   CC.UFD       | Unrecognized frame destination                        |
                |-------------------------------------------------------|
   CC.DOV       | Data overrun                                          |
                |-------------------------------------------------------|
   CC.SBU       | System buffer unavailable                             |
                |-------------------------------------------------------|
   CC.UBU       | User buffer unavailable                               |
                +-------------------------------------------------------+












                                     90



   23.2.1  CC.XFM -- Ethernet Channel Counters Transmit Failure Bit  Mask   23.2.1  CC.XFM -- Ethernet Channel Counters Transmit Failure Bit  Mask
    -
   |---------------------------------------------------------------|
   |           Not used            |XCL|XBP|XFD|XFL|XOC|XSC|XCC|XEC|
   |---------------------------------------------------------------|
    0----------------------------27  28  29  30  31  32  33  34  35

   ____      ______    _______   Bits      Symbol    Meaning

   28        CCXCL     Carrier lost.
   29        CCXBP     Transmit buffer parity error.
   30        CCXFD     Remote failure to defer.
   31        CCXFL     Frame too long.
   32        CCXOC     Open circuit.
   33        CCXSC     Short circuit.
   34        CCXCC     Carrier check failed.
   35        CCXEC     Excessive collisions.



   23.2.2  CC.RFM -- Ethernet Channel Counters Receive Failure Bit Mask   23.2.2  CC.RFM -- Ethernet Channel Counters Receive Failure Bit Mask -
   |---------------------------------------------------------------|
   |               Not used                    |RFP|RNB|RFL|RFE|RBC|
   |---------------------------------------------------------------|
    0----------------------------------------30  31  32  33  34  35

   ____      ______    _______   Bits      Symbol    Meaning

   31        CCRFP     Free list parity error.
   32        CCRNB     No free buffers.
   33        CCRFL     Frame too long.
   34        CCRFE     Framing error.
   35        CCRBC     Block check error.





















                                     91



   24  EKB -- ETHERNET KONTROLLER BLOCK   24  EKB -- ETHERNET KONTROLLER BLOCK

   Description:   Contains information  needed  to  multiplex  individual
                  Ethernet Kontrollers into a single Ethernet channel.

   Defined in:    ETHPRM

   Used by:       ETHSER

   See also:      ECB, EPB, EMB

                +-------------------------------------------------------+
   EKBSYS       | Address of next EKB in system                         |
                |-------------------------------------------------------|
   EKBECB       | Address of ECB for this EKB                           |
                |-------------------------------------------------------|
   EKBNXT       | Address of next EKB on same ECB                       |
                |-------------------------------------------------------|
   EKBKTY *     | Ethernet Kontroller type                              |
                |-------------------------------------------------------|
   EKBKID       | Ethernet Kontroller ID                                |
                |-------------------------------------------------------|
   EKBSTS *     | Ethernet Kontroller status                            |
                |-------------------------------------------------------|
   EKBKKB (1)   | Address of Kontroller's Kontroller block              |
                |-------------------------------------------------------|
   EKBKDA       | Address of Kontroller's function dispatch routine     |
                |-------------------------------------------------------|
   EKBHEA (1)   / Ethernet hardware address                    (2 words)/
                |-------------------------------------------------------|
   EKBCTR *     | Ethernet Kontroller counters block                    |
                +-------------------------------------------------------+

   Notes:

        1.  The  Kontroller's  Kontroller  block  address  and   function
            dispatch  routine  address are supplied on the call to ETKINI
            in ETHSER by the Kontroller service module when a  Kontroller
            is configured.

        2.  These two words contain the  Kontroller's  physical  Ethernet
            address stored as six 8-bit bytes left justified.












                                     92



   24.1  EKBKTY -- Ethernet Kontroller Type Word   24.1  EKBKTY -- Ethernet Kontroller Type Word

   |---------------------------------------------------------------|
   | CPU | KTY | KNO |                Not used                     |
   |---------------------------------------------------------------|
    0---2 3---5 6---8 9------------------------------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0-2       EKYCPU    CPU number of Kontroller.
   3-5       EKYKTY    Kontroller type code:
             .KTKNI    1 = NIA20
             .KTUNA    2 = DEUNA (not implemented)
   6-8       EKYKNO    Kontroller number.



   24.2  EKBSTS -- Ethernet Kontroller Status Word   24.2  EKBSTS -- Ethernet Kontroller Status Word

   |---------------------------------------------------------------|
   |O| Not used | KST | PST | Not used  | S|  Not used             |
   |---------------------------------------------------------------|
    0 1--------2 3---5 6---8 9--------17 18 19-------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0         EKSONL    Kontroller is online.
   3-5       EKSSTS    Current Kontroller state (not used).
   6-8       EKSPST    Previous Kontroller state (not used).
   18        EKSSEA    Need to set Ethernet address.



   24.3  EKBCTR -- Ethernet Kontroller Counters Block   24.3  EKBCTR -- Ethernet Kontroller Counters Block

   Contains channel Ethernet counters for a Kontroller.  Only updated  on
   read  channel  counters  or read Kontroller counters function calls to
   ETHSER.

                +-------------------------------------------------------+
   KC.SLZ       | Seconds since counters zeroed                         |
                |-------------------------------------------------------|
   KC.BYR       | Bytes received                                        |
                |-------------------------------------------------------|
   KC.BYX       | Bytes transmitted                                     |
                |-------------------------------------------------------|
   KC.DGR       | Datagrams received                                    |
                |-------------------------------------------------------|
   KC.DGX       | Datagrams transmitted                                 |
                |-------------------------------------------------------|




                                     93



                |-------------------------------------------------------|
   KC.MBR       | Multi-cast bytes received                             |
                |-------------------------------------------------------|
   KC.MDR       | Multi-cast datagrams received                         |
                |-------------------------------------------------------|
   KC.DXD       | Datagrams transmitted, initially deferred             |
                |-------------------------------------------------------|
   KC.DX1       | Datagrams transmitted, single collision               |
                |-------------------------------------------------------|
   KC.DXM       | Datagrams transmitted, multiple collisions            |
                |-------------------------------------------------------|
   KC.XMF       | Transmit failures                                     |
                |-------------------------------------------------------|
   KC.XFM *     | Transmit failure bit mask                             |
                |-------------------------------------------------------|
   KC.RCF       | Receive failures                                      |
                |-------------------------------------------------------|
   KC.RFM *     | Receive failure bit mask                              |
                |-------------------------------------------------------|
   KC.UFD       | Unrecognized frame destination                        |
                |-------------------------------------------------------|
   KC.DOV       | Data overrun                                          |
                |-------------------------------------------------------|
   KC.SBU       | System buffer unavailable                             |
                |-------------------------------------------------------|
   KC.UBU       | User buffer unavailable                               |
                +-------------------------------------------------------+



   24.3.1  KC.XFM -- Ethernet Kontroller Counters  Transmit  Failure  Bit   24.3.1  KC.XFM -- Ethernet Kontroller Counters  Transmit  Failure  Bit
           Mask           Mask -
   |--------------------------------------------------------------------|
   |            Not used                |XCL|XBP|XFD|XFL|XOC|XSC|XCC|XEC|
   |--------------------------------------------------------------------|
    0---------------------------------27  28  29  30  31  32  33  34  35

   ____      ______    _______   Bits      Symbol    Meaning

   28        KCXCL     Carrier lost.
   29        KCXBP     Transmit buffer parity error.
   30        KCXFD     Remote failure to defer.
   31        KCXFL     Frame too long.
   32        KCXOC     Open circuit.
   33        KCXSC     Short circuit.
   34        KCXCC     Carrier check failed.
   35        KCXEC     Excessive collisions.







                                     94



   24.3.2  KC.RFM -- Ethernet Kontroller  Counters  Receive  Failure  Bit   24.3.2  KC.RFM -- Ethernet Kontroller  Counters  Receive  Failure  Bit
           Mask           Mask -
   |--------------------------------------------------------------------|
   |               Not used                         |RFP|RNB|RFL|RFE|RBC|
   |--------------------------------------------------------------------|
    0---------------------------------------------30  31  32  33  34  35

   ____      ______    _______   Bits      Symbol    Meaning

   31        KCRFP     Free list parity error.
   32        KCRNB     No free buffers.
   33        KCRFL     Frame too long.
   34        KCRFE     Framing error.
   35        KCRBC     Block check error.








































                                     95



   25  EMB -- ETHERNET MULTICAST ADDRESS BLOCK   25  EMB -- ETHERNET MULTICAST ADDRESS BLOCK

   Description:   Contains  a  multicast  address  enabled  for  datagram
                  reception by an Ethernet portal.

   Defined in:    ETHPRM

   Used by:       ETHSER

   See also:      ECB, EPB, EKB

                +-------------------------------------------------------+
   EMBNXT       | Address of next EMB                                   |
                |-------------------------------------------------------|
   EMBMCA (1)   / Ethernet multicast address                   (2 words)/
                +-------------------------------------------------------+

   Note:

        1.  These two words contain an Ethernet multicast address  stored
            as six 8-bit bytes left-justified.

































                                     96



   26  ENQ/DEQ BLOCKS   26  ENQ/DEQ BLOCKS

   Description:   Contains information about the ENQ/DEQ facility  for  a
                  job.   The  Q-Block  describes the user request for ENQ
                  resources.  The Lock Block describes the specific locks
                  requested.

                  In the following block descriptions, the symbol for the
                  left  half of the word is listed first, and below it is
                  the symbol for the right half of the word.

   The format of the Q-block is:

   Symbol       Map
                +-------------------------------------------------------+
   .QBLJQ       | Back ptr to last         | Forward ptr to next        |
   .QBNJQ       | Q-block for this job     | Q-block for this job       |
                |-------------------------------------------------------|
   .QBJCH       | Job context handle       | Channel no.  | Flags       |
                |                          | (.QBCHN)     | (.QBFLG)    |
                |-------------------------------------------------------|
   .QBLQ        | Ptr to last Queue        | Ptr to next Queue          |
   .QBNQ        | Block for this lock      | Block for this lock        |
                |-------------------------------------------------------|
   .QBLQR       | Ptr to last multiple     | Ptr to next multiple       |
   .QBNQR       | Q-Block                  | Q-Block                    |
                |-------------------------------------------------------|
   .QBRID       | Request-id               | Number requested from pool |
   .QBNRP       |                          |                            |
                |-------------------------------------------------------|
   .QBGRP       | Group number             | Ptr to Lock Block          |
   .QBLB        |                          |                            |
                |-------------------------------------------------------|
   .QBCHK       | Ptr to next Q-block to   | Mask Block                 |
   .QBMSK       | be checkd for deadlock   |                            |
                +-------------------------------------------------------+


















                                     97



   The format of the Lock Block is:

                +-------------------------------------------------------+
   .LBLHS       | Back ptr to last         | Ptr to next                |
   .LBNHS       | Lock Block in hash chain |  Lock Block in hash chain  |
                |-------------------------------------------------------|
   .LBLEN       | Length of Lock Block     | Flags                      |
   .LBFLG       |                          |                            |
                |-------------------------------------------------------|
   .LBLQ        | Ptr to last Q-Block      | Ptr to next Q-Block        |
   .LBNQ        | in chain                 | in chain                   |
                |-------------------------------------------------------|
   .LBLVL       | Level number             | Addr of Access Table       |
   .LBACC       |                          | (-2, -3, or 400000+jobn)   |
                |-------------------------------------------------------|
   .LBPUL       | Number in pool           | Number available           |
   .LBAVL       |                          |                            |
                |-------------------------------------------------------|
   .LBTIM       | Time stamp                                            |
                |-------------------------------------------------------|
   .LBTLN       | Length of Table Block    | Lock-associated Table      |
   .LBTBL       |                          |                            |
                |-------------------------------------------------------|
   .LBNMS       | Number of words in       | Timer                      |
   .LBPLT       | Mask Block               |                            |
                |-------------------------------------------------------|
   .LBTXT       | ASCIZ text, or 500000,,0+user-code, or                |
                | 36-bit user code                                      |
                +-------------------------------------------------------+

























                                     98



   27  EPB -- ETHERNET PORTAL BLOCK   27  EPB -- ETHERNET PORTAL BLOCK

   Description:   Contains  Ethernet  protocol-specific  information  for
                  Ethernet protocol users.

   Defined in:    ETHPRM

   Used by:       ETHSER

   See also:      ECB, EMB, EKB

                +-------------------------------------------------------+
   EPBNXT       | Address of next EPB on same ECB                       |
                |-------------------------------------------------------|
   EPBEKB       | Address of EKB assigned to this EPB                   |
                |-------------------------------------------------------|
   EPBPTY (1)   | Ethernet Protocol Type                                |
                |-------------------------------------------------------|
   EPBJCH       | JCH of Portal Owner                                   |
                |-------------------------------------------------------|
   EPBKPB       | Address of Kontroller's Protocol Block                |
                |-------------------------------------------------------|
   EPBPID       | Ethernet Portal ID                                    |
                |-------------------------------------------------------|
   EPBSTS *     | Ethernet Portal Status                                |
                |-------------------------------------------------------|
   EPBEMB       | Address of first EMB on the EPB                       |
                |-------------------------------------------------------|
   EPBCBI (2)   | Portal user's callback ID                             |
                |-------------------------------------------------------|
   EPBCBA       | Portal user's callback routine address                |
                |-------------------------------------------------------|
   EPBCBU (3)   / Portal user's callback UN block             (23 words)/
                |-------------------------------------------------------|
   EPBBSZ       | Receive datagram buffer size                          |
                |-------------------------------------------------------|
   EPBXBC       | Current transmit datagram buffer count                |
                |-------------------------------------------------------|
   EPBRBC       | Current receive datagram buffer count                 |
                |-------------------------------------------------------|
   EPBCTR *     | Ethernet portal counters block                        |
                +-------------------------------------------------------+
   Notes:

        1.  The Ethernet protocol type is stored as a 16-bit  code  right
            justified.

        2.  The portal user's callback ID and  callback  routine  address
            are supplied on the open portal function call to ETHSER.

        3.  The callback UN block is used at interrupt level by ETHSER to
            post interrupt level callbacks to the portal's user.


                                     99



   27.1  EPBSTS -- Ethernet Portal Status Word   27.1  EPBSTS -- Ethernet Portal Status Word

   |--------------------------------------------------------------------|
   |O|P|I| CST | PST |               Not used                           |
   |--------------------------------------------------------------------|
    0 1 2 3---5 6---8 9-----------------------------------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0         EPSOPN    Portal is open.
   1         EPSPAD    Protocol uses padding.
   2         EPSINF    Portal is an information only portal.
   3-5       EPSSTS    Current protocol state:
             .PSDIS    0 = Disabled.
             .PSDWE    1 = Disabled, want to enable.
             .PSEIP    2 = Enable in progress.
             .PSEPD    3 = Enable in progress, want to disable.
             .PSENA    4 = Enabled.
             .PSEWD    5 = Enabled, want to disable.
             .PSDIP    6 = Disable in progress.
   6-8       EPSPST    Previous protocol state.



   27.2  EPBCTR -- Ethernet Portal Counters Block   27.2  EPBCTR -- Ethernet Portal Counters Block

   Contains portal specific Ethernet  counters.   Only  updated  on  read
   portal counters function call to ETHSER.

                +-------------------------------------------------------+
   PC.SLZ       | Seconds since counters zeroed                         |
                |-------------------------------------------------------|
   PC.BYR       | Bytes received                                        |
                |-------------------------------------------------------|
   PC.DGR       | Datagrams received                                    |
                |-------------------------------------------------------|
   PC.BYX       | Datagrams received                                    |
                |-------------------------------------------------------|
   PC.DGX       | Datagrams transmitted                                 |
                |-------------------------------------------------------|
   PC.UBU       | User buffer unavailable                               |
                +-------------------------------------------------------+












                                    100



   28  EPT -- EXEC PROCESS TABLE   28  EPT -- EXEC PROCESS TABLE

   Description:   Contains information about the  executive  process  and
                  points  to  important  addresses, like page maps.  This
                  table has been called the Exec Page Map Page (EPMP)  in
                  the  past.   However,  the  EPT  is not a page map.  It
                  points  to  the  appropriate  page   maps   and   other
                  hardware-related instructions.

                  Each CPU constants GETTAB  table  (.GTCnC)  contains  a
                  word (%CCTOS) that points to that CPU's EPT.

   Defined in:    COMMON.MAC

                +-------------------------------------------------------+
   0            / Eight channel logout areas              (4 words each)/
                |-------------------------------------------------------|
   40           | I/O Page Fail trap                                    |
                |-------------------------------------------------------|
   41           | Not used                                              |
                |-------------------------------------------------------|
   42           / Priority interrupt instructions             (16 words)/
|               |-------------------------------------------------------|
|  60           / KL10 only, channel fill words                (4 words)/
|               |-------------------------------------------------------|
|  101          / KS10 only, UBA interrupt vector addresses    (7 words)/
|               |-------------------------------------------------------|
|  135          / KL10 only, date/time scratch buffer          (3 words)/
|               |-------------------------------------------------------|
   140          / 4  DTE control blocks                  (10 words each)/
                |-------------------------------------------------------|
   200          / Not used                                              /
                |-------------------------------------------------------|
   421          | Arithmetic overflow trap instruction                  |
                |-------------------------------------------------------|
   422          | Push down list overflow trap instruction              |
                |-------------------------------------------------------|
   423          | Trap 3 trap instruction                               |
|               |-------------------------------------------------------|
|  424          / KS10 only, halt status block                (18 words)/
|               |-------------------------------------------------------|
|  440          / KL10 only, DTE diagnostic control            (4 words)/
|               |-------------------------------------------------------|
|  444          / KL10 only, secondary DTE protocol           (11 words)/
|               |-------------------------------------------------------|
|  510          / KL10 only, time base for high-precision runtime       /
|               /                                              (2 words)/
|               |-------------------------------------------------------|
|  512          / KL10 only, performance analysis counter      (2 words)/
|               |-------------------------------------------------------|




                                    101



                |-------------------------------------------------------|
   514          | KL10 only, interval timer interrupt instruction       |
                |-------------------------------------------------------|
                / Not used                                              /
                |-------------------------------------------------------|
   540          | Address of Section 0 exec page map                    |
                |-------------------------------------------------------|
   541          / Address of Sections 1-37 exec page maps               /
                / One word for each section                             /
|               |-------------------------------------------------------|
|  600-677      / Not used                                              /
|               |-------------------------------------------------------|
|  700          / KL10 only, used to evaluate one word global byte      /
|               / pointers                                    (19 words)/
|               |-------------------------------------------------------|
|  723-777      / Not used                                              /
|               +-------------------------------------------------------+





































                                    102



   29  EXE FORMAT SAVE FILES   29  EXE FORMAT SAVE FILES

   Defined in:    S.MAC

   Used by:       COMCON, SEGCON

   Description:   The old .SAV, .LOW, .SHR, .HGH and .XPN files have been
                  replaced by the .EXE type in order to provide a unified
                  format for saved core image files.  This type  of  file
                  consists of two distinct but related portions:

                  1.  Information about the structure of the file

                  2.  The data in the file

   The format of an executable file created by the monitor can  have  the
   following sections:

                +-------------------------------------------------------+
                | Directory Section                                     |
                |-------------------------------------------------------|
                | Entry Vector Section (optional)                       |
                |-------------------------------------------------------|
                | End Vector Section                                    |
                |-------------------------------------------------------|
                | File data                                             |
                +-------------------------------------------------------+

   Each section is one or more words describing the  data  in  the  file,
   introduced  by  an  identifier code in the left half and the length of
   the chunk in the right half.  At this time, the defined codes are:

        1.  Directory:  1776

        2.  Entry Vector:  1775

        3.  End:  1777

   Other sections may be added later  as  they  become  necessary.   Each
   section is described below:

   The save file starts with a directory of the pages of data.  All pages
   of  data  are  stored  on page boundaries in exactly the form they are
   loaded into the virtual address space.  There is no  zero  compression
   within pages; only entire pages are compressed.









                                    103



   The format of the directory is:

        Word    Map
                +-------------------------------------------------------+
        0       | 1776                     | Size of directory          |
                |-------------------------------------------------------|
        1       | Flags                    | File page number           |
                |-------------------------------------------------------|
        2       | Repeat                   | Process page number        |
                |-------------------------------------------------------|
                | Flags                    | File page number           |
                |-------------------------------------------------------|
                | Repeat                   | Process page number        |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
                | Entry Vector                                          |
                |-------------------------------------------------------|


   ____ _   Word 0 has 1776 in the left half and the  size  of  the  directory  in
   words in the right half.

   ____ _   Word 1 has flag bits in the leftmost nine bits and a file page  number
   in  the right 27 bits.  If the file page number is zero, then the page
   is allocated but zero.  The flag bits are:

   ____      ______    ___________   Bits      Symbol    Description

   0         SV%HIS    Set if part of hiseg.
   1         SV%SHR    Set if page is sharable.
   2         SV%WRT    Set if page may be written.
   3         SV%CON    Page is concealed (access by PORTAL only).
   4         SV%SYM    Page is part of symbol table (not used).
   5         SV%ABZ    Page is allocated but zero (internal flag).

   ____ _   Word 2 has a repeat count in its leftmost nine bits for one less  than
   the  number  of  consecutive  file  and memory pages described by this
   pointer.  The rightmost nine bits describe the  process  address  into
   which this page should be loaded.  Words 1 and 2 are repeated for each
   contiguous portion of the process  space  that  has  identical  access
   bits.












                                    104



   The directory section is followed by the entry  vector  section.   The
   entry  vector is described by a 3-word entry vector block.  Word 0 has
   the 1775 in the left half, and the word  count  of  the  entry  vector
   block in the right half.

        Word    Map
                +-------------------------------------------------------+
                | Directory Section                                     |
                |-------------------------------------------------------|
        0       | 1775                     | Word count                 |
                |-------------------------------------------------------|
        1       | (JRST)                                                |
                |-------------------------------------------------------|
        2       | 30-bit Start Address                                  |
                |-------------------------------------------------------|
                | End Vector                                            |
                |-------------------------------------------------------|

   The entry vector is included only for multi-section programs.   It  is
   written in the following format by default:

   ____ _   Word 0 contains the code (1775) in the left half and the word count of
   the entry vector block (always 3) in the right half).

   ____ _   Word 1 contains the value 254000, which is the value of JRST with  the
   halves reversed.

   ____ _   Word 2 contains the 30-bit starting address for the program.

   Alternate forms of the entry vector block can be written.   The  entry
   vector  block  then  points to the entry vector.  In this case, Word 1
   contains the length of the entry  vector,  and  Word  2  contains  the
   address of the entry vector.  The address in Word 2 points to an Entry
   Vector, in the following format:

                +-------------------------------------------------------+
                | 30-bit Start Address                                  |
                |-------------------------------------------------------|
                | 30-bit Reenter Address                                |
                |-------------------------------------------------------|
                | Version number of program                             |
                +-------------------------------------------------------+

   The entry vector block is followed by the End Block.   The  End  Block
   word has the value 1777,,1.

   The End Block is followed by the file data.







                                    105



   30  FETTBL -- TABLE OF BITS FOR MONITOR FEATURES   30  FETTBL -- TABLE OF BITS FOR MONITOR FEATURES

   Description:   Contains bits for feature test switches.

   Defined in:    UUOCON (local symbol)

   Used by:       UUOCON

   GETTAB Table:  .GTFET (71)

                Map
                +-------------------------------------------------------+
                | Miscellaneous UUO features                            |
                |-------------------------------------------------------|
                | Real time and scheduling features                     |
                |-------------------------------------------------------|
                | Command features                                      |
                |-------------------------------------------------------|
                | Accounting features                                   |
                |-------------------------------------------------------|
                | Error control and options                             |
                |-------------------------------------------------------|
                | Non-I/O debugging features                            |
                |-------------------------------------------------------|
                | File system features                                  |
                |-------------------------------------------------------|
                | Internal disk features                                |
                |-------------------------------------------------------|
                | Scanner features                                      |
                |-------------------------------------------------------|
                | Miscellaneous I/O features                            |
                |-------------------------------------------------------|
                | Miscellaneous I/O features (second word)              |
                |-------------------------------------------------------|
                | Internal disk features (second word)                  |
                |-------------------------------------------------------|
                | File system features (second word)                    |
                |-------------------------------------------------------|
                | Miscellaneous UUO features (second word)              |
                +-------------------------------------------------------+














                                    106



   31  FRAGMENT TABLE   31  FRAGMENT TABLE

   Description:   Contains data needed in order to swap in  a  fragmented
                  core  image.   Set  up  as  required  when segments are
                  swapped out.  JBTSWP points to first fragment table for
                  a  given  segment.   This  table  is used only for high
                  segments, and for low segments that are in the  process
                  of being swapped out.

   Used by:       SCHED1, SEGCON, SWPSER, VMSER

   Map
   +---------------------------------------------------------------+
   |         Size                 |     |   U    |     Address     |
   |---------------------------------------------------------------|
    0---------------------------17 18-21 23----24 25-------------35

   The bits in the fragment entry are defined below:

   ____      ________   Bits      Contents

   0-17      Number of pages in fragment.
   20-22     Unit index into SWPTAB.
   23-35     Logical page within unit where fragment starts.

   Notes:

        1.  A zero word indicates end of table.

        2.  Fragment tables are built from  four-word  blocks.   If  more
            than  one block is required, and they are not contiguous, the
            last word of the preceding block contains -1 in the left half
            and the address of the next table in the right half.





















                                    107



   32  HOM -- HOME BLOCK   32  HOM -- HOME BLOCK

   Description:   Block on each disk unit or  pack  that  contains  vital
                  statistics  that cannot be "built in" when a monitor is
                  generated.  These are primarily parameters of the  unit
                  or pack and the structure to which it belongs.

   Defined in:    COMMOD

   Used by:       MONBTS, ONCMOD, REFSTR

   Symbol       Map
                +-------------------------------------------------------+
   HOMNAM       | SIXBIT   /HOM/   (written by MAP program)             |
                |-------------------------------------------------------|
   HOMHID       | SIXBIT unit ID   (written by MAP program)             |
                |-------------------------------------------------------|
   HOMPHY *     | Physical disk address of | Physical disk address of   |
                | this block on this unit  | other Home blk on this unit|
                |-------------------------------------------------------|
   HOMSRC       | Position of this structure in System Search List      |
                | (-1 means not in System Search List)                  |
                |-------------------------------------------------------|
   HOMSNM (2,3) | SIXBIT structure name (0=not in file structure)       |
                |-------------------------------------------------------|
   HOMNXT (3)   | Unit ID for next unit in STR (0=last or only unit)    |
                |-------------------------------------------------------|
   HOMPRV (3)   | Unit ID for previous unit in STR (0=last or only unit)|
                |-------------------------------------------------------|
   HOMLOG       | SIXBIT logical unit name within structure             |
                |-------------------------------------------------------|
   HOMLUN (3)   | Logical unit number within structure                  |
                |-------------------------------------------------------|
   HOMPPN       | PPN that refreshed structure under timesharing, or 0  |
                |-------------------------------------------------------|
   HOMHOM       | Logical block # for Home | Logical block # for extra  |
                | block within unit        | Home block within unit     |
                |-------------------------------------------------------|
   HOMGRP       | Number of blocks per group to try for on output       |
                | (not clusters)                                        |
                |-------------------------------------------------------|
   HOMBSC       | Number of blocks per supercluster on this unit        |
                |-------------------------------------------------------|
   HOMSCU       | Number of superclusters per unit                      |
                |-------------------------------------------------------|
   HOMCNP       | Byte pointer for cluster count in retrieval pointers  |
                |-------------------------------------------------------|
   HOMCKP       | Byte pointer for checksum in retrieval pointers       |
                |-------------------------------------------------------|
   HOMCLP       | Byte pointer for cluster address in retrieval pointers|
                |-------------------------------------------------------|



                                    108



                |-------------------------------------------------------|
   HOMBPC       | Number of blocks per cluster for this structure       |
                |-------------------------------------------------------|
   HOMK4S       | Number of K words for swapping on this unit           |
                | (0 means no swapping)                                 |
                |-------------------------------------------------------|
   HOMREF (7)   | Non-zero if file structure must be refreshed          |
                |-------------------------------------------------------|
   HOMSIC       | Number of SAT blocks in core                          |
                |-------------------------------------------------------|
   HOMSID       | Unit ID of next unit in active swapping list          |
                | (0 if last or not in active swapping list)            |
                |-------------------------------------------------------|
   HOMSUN       | Logical unit number in active swapping list           |
                | (-1 if not in swapping list)                          |
                |-------------------------------------------------------|
   HOMSLB       | First logical block # for swapping on this unit       |
                |-------------------------------------------------------|
   HOMCFS       | Swapping class for unit                               |
                |-------------------------------------------------------|
   HOMSPU       | Number of SAT blocks per unit                         |
                |-------------------------------------------------------|
   HOMOVR       | Overdraw limit per user on this structure             |
                |-------------------------------------------------------|
   HOMGAR       | Upper bound on total reserved blocks guaranteed to    |
                | user                                                  |
                |-------------------------------------------------------|
   HOMSAT (1)   | SAT.SYS                                               |
                |-------------------------------------------------------|
   HOMHMS (1,5) | HOME.SYS                                              |
                |-------------------------------------------------------|
   HOMSWP (1)   | SWAP.SYS                                              |
                |-------------------------------------------------------|
   HOMMNT (1)   | MAINT.SYS                                             |
                |-------------------------------------------------------|
   HOMBAD (1)   | BADBLK.SYS                                            |
                |-------------------------------------------------------|
   HOMCRS (1)   | CRASH.EXE                                             |
                |-------------------------------------------------------|
   HOMSNP (1)   | SNAP.SYS                                              |
                |-------------------------------------------------------|
   HOMRCV (1)   | RECOV.SYS                                             |
                |-------------------------------------------------------|
   HOMSUF (1)   | SYS [1,4].UFD                                         |
                |-------------------------------------------------------|
   HOMPUF (1)   | PRINTR [3,3].UFD                                      |
                |-------------------------------------------------------|
   HOMMFD (1)   | MFD [1,1].UFD                                         |
                |-------------------------------------------------------|





                                    109



                |-------------------------------------------------------|
   HOMPT1       | 1st retrieval ptr for MFD for this unit's structure   |
                |-------------------------------------------------------|
   HOMUN1       | Logical unit number where MFD starts                  |
                |-------------------------------------------------------|
   HOMLEN       / Table of lengths of files created by refresh (6 words)/
                / Needed by CRS, SNP, RCV, and UFDs (in that order)     /
                |-------------------------------------------------------|
   HOMUTP       | Unit type on which Home block was written (see UNYUTP)|
                |-------------------------------------------------------|
   HOMRIP       | Reserved for use by RIPOFF                            |
                |-------------------------------------------------------|
   HOMKLB       / KL10 only, used by console front end        (20 words)/
                |-------------------------------------------------------|
   HOMFEA       | FE-file address for KS10                              |
                |-------------------------------------------------------|
   HOMFES       | FE-file size for KS10                                 |
                |-------------------------------------------------------|
   HOMTCS       | Tracks/cylinder/sector for KS10                       |
                |-------------------------------------------------------|
   HOMKLE       | Used to find files for bootstrap/dump                 |
                |-------------------------------------------------------|
   HOMK4C       | K for CRASH.EXE                                       |
                |-------------------------------------------------------|
   HOMPVS       | Word containing bit which says private structure      |
                |-------------------------------------------------------|
   HOMSDL       | Position of structure in system dump list             |
                |-------------------------------------------------------|
   HOMOPP       | PPN of structure owner                                |
                |-------------------------------------------------------|
   HOMMSU       | Reserved for use by DIGITAL                           |
                |-------------------------------------------------------|
   HOMCUS       / Reserved for customer definition             (4 words)/
                |-------------------------------------------------------|
   HOMVID       / Volume-ID                  (12 PDP-11 bytes = 3 words)/
                |-------------------------------------------------------|
   HOMOWN       | Owner name                                            |
                |-------------------------------------------------------|
   HOMVSY       | System type (TOPS-10)                                 |
                |-------------------------------------------------------|
   HOMCOD       | 0                        | (Unlikely code) 707070     |
                |-------------------------------------------------------|
   HOMSLF       | 0                        | This blk number in unit    |
                |                          | (not cluster)              |
                +-------------------------------------------------------+









                                    110



   Notes:

        1.  This value is the logical block number of first RIB  for  the
            file.

        2.  HOMSNM (structure name) is ignored by the  monitor  when  the
            structure is mounted.

        3.  HOMSNM, HOMNXT, HOMPRV, and HOMLUN are checked by the monitor
            at system startup; and by PULSAR when the unit comes on line,
            to determine whether a complete structure is  available  that
            can be mounted.

        4.  An extra copy of the Home block is maintained on each unit in
            case  the original becomes unreadable.  These two Home blocks
            which must be at  specific  places  known  to  the  software.
            Currently, they are blocks 1 and 10 (decimal) of each unit.

        5.  Each file structure has one Home  file  HOME.SYS.   It  is  a
            "Sparse  File"  with  retrieval information in first block of
            each group.  However, only the second block of each group  (1
            cluster)  has data, the remaining blocks (if any) are 0.  The
            Home block is constructed so that each group is on a separate
            unit.

        6.  Home blocks are limited to the  first  262,000  blocks  on  a
            unit.   Knowing  the  logical block address of Home blocks is
            useful only to recovery programs when file structure has been
            clobbered.  Most programs read Home blocks using HOME.SYS.

        7.  HOMREF is set by ONCE-only code when some parameter for  this
            unit  has  been  changed.   It  is checked when the system is
            started and by PULSAR when the pack is mounted.

   * The bytes in HOMPHY are described below:

   HOMPHY -- Physical Address

   |--------------------------------------------------------------------|
   |          C       |  S   |  A   |             C       |  S   |  A   |
   |--------------------------------------------------------------------|
    0---------------7  8---12 13--17 18-----------------25 26--30 31--35

   ____      _______   Byte      Meaning

   C         Cylinder address.
   S         Surface.
   A         Sector address.






                                    111



   33  INTTAB -- INTERRUPT ROUTINE TABLE   33  INTTAB -- INTERRUPT ROUTINE TABLE

   Description:   Contains descriptive information about  each  interrupt
                  routine.   One  entry, of two words, for each interrupt
                  routine.

                  Position  of  an  entry  in  the   table   is   of   no
                  significance.

   Defined in:    COMMON

   Used by:       COMMON, ONCE

             +----------------------------------------------------------+
   Device 1  |D |DDB count | CPU# | PI channel |Interrupt routine adr(4)|
             |----------------------------------------------------------|
             |     | Station # |  DDB Length   |Prototype DDB address   |
             |----------------------------------------------------------|
   Device 2  |D |DDB count | CPU# | PI channel |Interrupt routine adr(4)|
             |----------------------------------------------------------|
             |     | Station # |  DDB Length   |Prototype DDB address   |
             |----------------------------------------------------------|
                                   .   .   .
             |----------------------------------------------------------|
   Device n  |D |DDB count | CPU# | PI channel |Interrupt routine adr(4)|
             |----------------------------------------------------------|
             |     | Station # |  DDB Length   |Prototype DDB address   |
             +----------------------------------------------------------+

   Format of each two-word entry:

   Word 0

   |--------------------------------------------------------------------|
   | D |  DDB count  |  CPU#  |  PI channel  | Interrupt routine adr (4)|
   |--------------------------------------------------------------------|
     0  1----------11 12----14 15----------17 18----------------------35

   Bit 0 = 1 for any type of DECtape routine.


   Word 1

   |--------------------------------------------------------------------|
   |      |  Station #  |    DDB Length | Prototype DDB address         |
   |--------------------------------------------------------------------|
    0----2 3-----------8 9------------17 18---------------------------35







                                    112



   Notes:

        1.  INTTAB entries are set up by the ASGINT and ASGSV1 macros  in
            COMMON according to parameters specified in HDWCNF.MAC.

        2.  Table is used by  INTLOP  in  ONCE  to  build  the  interrupt
            routine chain for each channel.

        3.  Used by ONCE-only code in COMMON to set  up  multiple  Device
            Data Blocks.

        4.  The interrupt routine address is the address of the CONSO  in
            the skip chain.









































                                    113



   34  JBTADR -- JOB ADDRESS TABLE   34  JBTADR -- JOB ADDRESS TABLE

   Description:   Contains the core address and length for  each  segment
                  in  core.   One entry for each job number and each high
                  segment number.

   Defined in:    COMMON
|  
|  Used by:       APRSER, CDPSER, CLOCK1, COMCON, CORE1, CPNSER,  DISSER,
|                 DTASRN,  ERRCON, FILIO, LOKCON, METCON, REFSTR, SCHED1,
|                 SEGCON, SWPSER, SYSINI, UUOCON, VMSER

   GETTAB Table:  .GTADR (1)

                +-------------------------------------------------------+
   Job 0        | Length -1                | Relocation address         |
                |-------------------------------------------------------|
   Job 1        | Length -1                | Relocation address         |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
   Job n        | Length -1                | Relocation address         |
                |-------------------------------------------------------|
   High         |                          |                            |
   Segment      | 0                        | Relocation address         |
   n+1          |                          |                            |
                |-------------------------------------------------------|
   n+2          | 0                        | Relocation address         |
                |-------------------------------------------------------|
                                       .   .   .

   Notes:

        1.  A job that is not in core has zero in its entry.

        2.  This table is the same as JBTDAT.

        3.  The left half of JBTADR contains the highest page  number  in
            the job's Section 0 page map.

        4.  For low segments, the right half of  JBTADR  contains  .JDAT.
            For high segments, the symbolic contents of the right half is
            .VJDT.

            If the segment is locked into  contiguous  memory  locations,
            JBTADR  contains the first physical page number where the job
            resides.

        5.  The Length field applies only to the  job's  low  segment  in
            Section 0.




                                    114



   35  JBTAD2 -- SECOND JOB ADDRESS TABLE   35  JBTAD2 -- SECOND JOB ADDRESS TABLE

   Description:   This table contains the first physical page number  for
                  each job's low segment.  This table is kept so that the
                  monitor can obtain the page number when the job is  not
                  currently  mapped or the UPT is in error.  There is one
                  entry per job.

   Defined in:    COMMON
|  
|  Used by:       APRSER, CORE1, ERRCON, LOKCON, VMSER

                +-------------------------------------------------------+
   Job 0        |                          | First physical page        |
                |-------------------------------------------------------|
   Job 1        |                          | First physical page        |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
   Job n        |                          | First physical page        |
                +-------------------------------------------------------+

































                                    115



   36  JBTCHK -- SEGMENT CHECKSUM TABLE   36  JBTCHK -- SEGMENT CHECKSUM TABLE

   Description:   Used to assure correct  read-in  of  swapped  segments.
                  One  entry  for  each  job  number and high seg number.
                  Indexed by job number or high segment number.

                  Each entry contains the first word of the corresponding
                  segment when that segment is swapped out.

   Defined in:    COMMON
|  
|  Used by:       CTXSER, SWPSER

                +-------------------------------------------------------+
   Job      0   | Checksum 0                                            |
                |-------------------------------------------------------|
   Job      1   | Checksum 1                                            |
                |-------------------------------------------------------|
   Job      2   | Checksum 2                                            |
                |-------------------------------------------------------|
                                      .    .    .   
                |-------------------------------------------------------|
   Job      n   | Checksum n                                            |
                |-------------------------------------------------------|
   High         |                                                       |
   Segment  n+1 | Checksum n+1                                          |
                |                                                       |
                |-------------------------------------------------------|
            n+2 | Checksum n+2                                          |
                |-------------------------------------------------------|
                                      .    .    .























                                    116



   37  JBTCLM -- JOB CORE LIMITS   37  JBTCLM -- JOB CORE LIMITS

   Description:   Contains the core limit for each job.   Right  half  is
                  JBTDDB.

   Defined in:    COMMON

   Used by:       COMCON, CORE1, VMSER

   See also:      JBTDDB

                +-------------------------------------------------------+
   Job 0        | Core limit for job       | JBTDDB                     |
                |-------------------------------------------------------|
   Job 1        | Core limit for job       | JBTDDB                     |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
   Job n        | Core limit for job       | JBTDDB                     |
                +-------------------------------------------------------+


































                                    117



   38  JBTCQ -- JOB QUEUES TABLE   38  JBTCQ -- JOB QUEUES TABLE

   Description:   Contains the master  job  queues.   Each  queue  is  an
                  ordered  list  of  job numbers corresponding to all the
                  jobs in some particular status.  There are two sets  of
                  queues,  one for jobs that are in core and one for jobs
                  that are swapped out.

                  The index in the positive direction relative  to  JBTCQ
                  is  by job number.  The index in the negative direction
                  is the queue number for the in-core master  queues  and
                  the queue number offset by the maximum number of queues
                  for the out-of-core master queues.

                  Each queue is an  ordered  list  of  job  numbers.   In
                  JBTCQ,  each  queue  is  represented  by  a forward and
                  backward linked  ring  of  table  entries.   Each  ring
                  begins  and  ends  with  a  "queue header" entry at the
                  position equal to the negative  queue  number.   A  job
                  number  in the queue is represented by the entry at the
                  position equal to the job number.  This entry  contains
                  pointers  to  the  preceding  entry  and  the following
                  entry, thus establishing a unique position for that job
                  number within the queue.

   Defined in:    COMMON

   Used by:       SCHED1, SYSINI

   See also:      JBTSTS

                +-------------------------------------------------------+
    -MAXQ -3    | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
    -MAXQ -2    | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
    -MAXQ -1    | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
    -MAXQ                              .   .   .
                |-------------------------------------------------------|
          -3    | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
   Queue  -2    | Last job in queue        | First job in queue         |
   Number       |-------------------------------------------------------|
          -1    | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
    JBTCQ  0    | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
           1    | Number of previous job   | Number of next job         |
                |-------------------------------------------------------|




                                    118



                |-------------------------------------------------------|
   Job     2    | Number of previous job   | Number of next job         |
   Number       |-------------------------------------------------------|
           3    | Number of previous job   | Number of next job         |
                |-------------------------------------------------------|
                                       .   .   .

   Notes:

        1.  Every job number is in one and only one queue.

        2.  It is possible for a queue to contain  no  job  numbers.   In
            this  case,  the  queue  header  entry  contains a pointer to
            itself, the negative queue number, in both halves.








































                                    119



   39  JBTCSQ -- SUBQUEUES TABLE   39  JBTCSQ -- SUBQUEUES TABLE

   Description:   Contains the PQ2 subqueues that partition  PQ2  into  a
                  number of ordered classes.  Each subqueue (or subclass)
                  is an ordered subset of PQ2 job  numbers,  all  of  the
                  same class.

   Defined in:    COMMON

   Used by:       SCHED1, SYSINI

   Subqueue
   Number
                +-------------------------------------------------------+
          -SQn  | Last job in subqueue     | First job in subqueue      |
                |-------------------------------------------------------|
          -SQ1  | Last job in subqueue     | First job in subqueue      |
                |-------------------------------------------------------|
          -SQ0  | Last job in subqueue     | First job in subqueue      |
                |-------------------------------------------------------|
   JBTCSQ       |                                                       |
                |-------------------------------------------------------|
             1  | Number of previous job   | Number of next job         |
   Job          |-------------------------------------------------------|
   Number    2  | Number of previous job   | Number of next job         |
                |-------------------------------------------------------|
             3  | Number of previous job   | Number of next job         |
                +-------------------------------------------------------+
                                       .   .   .

   Notes:

        1.  Every job number in PQ2 is in one and only one subqueue.

        2.  It is possible for a subqueue to contain no job numbers.   In
            this  case,  the  subqueue header entry contains a pointer to
            itself, the negative subqueue number, in both halves.

        3.  The number of classes partitioning PQ2 is specified at MONGEN
            time.

        4.  When the scheduler scans  these  subqueues,  it  does  so  in
            order, starting with SQ0 (class 0).











                                    120



   40  JBTDDB -- DDB REQUESTED BY JOB   40  JBTDDB -- DDB REQUESTED BY JOB

   Description:   One entry for each job,  containing  JBTCLM  (job  core
                  limit)  in  the  left half, and the DDB that the job is
                  waiting for, in the right half.

   Defined in:    COMMON

   Used by:       COMCON

   See also:      JBTCLM

                +-------------------------------------------------------+
   Job 0        | JBTCLM                   | DDB requested              |
                |-------------------------------------------------------|
   Job 1        | JBTCLM                   | DDB requested              |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
   Job n        | JBTCLM                   | DDB requested              |
                +-------------------------------------------------------+



   41  JBTDEV -- HIGH SEGMENT DEVICE TABLE   41  JBTDEV -- HIGH SEGMENT DEVICE TABLE

   Description:   One entry for each high segment.

                  The entry is the high segment's physical device name or
                  file structure name.  (Job number entries are not used.
                  This table overlaps the high end of the JBTPPN table.)

   Defined in:    COMMON

   Used by:       SEGCON, UUOCON

   GETTAB Table:  .GTDEV (24)

     
   High         +------------------------------------------------------+
   Segment  n+1 | Physical device name or file structure name          |
                |------------------------------------------------------|
            n+2 | Physical device name or file structure name          |
                |------------------------------------------------------|
                                     .     .    .









                                    121



   42  JBTDTC -- JOB REQUESTING DECTAPE DDB   42  JBTDTC -- JOB REQUESTING DECTAPE DDB

   Description:   Contains one entry for each job, with  the  address  of
                  the  master  DECtape  DDB that contains the DT resource
                  the job desires in the left half, and  the  right  half
                  contains  JBTIPC.   JBTDTC  is non-zero when the job is
                  waiting for a DECtape DDB (in DT resource wait  state),
                  or  owns  the  DT  resource  for  the  specified master
                  DECtape DDB.

   Defined in:    COMMON

   Used by:       DTASER, SCHED1

   See also:      JBTIND

                +-------------------------------------------------------+
   Job      0   | Master DECtape DDB address   | JBTIPC                 |
                |-------------------------------------------------------|
   Job      1   | Master DECtape DDB address   | JBTIPC                 |
                |-------------------------------------------------------|
                                           .   .   .
                |-------------------------------------------------------|
   Job      n   | Master DECtape DDB address   | JBTIPC                 |
                +-------------------------------------------------------+





























                                    122



   43  JBTIMI -- JOB PAGE COUNT   43  JBTIMI -- JOB PAGE COUNT

   Description:   One  entry  for  each  job  containing  the  number  of
                  physical   pages  in  the  user  portion  of  the  job,
                  referenced by byte pointer IMGIN.

   Defined in:    COMMON

   Used by:       CORE1, SCHED1, SEGCON, SWPSER, VMSER

   See also:      JBTIMO

                +-------------------------------------------------------+
   Job 0        | | NZSICN | NZSSCN  | Physical page count of user area |
                |-------------------------------------------------------|
   Job 1        | | NZSICN | NZSSCN  | Physical page count of user area |
                |-------------------------------------------------------|
                                      .   .   .
                |-------------------------------------------------------|
   Job n        | | NZSICN | NZSSCN  | Physical page count of user area |
                +-------------------------------------------------------+

   Bit definitions:

             ____             Byte
   ____      _______   ________   Bits      Pointer   Contents

   0-2                 Reserved.
   3-8       NZSICN    Byte pointer to number of pages to allocate on
                       swap-in for Non-Zero Section (NZS) maps.
   9-14      NZSSCN    Byte pointer to number of pages allocated to NZS
                       page maps.
   15-35     IMGIN     Number of physical pages in user portion of job.





















                                    123



   44  JBTIMO -- SWAPPED-OUT PAGE COUNT   44  JBTIMO -- SWAPPED-OUT PAGE COUNT

   Description:   Contains the number of physical  pages  in  swapped-out
                  job (that is, the number of pages on disk).  This table
                  is referenced by byte pointers IMGOUT.

   Defined in:    COMMON

   Used by:       CORE1, SEGCON, SWPSER, VMSER

   See also:      JBTIMI

                +-------------------------------------------------------+
   Job 0        |                          | Number of pages on disk    |
                |-------------------------------------------------------|
   Job 1        |                          | Number of pages on disk    |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
   Job n        |                          | Number of pages on disk    |
                +-------------------------------------------------------+
        

   ____      ______    ________   Bits      Symbol    Contents

   0-14                Reserved.
   15-35     IMGOUT    Page count.



























                                    124



   45  JBTIPC -- REQUESTED IPCF INTERLOCK   45  JBTIPC -- REQUESTED IPCF INTERLOCK

   Description:   Contains one entry for each job.  Each  entry  contains
                  JBTDTC  in  the  left half, and the address of the Exec
                  IPCF interlock that the job is waiting for (or owns) in
                  the  right  half.   The right half is non-zero when the
                  job is in IP resource  wait  state  or  owns  the  IPCF
                  interlock.

   Defined in:    COMMON

   Used by:       SCHED1, IPCSER

   See also:      JBTDTC

                +-------------------------------------------------------+
   Job 0        | JBTDTC                   | Interlock address          |
                |-------------------------------------------------------|
   Job 1        | JBTDTC                   | Interlock address          |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
   Job n        | JBTDTC                   | Interlock address          |
                +-------------------------------------------------------+






























                                    125



   46  JBTJIL -- JUST-SWAPPED-IN LIST   46  JBTJIL -- JUST-SWAPPED-IN LIST

   Description:   Special queue containing jobs in  PQ2  that  have  just
                  been  swapped in and have not expired their time slice.
                  The format of the queue table is similar to JBTCQ, that
                  is  indexed in the positive direction by job number and
                  the negative direction by a queue number (not the  same
                  queue number that is used in JBTCQ).

                  The three  queue  headers  are  regular  (timesharing),
                  background  batch,  and  jobs whose low segments are in
                  core and are waiting for swapping I/O  to  be  finished
                  for a high segment.

   Defined in:    COMMON

   Used by:       SCHED1, SYSINI

   See also:      JBTOLS

                +-------------------------------------------------------+
   JBTJIL       | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
   Job     1    | Number of previous job   | Number of next job         |
   Number       |-------------------------------------------------------|
           2    | Number of previous job   | Number of next job         |
                |-------------------------------------------------------|
           3    | Number of previous job   | Number of next job         |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
           n    | Number of previous job   | Number of next job         |
                +-------------------------------------------------------+


   Notes:

   The scheduler searches the timesharing queue for job  selection  ahead
   of  PQ2  a  certain percentage of the time.  This percentage is called
   the response fairness factor and may  be  modified  from  the  default
   value of 10% by the SCHED. UUO.













                                    126



   47  JBTJRQ -- REQUEUE LIST   47  JBTJRQ -- REQUEUE LIST

   Description:   A singly linked first in last out list of jobs  waiting
                  to be requeued.  The right half of JBTJRQ points to the
                  first entry in the queue.  The remainder of  the  table
                  is indexed by job number with each entry containing the
                  job number of the next job in the queue.

   Defined in:    COMMON

   Used by:       CLOCK1, SCHED1

                +-------------------------------------------------------+
   JBTJRQ       |                          | Number of 1st job in list  |
                |-------------------------------------------------------|
   Job     1    | Number of next job in the list                        |
   Number       |-------------------------------------------------------|
           2    | Number of next job in the list                        |
                |-------------------------------------------------------|
           3    | Number of next job in the list                        |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
           n    | Number of next job in the list                        |
                +-------------------------------------------------------+





























                                    127



   48  JBTLIM -- JOB TIME LIMIT TABLE   48  JBTLIM -- JOB TIME LIMIT TABLE

   Description:   One  entry  per  job,  indexed  by  job  number.    Bit
                  definitions  are  found  in S.MAC.  JBTLIM is assembled
                  only if FTTLIM is non-zero.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, CORE1, FILFND, IPCSER, SCNSER, UUOCON

   GETTAB Table:  .GTLIM (40)

                +-------------------------------------------------------+
   Job     0    | LTL |  LCR  | LBT | LSY |                      JB.LTM |
   Number       |-------------------------------------------------------|
           1    | LTL |  LCR  | LBT | LSY |                      JB.LTM |
                |-------------------------------------------------------|
           2    | LTL |  LCR  | LBT | LSY |                      JB.LTM |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
           n    | LTL |  LCR  | LBT | LSY |                      JB.LTM |
                +-------------------------------------------------------+


   ___       ____      _______   _______   Bit       Mask      Pointer   Content

   0         JB.LTL              Set if time limit set by forced DETACH.
   1-9       JB.LCR    JBYLCR    User core limit (in pages).
   10        JB.LBT              Batch job.
   11        JB.LSY              Set when program came from SYS.
   12-35     JB.LTM    JBLTM     Time limit in jiffies (0 = infinite).






















                                    128



   49  JBTLOC -- JOB LOCATION TABLE   49  JBTLOC -- JOB LOCATION TABLE

   Description:   One entry per job number; indexed by job number.

                  The first entry in the table  is  the  central  station
                  number.

                  The table is used by the  LOCATE  command  and  by  the
                  NEWJOB routine in COMMON to locate a job at the station
                  number of its controlling terminal.

                  JBTLOC is assembled only if FTNET is non-zero.

   Defined in:    COMMON

   Used by:       AUTCON, COMCON, COMDEV, IPCSER, NETSER, PTYSER, SYSINI,
                  UUOCON

   GETTAB Table:  .GTLOC (26)

                +-------------------------------------------------------+
                | Central site station number                           |
                |-------------------------------------------------------|
   Job     1    | Job location                                          |
   Number       |-------------------------------------------------------|
           2    | Job location                                          |
                |-------------------------------------------------------|
           3    | Job location                                          |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
           n    | Job location                                          |
                +-------------------------------------------------------+





















                                    129



   50  JBTNAM -- JOB NAME TABLE   50  JBTNAM -- JOB NAME TABLE

   Description:   Tells SIXBIT name of each segment; typically,  this  is
                  the  file  it came from.  One entry for each job number
                  or high segment number.  Indexed by job number or  high
                  segment number.  JBTPRG is the same table.

   Defined in:    COMMON
|  
|  Used by:       APRSER, CLOCK1, COMCON, ERRCON, FILFND, IPCSER, LPTSER,
                  NETSER, PTYSER, SCNSER, SEGCON, TAPUUO, TSKSER, UUOCON

   GETTAB Table:  .GTPRG (3)

                +-------------------------------------------------------+
   Job     0    |                                                       |
   Number       |-------------------------------------------------------|
           1    | SIXBIT/segment1/                                      |
                |-------------------------------------------------------|
           2    | SIXBIT/segment2/                                      |
                |-------------------------------------------------------|
           3    | SIXBIT/segment3/                                      |
                |-------------------------------------------------------|
                                           .    .    .
                |-------------------------------------------------------|
           n    | SIXBIT/segmentn/                                      |
                |-------------------------------------------------------|
   High    n+1  | SIXBIT/segmentn+1/                                    |
   Segment      |-------------------------------------------------------|
           n+2  | SIXBIT/segmentn+2/                                    |
                |-------------------------------------------------------|
                                           .    .    .






















                                    130



   51  JBTOLS -- JOB OUTPUT LIST   51  JBTOLS -- JOB OUTPUT LIST

   Description:   Special  queues  containing  jobs  in  PQ2  which  have
                  exceeded  their time slice and consequently have become
                  eligible for swap out.  The format of the  queue  table
                  is  similar  to  that  of  JBTCQ,  in that the table is
                  indexed in the positive direction by  job  number,  and
                  the  negative direction by queue number.  The two queue
                  headers are regular output (timesharing) and background
                  batch.

   Defined in:    COMMON

   Used by:       SCHED1, SYSINI

   See also:      JBTJIL

                +-------------------------------------------------------+
   JBTOBQ       | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
   JBTOLQ       | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
   JBTOLS       | Last job in queue        | First job in queue         |
                |-------------------------------------------------------|
   Job    1     | Number of previous job   | Number of next job         |
   Number       |-------------------------------------------------------|
          2     | Number of previous job   | Number of next job         |
                |-------------------------------------------------------|
          3     | Numberof previous job    | Number of next job         |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
          n     | Number of previous job   | Number of next job         |
                +-------------------------------------------------------+


   Notes:

   Once a job enters JBTOLS it has a higher priority for swap out.















                                    131



   52  JBTPC -- USER MODE PC   52  JBTPC -- USER MODE PC

   Description:   Contains user program  counter  for  each  job  in  the
                  system.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, ERRCON, UUOCON

   GETTAB Table:  .GTPC (152)

                +-------------------------------------------------------+
   Job     0    | Full-word PC                                          |
   Number       |-------------------------------------------------------|
           1    | Full-word PC                                          |
                |-------------------------------------------------------|
           2    | Full-word PC                                          |
                |-------------------------------------------------------|
                                           .   .   .
                |-------------------------------------------------------|
           n    | Full-word PC                                          |
                +-------------------------------------------------------+
































                                    132



   53  JBTPDB -- PROCESS DATA BLOCK TABLE   53  JBTPDB -- PROCESS DATA BLOCK TABLE

   Description:   One entry per job, indexed by job  number.   The  right
                  half  contains  the  address of this job's Process Data
                  Block.

   Defined in:    COMMON
|  
|  Used by:       APRSER, CLOCK1, COMCON, DATMAN, ERRCON, IPCSER, MOSSER,
                  NETSER, SCHED1, SCMUUO, UUOCON, VMSER

   GETTAB Table:  .GTPDB (162)

                +-------------------------------------------------------+
   Job     0    |      | IFYPGS  | NFYPGS  | PDB address                |
   Number       |-------------------------------------------------------|
           1    |      | IFYPGS  | NFYPGS  | PDB address                |
                |-------------------------------------------------------|
           2    |      | IFYPGS  | NFYPGS  | PDB address                |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    |      | IFYPGS  | NFYPGS  | PDB address                |
                +-------------------------------------------------------+

   Bit definitions:

   ___       ______    ________   Bit       Symbol    Contents

   0-5                 Reserved.
   6-11      IFYPGS    Byte pointer to the number of funny pages
                       allocated on swap-in.
   12-17     NFYPGS    Byte pointer to the number of funny pages allotted
                       to the user.
   18-35               PDB address.



















                                    133



   54  JBTPIA -- SOFTWARE PROGRAM INTERRUPT TABLE   54  JBTPIA -- SOFTWARE PROGRAM INTERRUPT TABLE

   Description:   Contains flags and pointers to program interrupt  table
                  for  each  job  that  is  using the programmed software
                  interrupt facility.

   Defined in:    COMMON

   Used by:       IPCSER, PSISER, UUOCON

                +-------------------------------------------------------+
   Job     0    | 0 | 1 |                  | Interrupt table address    |
   Number       |-------------------------------------------------------|
           1    | 0 | 1 |                  | Interrupt table address    |
                |-------------------------------------------------------|
           2    | 0 | 1 |                  | Interrupt table address    |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    | 0 | 1 |                  | Interrupt table address    |
                +-------------------------------------------------------+

   Bit definitions:

   Bit 0 is set if the PI system is on for this job.

   Bit 1 is set if the PI system is turned off until this  job  issues  a
   DEBRK.


























                                    134



   55  JBTPPN -- PROJECT PROGRAMMER NUMBER TABLE   55  JBTPPN -- PROJECT PROGRAMMER NUMBER TABLE

   Description:   Contains the project programmer number for each  logged
                  in job.  If the high segment came from disk, this table
                  contains the PPN for path pointer of the directory from
                  which the high segment came.

   Defined in:    COMMON
|  
|  Used by:       APRSER, CLOCK1, COMCON, ERRCON, FILFND, FILIO,  FILUUO,
                  IPCSER, LPTSER, NETSER, SCLINK, SCNSER, SEGCON, TAPUUO,
                  TSKSER, UUOCON

   GETTAB Table:  .GTPPN (2)

                +-------------------------------------------------------+
   Job      0   |                                                       |
   Number       |-------------------------------------------------------|
            1   | Project-programmer number                             |
                |-------------------------------------------------------|
            2   | Project-programmer number                             |
                |-------------------------------------------------------|
            3   | Project-programmer number                             |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
            n   | Project-programmer number                             |
   High         |-------------------------------------------------------|
   Segment n+1  | 0 or path pointer                                     |
                |-------------------------------------------------------|
           n+2  | 0 or path pointer                                     |
                |-------------------------------------------------------|
                                     .    .    .





















                                    135



   56  JBTPRV -- JOB PRIVILEGE BITS   56  JBTPRV -- JOB PRIVILEGE BITS

   Description:   Tells privileges allowed each job.  One entry for  each
                  job  number,  indexed  by  job number.  Bits are set by
                  LOGIN from ACCT.SYS File as modified  by  customer  for
                  his particular installation.

   Defined in:    COMMON.  Bits defined in S.UNV.

   Used by:       CLOCK1, COMCON, COMMOD, CPNSER, FILFND, IPCSER,  RTTRP,
                  UUOCON

   GETTAB Table:  .GTPRV (6)

   Each entry in JBTPRV is formatted as follows:

   |--------------------------------------------------------------------|
   |IPC|DPR|MET|POK|CCC| HPQ |NSPL|ENQ|  |RTT|LOCK|TRPS|SPYA|SPYM|      |
   |--------------------------------------------------------------------|
     0  1-2  3   4   5  6---9  10  11  12  13  14   15   16   17  18--35

   ____      ______    _______   Bits      Symbol    Meaning

   0         JP.IPC    Job allowed to use IPCF privileged functions.
   1-2       JP.DPR    Highest disk priority allowed to the job.
   3         JP.MET    Job allowed to use METER UUO.
   4         JP.POK    Job allowed to use POKE UUO.
   5         JP.CCC    Job allowed to change CPU specifications.
   6-9       PVHPQ     Largest HPQ run queue for this job.
   10        PVNSPL    Job allowed to unspool devices.
   11        JP.ENQ    Job allowed to use ENQ/DEQ.
   12        JP.ADM    Job has system administrator privileges and may
                       create user accounts with REACT.
   13        PVRTT     Job allowed to use RTTRP UUO.
   14        PVLOCK    Job allowed to use LOCK UUO.
   15        PVTRPS    Job allowed to use TRPSET UUO.
   16        PVSPYA    Job allowed to spy at all of core using SPY/PEEK
                       UUOs.
   17        PVSPYM    Job allowed to spy at monitor using SPY/PEEK UUOs.
   18-35               Reserved for customer-defined privileges.














                                    136



   57  JBTRQT -- JOB RUN-QUEUE TIME TABLE   57  JBTRQT -- JOB RUN-QUEUE TIME TABLE

   Description:   One entry per job number.   Contains  a  count  of  the
                  number of ticks a job was in PQ1 or PQ2.

   Defined in:    COMMON

   Used by:       CLOCK1, SCHED1, UUOCON

   GETTAB Table:  .GTTRQ (53)

                +-------------------------------------------------------+
   Job     0    | "Want to run" time                                    |
   Number       |-------------------------------------------------------|
           1    | "Want to run" time                                    |
                |-------------------------------------------------------|
           2    | "Want to run" time                                    |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    | "Want to run" time                                    |
                +-------------------------------------------------------+

   Notes:

   JBTRQT is assembled only if FTRSP is non-zero,  and  is  also  updated
   only if the monitor is patched at location RQTPAT to enable it.



























                                    137



   58  JBTRSP -- RESPONSE TIME TABLE   58  JBTRSP -- RESPONSE TIME TABLE

   Description:   This table contains one entry per job number, including
                  the null job.  The null job entry is not referenced.

   Defined in:    COMMON.  Bits are defined in S.UNV.

   Used by:       CLOCK1, UUOCON

   GETTAB Table:  .GTRSP (50)

                +-------------------------------------------------------+
   Job     0    | C | O | I | R | X |          Time job started waiting |
   Number       |-------------------------------------------------------|
           1    | C | O | I | R | X |          Time job started waiting |
                |-------------------------------------------------------|
           2    | C | O | I | R | X |          Time job started waiting |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
           n    | C | O | I | R | X |          Time job started waiting |
                +-------------------------------------------------------+

   ___       ____      ___________   Bit       Name      Description

   0         JR.RCR    Recorded first CPU use.
   1         JR.ROR    Recorded TTY output UUO.
   2         JR.RIR    Recorded TTY input UUO.
   3         JR.RRR    Recorded CPU quantum exceeded requeue.
   4         JR.RXR    Recorded first of above 3 responses.

   The bits are set to 1 when the type of response is recorded; set to  0
   when user types in.

   Notes:

        1.  The entries in the right half of this table are  the  uptimes
            at  which  the  user  began  to wait for system response.  If
            zero, the user is not waiting.  Entries are made in the table
            when  the  user's  job comes out of TTY Input Wait or types a
            command that runs a program.  The entries  are  used  by  the
            scheduler   to  calculate  entries  in  each  CPU's  response
            subtable.

        2.  JBTRSP is assembled only if FTRSP is non-zero.









                                    138



   59  JBTRTD -- REAL TIME DEVICES   59  JBTRTD -- REAL TIME DEVICES

   Description:   Contains real time status bits in  the  left  half  for
                  HPQs  and  hibernate-wake.   The  right half contains a
                  count of the real time devices owned by the job.

   Defined in:    COMMON

   Used by:       CLOCK1, IPCSER, PTYSER, RTTRP, SCMUUO, SCNSER,  SYSINI,
                  UUOCON

   GETTAB Table:  .GTRTD (37)

                +-------------------------------------------------------+
   Job     0    | Status bits              | Count                      |
   Number       |-------------------------------------------------------|
           1    | Status bits              | Count                      |
                |-------------------------------------------------------|
           2    | Status bits              | Count                      |
                |-------------------------------------------------------|
                                     .     .     .
                |-------------------------------------------------------|
           n    | Status bits              | Count                      |
                +-------------------------------------------------------+


   ___       ______    _______   Bit       Symbol    Meaning

   0         MONHBR    Only an exec process can wake job.
   1         IPCACE    IPCF event enable.
   2-5       HPQSPT    Console command setting of HPQ for job.
   6-9       HPQPNT    Current HPQ position of job.
   10        WAKEB     Wake bit, set if wake job by HIBER.
   11        IOACE     I/O activity enable.
   12        PTYWUE    PTY activity enable.
   13        TTIALE    TTY activity enable, line mode.
   14        TTIACE    TTY activity enable, character mode.
   15-17     HIBPRT    Hibernate protection code for job.
   27-35               Count of number of realtime devices owned by job.















                                    139



   60  JBTSCD -- SUBQUEUE (CLASS) TABLE   60  JBTSCD -- SUBQUEUE (CLASS) TABLE

   Description:   Contains each job's class type, indexed by job  number;
                  one entry for each job.

   Defined in:    COMMON

   Used by:       CLOCK1, SCHED1, UUOCON

   GETTAB Table:  .GTJTC (120)

                +-------------------------------------------------------+
   Job     0    | X |           | Class number | JS.TYP                 |
   Number       |-------------------------------------------------------|
           1    | X |           | Class number | JS.TYP                 |
                |-------------------------------------------------------|
           2    | X |           | Class number | JS.TYP                 |
                |-------------------------------------------------------|
                                    .    .    .                   
                |-------------------------------------------------------|
           n    | X |           | Class number | JS.TYP                 |
                +-------------------------------------------------------+

   ____      ______    ___________   Bits      Symbol    Description

   0         JS.PQ2    Job is in PQ2.
   13-17     JS.CLS    Job's scheduler class.
             JBYCLS
   27-35     JS.TYP    Job's scheduler type.

























                                    140



   61  JBTSFD -- SUB-FILE DIRECTORY TABLE   61  JBTSFD -- SUB-FILE DIRECTORY TABLE

   Description:   One  entry  per  job  holding  search  list   and   SFD
                  information.

   Defined in:    COMMOD

   Used by:       COMMON, FILFND, FILUUO

                +-------------------------------------------------------+
   Job     0    | LIB: PPB addr     | X | S | NMB addr          | U | S |
   Number       |-------------------------------------------------------|
           1    | LIB: PPB addr     | X | S | NMB addr          | U | S |
                |-------------------------------------------------------|
           2    | LIB: PPB addr     | X | S | NMB addr          | U | S |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
           n    | LIB: PPB addr     | X | S | NMB addr          | U | S |
                +-------------------------------------------------------+


   ____      _____     _______   Bits      Label     Meaning

   0-15                Address of library PPN PPB.
   16        JBPXSY    Search NEW before SYS.
   17        JBPSYS    Search SYS after DSK.
   18-33               High-order 16 bits of address of default SFD NMB
                       or 0.  The NMB must be on a four-word boundary;
                       therefore, bits 34-35 of the address must be zero.
   34        JBPUFB    Bits 18-33 point to a PPB.
   35        JBPSCN    Scanning is on.






















                                    141



   62  JBTSGN -- SEGMENT TABLE   62  JBTSGN -- SEGMENT TABLE

   Description:   Tells which high segment, if any, each job is using, or
                  which  job  that  high  segment  was  last  or is being
                  swapped in for.  One entry  for  each  segment  number.
                  Indexed by job number or segment number, JBTSGN is also
|                 referenced by the symbol JBTSWI.
|  
|  Defined in:    COMMON, bits defined in S
|  
|  Used by:       APRSER, CLOCK1, COMCON, CORE1, CPNSER, CTXSER,  ERRCON,
                  IPCSER, LOKCON, METCON, SCHED1, SEGCON, UUOCON, VMSER

   GETTAB Table:  .GTSGN (14)

|               +-------------------------------------------------------+
|  Job      0   |SP|SH|RE|ME|CO|LO|NC|SW|NO|UW|GT|SH|  0   | High seg # |
|  Number       |-------------------------------------------------------|
|           1   |SP|SH|RE|ME|CO|LO|NC|SW|NO|UW|GT|SH|  0   | High seg # |
|               |-------------------------------------------------------|
|           2   |SP|SH|RE|ME|CO|LO|NC|SW|NO|UW|GT|SH|  0   | High seg # |
|               |-------------------------------------------------------|
|           3   |SP|SH|RE|ME|CO|LO|NC|SW|NO|UW|GT|SH|  0   | High seg # |
|               |-------------------------------------------------------|
|                                     .    .    .
|               |-------------------------------------------------------|
|           n   |SP|SH|RE|ME|CO|LO|NC|SW|NO|UW|GT|SH|  0   | High seg # |
|  High         |-------------------------------------------------------|
|  Segment n+1  | 0                        | Low Segment                |
|               |-------------------------------------------------------|
|          n+2  | 0                        | Low Segment                |
|               |-------------------------------------------------------|
|                                     .    .    .
|  
|  
   The bit definitions that may be set for low segment entries are listed
   below.

   ____      ______    ___________   Bits      Symbol    Description

   0         SPYSEG    If set, high segment is physical core (see SPY
                       UUO).
   1         SHRSEG    High segment is sharable.  The SHRSEG bit is also
                       kept in the JBTSTS entry for that high segment.
|  2         REDOMP    The high segment part of this job's map must be
|                      redone.
   3         MEDDLE    User has meddled with sharable program.
   4         CORCNT    High segment's in-core count has been incremented.
   5         LOKSEG    The high segment this job is sharing is locked in
                       core.
   6         NCSH      High segment is not cached.



                                    142



|  7         SWCUP     Segment won't count up.
|  8         NOCSH     High segment is not cached because it is
|                      writeable.
|  9         UWPOFF    User mode write protect is off.
   10        GTSSEG    High segment was obtained with a GETSEG UUO.
|  11        SHRCNT    Share count is up for this segment.
   13-17               Zero, so can read "@JBTSGN" to compare right half.
   18-35               If SPYSEG is set, bits 18-35 contain the highest
                       physical address the user may SPY into (the high
                       segment number associated with this job).  If no
                       high segment, zero.

   For high segment entries, the left half is 0 and  bits  18-35  contain
   the low segment for which the high segment was/is being swapped in.

|  These bits apply to  .HBSGN  in  a  high  segment  data  block,  where
|  JBTSGN(J)  is  a list header.  The left half of JBTSGN(J) contains the
|  following bits, and the address of the first high  segment  block  for
|  that job in the right half:
|  
   ____      ______    ________|  Bits      Symbol    Contents
|  
|  2         REDOMP    The high segment part of this job's map must be
|                      redone.
|  5         LOKSEG    The high segment this job is sharing is locked in
|                      core.
|  7         CONSEG    This job has a concealed high segment.
|  8-17      SCHKM     Segment wait count.  This is a count of segments
|                      in transition for this job.  The job is not
|                      runnable while this field is non-zero.
|  
                       ______  ______  ________|                      Offset  Symbol  Contents
|  
|                      0       .HBLMK  Forward list pointer.
|                      1       .HBSGN  High segment data block.
|                      2       .HBSPO  Spy (paged) origin, bits 18-26.
|                              .HBSG2  Section number offset, bits 13-17.
|                              .HBHSZ  Size in pages, bits 0-8.
|                      3       .HBHNM  High segment name.
|                      4       .HBLEN  Size of block.














                                    143



   63  JBTSHR -- HIGH SEGMENT SHARER COUNT   63  JBTSHR -- HIGH SEGMENT SHARER COUNT

   Description:   Contains one word for each high  segment.   Indexed  by
                  high  segment  number, JBTSHR contains the total number
                  of jobs (sharers) using the high segment.

   Defined in:    COMMON
|  
|  Used by:       APRSER, SEGCON, VMSER

   High
   Segment
   Number
                +-------------------------------------------------------+
       JOBMAX   | Total Sharer Count                                    |
                |-------------------------------------------------------|
       JOBMAX+1 | Total Sharer Count                                    |
                |-------------------------------------------------------|
       JOBMAX+2 | Total Sharer Count                                    |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
       JOBMAX+n | Total Sharer Count                                    |
                +-------------------------------------------------------+






























                                    144



   64  JBTSPL -- SPOOL CONTROL TABLE   64  JBTSPL -- SPOOL CONTROL TABLE

   Description:   Contains  input  file  name  counter,   devices   being
                  spooled, and disk priority for the job.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, COMMOD, FILUUO, IPCSER, UUOCON

   GETTAB Table:  .GTSPL (36)

                +-------------------------------------------------------+
   Job     1    | Input filename counter | DSK priority | Spool devices |
   Number       |-------------------------------------------------------|
           2    | Input filename counter | DSK priority | Spool devices |
                |-------------------------------------------------------|
           3    | Input filename counter | DSK priority | Spool devices |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    | Input filename counter | DSK priority | Spool devices |
                +-------------------------------------------------------+


   ____      ______    _______   Bits      Symbol    Meaning

   0-17      JB.SIN    Spooled input name counter.
   24-26     JS.DPR    Current disk priority.
             JBYPRI
   27-35     JB.SPL    Spooling bits:
   27        JB.DFR    Deferred spooling.
   31        JB.CDR    Card reader spooling.
   32        JB.CDP    Card punch spooling.
   33        JB.PTP    Papertape punch spooling.
   34        JB.PLT    Plotter spooling.
   35        JB.LPT    Line printer spooling.


















                                    145



   65  JBTSPS -- SECOND PROCESSOR STATUS   65  JBTSPS -- SECOND PROCESSOR STATUS

   Description:   Assembled in multiprocessor systems to indicate  second
                  processor status.  One entry for each job number.

   Defined in:    COMMON

   Used by:       COMDEV, CPNSER, UUOCON

   GETTAB Table:  .GTSPS (54)

                +-------------------------------------------------------+
   Job     0    | Bits set by monitor      | GETTAB bits for 6 CPUs     |
   Number       |-------------------------------------------------------|
           1    | Bits set by monitor      | GETTAB bits for 6 CPUs     |
                |-------------------------------------------------------|
           2    | Bits set by monitor      | GETTAB bits for 6 CPUs     |
                |-------------------------------------------------------|
                                       .   .   .
                |-------------------------------------------------------|
           n    | Bits set by monitor      | GETTAB bits for 6 CPUs     |
                +-------------------------------------------------------+

   ___       _____     _______   Bit       Label     Meaning

                       Not runnable on:
   0                   CPU5
   1                   CPU4
   2                   CPU3
   3                   CPU2
   4         SP.NR1    CPU1
   5         SP.NR0    CPU0

                       Current Job on:
   6                   CPU5
   7                   CPU4
   8                   CPU3
   9                   CPU2
   10                  CPU1
   11                  CPU0

   12        SP.ROP    Job forced to policy CPU when policy CPU dies
   14        SP.CC1    Set if <CTRL/C> was typed or if <CTRL/D>
                       breakpoints are enabled, and job is running on
                       another CPU to force context switch to policy CPU.









                                    146



                       SET CPU command bit for:
   24                  CPU5
   25                  CPU4
   26                  CPU3
   27                  CPU2
   28        SP.SC1    CPU1 (OK as far as user is concerned to run on
                       this CPU, even if stopped or not scheduling.)
   29        SP.SC0    CPU0

                       Can run on:
   30                  CPU5
   31                  CPU4
   32                  CPU3
   33                  CPU2
   34        SP.CR1    CPU1
   35        SP.CR0    CPU0






































                                    147



   66  JBTSTS -- STATUS TABLE   66  JBTSTS -- STATUS TABLE

   Description:   Contains status information about  each  job  and  high
                  segment.   One  entry for each job number and each high
                  segment number.  Indexed by job number or high  segment
                  number.

                  See also:  AVALTB, JBTST2, JBTST3, QBITS

   Defined in:    COMMON.  Bits defined in S.UNV.
|  
|  Used by:       APRSER, CLOCK1, COMCOM, CORE1, CP1SER, DISSER,  ERRCON,
|                 FILFND,  FILIO, FILUUO, IPCSER, KILOCK, METCON, MTXSER,
|                 NULSEG, PSISER, PTYSER, REMDSX, RTTRP, SCHED1,  SCNSER,
|                 SEGCON, SYSINI, UUOCON, VBCSER, VMSER

   GETTAB Table:  .GTSTS (0)

                +-------------------------------------------------------+
   Job      0   | Job status bits                                       |
                |-------------------------------------------------------|
            1   | Job status bits                                       |
                |-------------------------------------------------------|
            2   | Job status bits                                       |
                |-------------------------------------------------------|
                                     .    .    . 
                |-------------------------------------------------------|
   Job      n   | Job status bits                                       |
                |-------------------------------------------------------|
   High    n+1  | High segment status bits                              |
   Segment      |-------------------------------------------------------|
           n+2  | High segment status bits                              |
                |-------------------------------------------------------|
                                      .    .    .
   Notes:

   Left Half of Job Number Entries:

   ____      _____     _______   Bits      Label     Meaning

   0         RUN       Set if user wants job to run.
   1         CMWB      Job in Command Wait.
   2         JXPN      Job must be swapped out because it is expanding,
                       and there is not enough room in core.
   3         JNA       This job number is assigned.
   4         JERR      Monitor detected error has occurred.
   5         NSWP      Job is not to be swapped.
   6         SHF       Monitor is waiting to shuffle or swap out job.
   7         SWP       1 if job swapped out or in transit.
   8         NSHF      Job is not to be shuffled.
   9         CNTRLC    <CTRL/C> typed while in monitor mode and not in
                       TTY input wait; delay stopping job.


                                    148



   10-14     BSTS      Specifies transfer table to requeue job for
                       current conditions.  See AVLQTB, QBITS for the
                       names of the tables.  These are system dependent
                       values as not all queues are assembled for all
                       systems.  The value here may be used to count
                       12-bit bytes into STSTBL to get the SIXBIT queue
                       name.  See below for a list of job queues and wait
                       state codes.
   15        JLOG      Job logged in.
   16        JRQ       Job has changed state and must be queued at clock
                       level before rescheduling can take place.
   17        JACCT     Privileged system CUSP which cannot be
                       interrupted.
   18        CLKR      Job has clock request in.
   19        LOK       Job is being locked in core.
   20        JDC       Job has typed "DCORE."
   21        UTRP      Trap to USER on UUO exit (reenter DDT).
   22        JDCON     Job in <CTRL/C> state waiting to continue from
                       error.
   23        JS.DEP    DAEMON error pause.
   24                  Reserved for use by DIGITAL.
   25        JS.XO     Execute-only core image.
   26        JS.RUU    RUN UUO or command in progress.
   27        JS.MPE    Memory parity error for job.
   28        JS.BPT    <CTRL/D> DDT breakpoint is enabled.
   29        JS.DPM    DAEMON problem message needed.
   30        JS.ASA    Use shadow ACs for UUO args instead of user ACs.
   31        JS.XOR    Run UUO or command in progress on execute-only
                       file.
   32        JS.RQR    Reset quantum run time.
   33        JS.SFL    Stop job if disk is full.
   34        JS.NXM    Some page in user's address space is contained in
                       non-existent memory.
   35        JS.NTO    Non-blocking terminal output.

   Left half of High Seg Entries:

   ___       ______    _______   Bit       Symbol    Meaning

   0         SNA       This high seg number assigned.
   1         SHRSEG    Sharable segment (also kept in JBTSGN).
   2         JXPN      High segment is expanding and must be swapped out.
   3         SS.SYS    Hiseg came from SYS.
   4         SERR      High segment swap read error.
   5         NSWP      This high seg is not to be swapped.
   7         SWP       1 if segment swapped out or in transit.
   8         NSHF      High segment cannot be shuffled.
   9-17                Segment access privilege bits - same as disk file.
   18        JS.SFE    Hiseg came from an EXE file.
   19-35     JBYICC    In-core count of jobs using this high segment.




                                    149



   Job Queues and Wait State Codes:

   Job queues keep track of a job's priority to run and to be in core and
   are  maintained  in  table  JBTCQ.  Wait State Codes keep track of the
   runnability of a job and are defined  in  parallel  so  that  a  queue
   number  and a wait state code that have the same meaning also have the
   same  numeric  value.   Values  differ  at  different  sites  due   to
   conditional assembly.

   The Usage key is described following the list of queues.

   ______  _____  _____  _______    _______   Symbol  Value  Usage  Feature    Meaning

   RNQ     00     N                 Ready to run.
   WSQ     01     U                 I/O wait satisfied.
   TSQ     02     U                 TTY I/O wait satisfied.
   DSQ     03     U                 Disk I/O wait satisfied.
   PSQ     04     U                 Paging I/O wait satisfied.
   AUQ     05     R                 Alter UFD wait.
   DAQ     06     R                 Disk space allocation wait.
   CBQ     07     R                 Disk core block scan wait.
   DTQ     10     R                 DECtape controller wait.
   IPQ     11     R                 IPCF interlock wait.
   CXQ     12     R                 Context save wait.
   DCQ     13     R                 DECtape/magtape control wait.
   CAQ     14     R      FTLOCK     Semi-permanent core wait (LOCK).
   MMQ     15     R      FTMP       Memory management wait.
   EVQ     16     R      FTKI|FTKL  Exec virtual memory wait.
   EQQ     17     R      FTEQDQ     Enqueue-dequeue wait.
   MCQ     20     R      FTMP       Monitor I/O disk cache wait.
   IOWQ    21     C                 I/O wait.
   TIOWQ   22     CQ                TTY I/O wait.
   DIOWQ   23     C                 Disk I/O wait.
   PIOWQ   24     C                 Paging I/O wait.
   PQIOQ   25     C                 Paging queue wait.
   SLPQ    26     CQ                Sleeping (>= 1 second).
   EWQ     27     CQ                Event wait (see JBTST2).
   NAPQ    30     C                 Napping (sleep < 1 second).
   NULQ    31     CQ                Unassigned jobs.
   JDCQ    32     CQ     FTDAEM     Job waiting for DAEMON.
   STOPQ   33     CQ                Job stopped (C state).
   CMQ     34     Q                 Command wait for swapper.
   PQ1     35     Q                 Jobs starting up or coming out of TTY
                                    I/O wait.
   PQ2     36     Q                 Non interactive jobs.
   HPQ1    37     Q      FTHPQ      High priority (realtime) jobs.
   HPQ2    40     Q      FTHPQ      Higher priority (realtime) jobs.
   HPQ3    41     Q      FTHPQ      Highest priority (realtime) jobs.

   The number of HPQs is determined in the MONGEN dialogue.




                                    150



   Key to Usage:

   N    No queue header for this WSC.  (JBTCQ+0 contains 0).  Defined  in
        QUEUES macro.

   U    Wait State Codes for jobs that have become unblocked but need  to
        be  processed  by  QREQ in SCHED1 before being considered to run.
        Defined in QUEUES macro.

   R    Wait State Codes for jobs that blocked at UUO level  requiring  a
        sharable  resource  that  was unavailable (see REQTAB).  Jobs are
        unblocked by the scheduler when the  resource  becomes  available
        (see AVALTB).  Defined in RWAITS macro.

   C    Wait State Codes for jobs that are blocked waiting for a  monitor
        event,  such  as  I/O  complete,  clock  ticks, command input, or
        DAEMON activity, before they  are  runnable.   Defined  in  CODES
        macro.

   Q    These queues in JBTCQ actually hold  jobs.   Other  symbols  have
        queue  headers  reserved  for  them, but jobs are never placed in
        them.  RNQ has no queue header at all.

   Notes:

        1.  RNQ, IOWQ,  DIOWQ,  PIOWQ,  WSQ,  TSQ,  DSQ,  and  PSQ  never
            actually  hold  jobs.   The queues are defined only to define
            the corresponding Wait State Codes.

        2.  The values of PQ1, PQ2, CMQ, and STOPQ are never used as wait
            state codes.  Jobs in any of the PQs have wait state codes of
            000.  When jobs are put into CMQ or STOPQ they  retain  their
            previous  codes,  so  that  they  can  be  returned  to their
            previous queues.




















                                    151



   67  JBTST2 -- JOB STATUS TABLE 2   67  JBTST2 -- JOB STATUS TABLE 2

   Description:   Contains status information about each job.  (Extension
                  to the JBTSTS table.) Indexed by job number.

   Defined in:    COMMON.  Bits defined in S.MAC.
|  
|  Used by:       APRSER, CLOCK1, COMCON, FILFND KASER,  SCHED1,  SEGCON,
|                 UUOCON

   GETTAB Table:  .GTST2 (117)

                +-------------------------------------------------------+
   Job     0    | Status bits      |E |M |A | Code |EW |PC |Q# |O |R |S |
   Number       |-------------------------------------------------------|
           1    | Status bits      |E |M |A | Code |EW |PC |Q# |O |R |S |
                |-------------------------------------------------------|
           2    | Status bits      |E |M |A | Code |EW |PC |Q# |O |R |S |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    | Status bits      |E |M |A | Code |EW |PC |Q# |O |R |S |
                +-------------------------------------------------------+

   ___       _____     _______   Bit       Label     Meaning

   0         JS.IPQ    On if job is in a processor queue.
   1-2       JS.DEB    Deferred echo bits.
   3         JS.SAC    Context auto-save requested by COMCON.
   4         JS.OLS    Job owns locked structure.
   5         JS.SIP    On if swapping I/O is in progress for this job.
   6         JS.FPS    On if long KA-10 floating point instructions
                       should be simulated (FORCE was JXPN to avoid
                       forgetting FORCE was cleared).
   7         JS.NNQ    On if not to assign new quantum value on swap-in.
                       Set when job GETSEGs a swapped segment.
   8         JS.BBJ    On if job is from background batch.
   9         JS.CSQ    On if job is changing subqueue due to SCHED.  UUO.
   10        JS.IGS    In GETSEG (doing a GETSEG UUO).
   11        JS.HNG    Job stayed in FORCE too long, causing temporary or
                       permanent system hang.  Cleared when swapped in or
                       out.
   12        JS.BPR    Bypass program to run checking if set.  The
                       current RUN command is allowed despite .PDPGM
                       (used for KJOB).
   13        JS.FXO    File daemon made this core image execute-only.
   14        JS.CFX    Call file daemon on program exit.
   15        JS.HIB    This job is hibernating
   16        JS.NCS    On if the cache bits are not to be turned on in
                       this job's map.




                                    152



   17        JS.EXE    A new save (EXE file) is underway, or on a GET,
                       the LOOKUP on the EXE file failed.  (Prevents EXE
                       file from being read in again for the low
                       segment.)
   18        JS.MIG    Job has migrated to another swapping unit when a
                       disk controller is being taken off-line (FTDHIA).
   19        JS.ABP    An address break page fault occurred because of a
                       reference to this user's virtual address space
                       during UUO processing.
   20-24     JBYEWT    ESLEEP reason:

                       ____  ______  ______                       Code  Symbol  Reason

                       1     EV.TKW  Tape controller.
                       2     EV.REW  Rewind.
                       3     EV.LBL  Label processing.
                       4     EV.NET  Network device.
                       5     EV.NTC  Network terminal connect.
                       6     EV.STC  Network station control.
                       7     EV.DTE  DTE I/O.
                       10    EV.KDP  KDP I/O.
                       11    EV.IPC  IPCF system process receive.
                       12    EV.FEI  Front end device input.
                       13    EV.FEO  Front end device output.
                       14    EV.D60  DN60 device.
                       15    EV.DCN  DECnet connect I/O.
                       16    EV.DMR  DMR I/O.

   25        EWAKEB    EWAKE called (wakeup waiting).
   26        JS.RPC    If = 1, run program in .PDPGM on <CTRL/C>.
   27-32     PJBST2    Queue number.  Also called PJBST1 (for indexing by
                       T1).
   33        JS.OOO    User ran out of order.  Stop when gives up last
                       resource.
   34        JS.TFO    Job forced out by timer.
   35        JS.SCN    Job was scanned to run by at least one CPU during
                       last tick.

















                                    153



   68  JBTST3 -- JOB STATUS TABLE 3   68  JBTST3 -- JOB STATUS TABLE 3

   Description:   Contains the address of the CPU Data Block for the  CPU
                  on  which  the  job  ran  last.   This table applies to
                  multi-CPU KL systems only.

   Defined in:    COMMON

                +-------------------------------------------------------+
   Job     0    |                          | CDB Address                |
   Number       |-------------------------------------------------------|
           1    |                          | CDB Address                |
                |-------------------------------------------------------|
           2    |                          | CDB Address                |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    |                          | CDB Address                |
                +-------------------------------------------------------+

   Bits 18 through 35 contain the address of the CPU Data Block  for  the
   CPU that last ran the job.
































                                    154



   69  JBTSWP -- JOB SEGMENT SWAP AREA   69  JBTSWP -- JOB SEGMENT SWAP AREA

   Description:   Contains  information  used  when  swapping   segments.
                  There is one entry for each job number and high segment
                  number.  It is  indexed  by  the  job  number  or  high
                  segment  number.   The  fragment  table  is  documented
                  separately in Section 29.

   Defined by:    COMMON
|  
|  Used by:       APRSER, COMCON, CTXSER, SCHED1, SEGCON, SWPSER, UUOCON,
|                 VMSER

   GETTAB Table:  .GTSWP (7)

   Each word in the JBTSWP table is formatted depending on the setting of
   bit  15.  If bit 15 is set, the core address is in bits 18-35.  If bit
   15 is clear, bits 15-17 contains the index to the unit number and bits
   22-35 contain the first logical K on the unit.

      
                +-------------------------------------------------------+
   Job     0    | F |          | 1 |       | Core address               |
   Number       |-------------------------------------------------------|
           1    | F |          | 1 |       | Core address               |
                |-------------------------------------------------------|
           2    | F |          | 1 |       | Core address               |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    | F |          | 1 |       | Core address               |
                |-------------------------------------------------------|
   High    n+1  | F |          | 1 |       | Core address               |
   Segment      |-------------------------------------------------------|
   Number  n+2  | F |          | 1 |       | Core address               |
                |-------------------------------------------------------|
                                      .    .    .

   ___       ____      ___________   Bit       Name      Description

   0         FRGSEG    1 if low or high segment is fragmented on the
                       swapping device.
   15-35               Disk address, if bit 0 is off.  Core address of
                       fragment table in bits 18-35 if bit 0 is set.
   15-17     JBYSUN    Index to unit number in SWPTAB.
   22-35     JBYLKN    First logical K on the unit.








                                    155



   70  JBTUPM -- UPT ADDRESS TABLE   70  JBTUPM -- UPT ADDRESS TABLE

   Description:   Contains the address for the user  page  map  page  for
                  each  job and high segment that is in core.  This table
                  is also called JBTHSA.

   Defined in:    COMMON
|  
|  Used by:       APRSER, KILOCK, SCHED1, SEGCON, SWPSER, SYSINI, UUOCON,
|                 VMSER

   GETTAB Table:  .GTUPM (100)

                +-------------------------------------------------------+
   Job       0  | HSO       | 0            | HSS        | UPT addr      |
   Number       |-------------------------------------------------------|
             1  | HSO       | 0            | HSS        | UPT addr      |
                |-------------------------------------------------------|
             2  | HSO       | 0            | HSS        | UPT addr      |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
             n  | HSO       | 0            | HSS        | UPT addr      |
                |-------------------------------------------------------|
   High     n+1 | HSO       |              |            | HSA           |
   Segment      |-------------------------------------------------------|
   Number   n+2 | HSO       |              |            | HSA           |
                |-------------------------------------------------------|
                                      .    .    .


   Description for Low Segment Entry:

   ___       _______   _______   Bit       Pointer   Meaning

   0-8       JBYHSO    Virtual page number of high segment origin.
   18-22     JBYHSS    Number of pages less one in high segment.
   23-35               Physical page number of UPT.

   Description for High Segment Entry:

   0-8       JBYHSO    Virtual page number of high-seg origin.
   23-35     JBYHSA    Physical page number of first page of high
                       segment.










                                    156



   71  JBTVIR -- VIRTUAL SIZE TABLE   71  JBTVIR -- VIRTUAL SIZE TABLE

   Description:   Virtual size of program

   Defined in:    COMMON
|  
|  Used by:       COMCON, CTXSER, UUOCON, SEGCON, VMSER

   Related Tables:  JBTIMI
|  
|  GETTAB Table:  .GTVIR (201)

                 0----5 6----------------14 15------------------------35
                +-------------------------------------------------------+
   Job     0    |      | HIVSIZ            | LOVSIZ                     |
   Number       |-------------------------------------------------------|
           1    |      | HIVSIZ            | LOVSIZ                     |
                |-------------------------------------------------------|
           2    |      | HIVSIZ            | LOVSIZ                     |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    |      | HIVSIZ            | LOVSIZ                     |
                +-------------------------------------------------------+

   ____      ______    ________   Bits      Symbol    Contents

   0-5                 Reserved.
   6-14      HIVSIZ    High segment size (non-sharable).  If this field
                       is 0, the high segment is sharable.
   15-35     LOVSIZ    Low segment size.























                                    157



   72  JBTWCH -- WATCH TABLE   72  JBTWCH -- WATCH TABLE

   Description:   This table  is  assembled  if  FTWATCH  is  assigned  a
                  non-zero  value  in  S.MAC.  It determines the specific
                  watch parameters to be displayed.  There is  one  entry
                  per  job  number  including the null job.  The null job
                  entry is not referenced.

   Defined in:    COMMON

   Used by:       COMCON, MTXSER, UUOCON

   GETTAB Table:  .GTWCH (35)

                +-------------------------------------------------------+
   Job     0    | Conditions               | Time of day                |
   Number       |-------------------------------------------------------|
           1    | Conditions               | Time of day                |
                |-------------------------------------------------------|
           2    | Conditions               | Time of day                |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
           n    | Conditions               | Time of day                |
                +-------------------------------------------------------+

   ___       ____      ___________   Bit       Name      Description

   1         JB.WDY    Watch time of day started to wait.
   2         JB.WRN    Watch runtime when return to command level.
   3         JB.WWT    Watch waiting time when return to command level.
   4         JB.WDR    Watch number of 128 word disk block read.
   5         JB.WDW    Watch number of 128 word disk blocks written.
   6         JB.WVR    Watch versions.
   7         JB.WMT    Watch number MTA performace statistics.
   8         JB.WFL    Watch file activity.
   9         JB.WLM    Long error messages.
   10        JB.WNM    Normal error messages.
   11        JB.WPM    Prefix error messages.
   13-35               Time of day (in jiffies) user started to wait.














                                    158



   73  JDA -- DEVICE ASSIGNMENT TABLE   73  JDA -- DEVICE ASSIGNMENT TABLE

   Description:   Associates a device or file with each active channel in
                  a user job, and tells which UUOs have been done on that
                  channel.

                  The JDA is part of the job's UPT.  Each JDA contains 16
                  entries  corresponding to the 16 software channels of a
                  user job.

                  Indexed by channel number.

   Defined in:    COMMON
|  
|  Used by:       COMCON, CORE1, DTASRN, FILIO, FILUUO,  MPXSER,  PTYSER,
                  SEGCON, UUOCON, VMSER

                +-------------------------------------------------------+
   Channel 0    | UUO bits *               | Device Data Block address  |
                |-------------------------------------------------------|
           1    | UUO bits *               | Device Data Block address  |
                |-------------------------------------------------------|
           2    | UUO bits *               | Device Data Block address  |
                |-------------------------------------------------------|
                                      .    .    .
                |-------------------------------------------------------|
          17    | UUO bits *               | Device Data Block address  |
                +-------------------------------------------------------+
       
   * The UUO bits are set for the following reasons:

   ___       _____     _______   Bit       Label     Meaning

   0         INITB     INIT or OPEN has been done.
   1         IBUFB     Input ring header specified (by INIT).
   2         OBUFB     Output ring header specified (by INIT).
   3         LOOKB     A LOOKUP has been done.
   4         ENTRB     An ENTER has been done.
   5         INPB      An INPUT has been done.
   6         OUTPB     An OUTPUT has been done.
   7         ICLOSB    An input CLOSE has been done.
   8         OCLOSB    An output CLOSE has been done.
   9         INBFB     An input buffer ring has been set up.
   10        OUTBFB    An output buffer ring has been set up.
   11        SYSDEV    This is the system tape device or SYSPPN on DSK.
   12        RENMB     RENAME UUO in progress.
   13        RESETB    RESET UUO in progress.
   18-35               Address of Device Data Block for I/O on this
                       software channel.





                                    159



   Notes:

        1.  If both LOOKB and ENTRB are on, the file is being accessed in
            update mode.

        2.  Extended channel information is kept in a  64-word  table  in
            funny  space  pointed  to  by the .UPCTA word in the UPT.  If
            extended channels are not in use, the  word  is  zero.   Each
            entry  in  the  table is formatted the same as entries in the
            JDA table.












































                                    160



   74  JOBDAT -- DATA AREA   74  JOBDAT -- DATA AREA

   Description:   Storage area for items of interest to both the  monitor
                  and the user.

                  There is one Job Data Area for  each  job  that  has  a
                  non-zero  core  allocation.   It occupies the first 140
                  locations of the job's core area, and  is  swapped  out
                  along with the job.

   Defined in:    COMMON

   Used by:       COMMON


   Offset  Symbol  Map
                   +----------------------------------------------------+
   0-17    .JBBAC  / User ACs during UUO                      (16 words)/
                   |----------------------------------------------------|
   20-37   .JBBAC  / Hardware ACs while job inactive          (16 words)/
                   |----------------------------------------------------|
   40      .JBUUO  | User UUO stored here                               |
                   |----------------------------------------------------|
   41      .JB41   | User UUO branch instruction                        |
                   |----------------------------------------------------|
   42      .JBERR  | Not used               | Error count for RPG       |
                   |----------------------------------------------------|
   43      .JBENB  | Not used               | User APR trap flags       |
                   |----------------------------------------------------|
   44      .JBREL  | 0                      | Length of low segment     |
                   |----------------------------------------------------|
   45      .JBPD1  / Push down list                           (21 words)/
                   |----------------------------------------------------|
   72      .JBHCU  | Highest I/O channel in use                         |
                   |----------------------------------------------------|
   73      .JBPC   | Job PC when job inactive                           |
                   |----------------------------------------------------|
   74      .JBDDT  | Not used               | Start address of DDT      |
                   |----------------------------------------------------|
   76      .JBBPT  | Address of unsolicited breakpoint entry into DDT   |
                   |----------------------------------------------------|
   114     .JBSDD  | JOBDDT here on SAVE/Protected from I/O             |
                   |----------------------------------------------------|
   115     .JBHRL  | First free loc in hiseg| Length of high segment    |
                   |----------------------------------------------------|
   116     .JBSYM  | Symbol table pointer                               |
                   |----------------------------------------------------|
   117     .JBUSY  | Undefined symbol table pointer                     |
                   |----------------------------------------------------|
   120     .JBSA   | First free loc in low  | Program start address     |
                   | segment when loaded    |                           |
                   |----------------------------------------------------|


                                    161



                   |----------------------------------------------------|
   121     .JBFF   | Current first free location in low segment         |
                   |----------------------------------------------------|
   122     .JBS41  | .JB41 here on SAVE                                 |
                   |----------------------------------------------------|
   123     .JBEXM  | Address of last D or E command                     |
                   |----------------------------------------------------|
   124     .JBREN  | Address for REENTER command                        |
                   |----------------------------------------------------|
   125     .JBAPR  | Branch loc on user enabled APR error               |
                   |----------------------------------------------------|
   126     .JBCNI  | APR conditions on APR trap                         |
                   |----------------------------------------------------|
   127     .JBTPC  | PC stored here on APR trap                         |
                   |----------------------------------------------------|
   130     .JBOPC  | Old PC stored here on START, DDT, REENTER, &       |
                   | CSTART commands                                    |
                   |----------------------------------------------------|
   131 (3) .JBCHN  | Used for FORTRAN job chaining (root link)          |
                   |----------------------------------------------------|
   132     .JBFDV  | DDB addr for FINISH command                        |
                   |----------------------------------------------------|
   133     .JBCOR  | Highest loc in low     | Low seg core assignment   |
                   | seg actually loaded    |                           |
                   |----------------------------------------------------|
   134     .JBINT  |                        | Data block address for    |
                   |                        | error intercept           |
                   |----------------------------------------------------|
   135     .JBOPS  | Reserved for runtime operating system              |
                   |----------------------------------------------------|
   136     .JBCST  | Reserved for customer                              |
                   |----------------------------------------------------|
   137     .JBVER  | Job version number                                 |
                   |----------------------------------------------------|
   140             | First location in user's program area              |
                   +----------------------------------------------------+
   Notes:

        1.  The actual tables are  included  at  the  beginning  of  each
            user's area.

        2.  Many of these words contain different values while a SAVE  or
            GET  is  in  progress,  and  therefore have several different
            labels.

        3.  .JBCHN is also symbolized by .JBOVL.

        4.  System-sensitive locations for all machines are stored in the
            UPT instead of the user's core image.  If .JBxxx is stored in
            location yyy, VJBDAT defines  the  value  of  the  symbol  as
            -1000+yyy (octal).



                                    162



   75  KDB -- KONTROLLER DATA BLOCK|  75  KDB -- KONTROLLER DATA BLOCK
|  
|  Description:    The KDB  is  a  prototype  data  block  that  contains
|                 information  used  by AUTCON to configure disk and tape
|                 drives at system startup and  when  they  come  online.
|                 KDBs  are  generated  dynamically  by  AUTCON  when the
|                 system is started.
|  
|  Defined in:    DEVPRM
|  
|  Used by:       FILIO, ONCMOD, RPXKON, RNXKON, SYSINI, VMSER
|  
|               +-------------------------------------------------------+
|  KDBNAM       | SIXBIT name of controller                             |
|               |-------------------------------------------------------|
|  KDBNXT       | Link to next controller in system                     |
|               |-------------------------------------------------------|
|  KDBCAM       | CPU accesibility mask                                 |
|               |-------------------------------------------------------|
|  KDBCHN       | Channel Data Block address                            |
|               |-------------------------------------------------------|
|  KDBIUN       | Initial pointer to units                              |
|               |-------------------------------------------------------|
|  KDBFUN       | Final pointer to units                                |
|               |-------------------------------------------------------|
|  KDBCUN       | Current pointer to units                              |
|               |-------------------------------------------------------|
|  KDBIUM       | Offset to ignore mask                                 |
|               |-------------------------------------------------------|
|  KDBNUM       | Offset to new unit mask                               |
|               |-------------------------------------------------------|
|  KDBICP       | Address of initial channel program                    |
|               |-------------------------------------------------------|
|  KDBDSP       | Address of controller dispatch table                  |
|               |-------------------------------------------------------|
|  KDBSER       / Kontroller serial number                     (2 words)/
|               |-------------------------------------------------------|
|  KDBSTS *     | Status word                                           |
|               |-------------------------------------------------------|
|  KDBPCC       | Number-of-words,,starting-offset indicating physically|
|               | contiguous core requirements                          |
|               |-------------------------------------------------------|
|  KDBCSO       | KL10 only, CONSO skip chain pointer                   |
|               |-------------------------------------------------------|
|  KDBVIN       | Vector interrupt pointer                              |
|               |-------------------------------------------------------|
|  KDBDVC       | Device code or UNIBUS base address                    |
|               |-------------------------------------------------------|
|  KDBIOB       | Start of words containing I/O instructions            |
|               |-------------------------------------------------------|




                                    163



|               |-------------------------------------------------------|
|  KDBCNI       | CONI DEV,T1                                           |
|               |-------------------------------------------------------|
|  KDBCNO       | CONO DEV,(T1)                                         |
|               |-------------------------------------------------------|
|  KDBDTI       | DATAI DEV,T2                                          |
|               |-------------------------------------------------------|
|  KDBDTO       | DATAO DEV,T2                                          |
|               |-------------------------------------------------------|
|  KDBBKI       | BLKI DEV,T2                                           |
|               |-------------------------------------------------------|
|  KDBBKO       | BLKO DEV,T2                                           |
|               |-------------------------------------------------------|
|  KDBIOE       | End of words containing I/O instructions              |
|               |-------------------------------------------------------|
|  KDBIVI       | DATAO contents to set up interrupt vector             |
|               |-------------------------------------------------------|
|  KDBUNI       | MASSBUS-unit-number,,attention-bit.  Unit = -1 on     |
|               | non-multi unit Kontrollers                            |
|               |-------------------------------------------------------|
|  KDBSIZ       | Length of common KDB                                  |
|               +-------------------------------------------------------+
|  
|  * The KDBSTS bits are listed below.
|  
   ___       ______    _______|  Bit       Symbol    Meaning
|  
|  0         KD.MPD    Multi-ported device.
|  1         KD.APC    All ports configured.
|  6         KD.BMX    Block multiplex device.
|  7         KD.MXD    Multiple transfer device.
|  8         KD.PWT    Position while transfer in progress is allowed.
   17-35     KD.MPT    Maximum number of ports.



   75.1  Magtape Definitions (TKB)   75.1  Magtape Definitions (TKB)

|  Description:   TKBs  are  the   magtape   specific   definitions   for
|                 controllers.   Each  TKB  is  prefixed by a generic KDB
|                 block   and   is   suffixed   by   controller-dependent
|                 information.  The magtape KDB is a prototype data block
                  used by AUTCON to configure  the  tape  controllers  at
                  system  startup  and  when  they come online.  Tags for
                  magtape KDBs are MTxKDB,  where  x  is  the  controller
                  number (A, B, C, and so on).
|  
|  Defined in:    DEVPRM
|  
|  Used by:       AUTCON, TAPSER, TAPUUO, T??KON




                                    164



                +-------------------------------------------------------+
   TKBCNT       | Number of records done on this operation              |
                |-------------------------------------------------------|
   TKBSTS (1)   | Controller status bits   | Consecutive ops remaining  |
                |-------------------------------------------------------|
   TKBJOB       | Job number of maintenance mode owner                  |
                |-------------------------------------------------------|
   TKBCCL       / Channel command list                         (5 words)/
                |-------------------------------------------------------|
   TKBERB       / IORB for error recovery                      (4 words)/
                |-------------------------------------------------------|
   TKBFCT       | Fairness count for queued I/O                         |
                |-------------------------------------------------------|
   TKBCRD       | Number of characters read                             |
                |-------------------------------------------------------|
   TKBCWR       | Number of characters written                          |
                |-------------------------------------------------------|
   TKBUDB       | Table of UDB addresses                                |
                +-------------------------------------------------------+

   Notes:

        1.  The TKBSTS bits  are  listed  below.   These  bits  are  also
            defined for TUBSTS in the UDB.

            ___    ______  _______            Bit    Symbol  Meaning

            10    TKSCHX  Not yet swept for CPU0.
            11    TKSCHE  Job has swept cache for queued requests.
            12    TKSMNT  Controller is in maintenance mode.
            13    TKSSIL  Request silence about offline condition.
            14    TKSSCH  Requested scheduled interrupt.
            15    TKSSTD  Started.
            16    TKSSEL  Selected.
            17    TKSOFL  Offline.

|  
|  
|  
   75.2  Disk Definitions (KON)|  75.2  Disk Definitions (KON)
|  
|  Description:   KONs are the disk specific definitions for controllers.
|                 Each  KON  is  prefixed  by  a generic KDB block and is
|                 suffixed by controller-dependent information.  There is
                  one  KON  per disk controller.  It contains information
                  specific  to  that  controller,   such   as,   dispatch
                  addresses   into  the  controller  dependent  routines.
                  Kontroller Data Blocks  are  generated  dynamically  by
                  AUTCON when the system is started.





                                    165



|  Defined in:    DEVPRM
|  
|  Used by:       FILIO, ONCMOD, RPXKON, RNXKON, SYSINI, VMSER
|  
|               +-------------------------------------------------------+
|  KONBSY,,     | K | Reserved |      | B |    Reserved                 |
|               |-------------------------------------------------------|
|  KONCNT       | Number of words in transfer format                    |
|               |-------------------------------------------------------|
   KONRED (3)   | Table of controller-dependent dispatch instructions   |
                |-------------------------------------------------------|
|  KONCUA       | UDB address of unit doing transfer (or last one)      |
|               |-------------------------------------------------------|
|  KONPTR       | Indirect pointer to index KONTAB (P3)                 |
                |-------------------------------------------------------|
   KONDMP       | Holds DEVDMP during dump-mode I/O                     |
                |-------------------------------------------------------|
   KONERR       | Dispatch to controller-dependent error-recovery prog. |
                |-------------------------------------------------------|
   KONECC       | Used for ECC mask and position                        |
                |-------------------------------------------------------|
   KONRRG       | Used to hold drive registers                          |
|               |-------------------------------------------------------|
|  KONCCM       | Compute distance from cylinder                        |
|               |-------------------------------------------------------|
|  KONALV       | Ensure controller has PIA                             |
|               |-------------------------------------------------------|
|  KONRLD       | Reload disk controller                                |
|               |-------------------------------------------------------|
|  KONEDL       | Enable/disable microcode loading                      |
|               |-------------------------------------------------------|
|  KONSEC       | Once-per-second call                                  |
|               |-------------------------------------------------------|
   KONECR       | Control register on error                             |
                |-------------------------------------------------------|
   KONEDB       | Data buffer register on error                         |
                |-------------------------------------------------------|
   KONREG       | Length of KONEBK                                      |
|               |-------------------------------------------------------|
|  KONEBK       | Address of drive register storage                     |
|               |-------------------------------------------------------|
|  KONUDB       | Table of UDB addresses                                |
|               +-------------------------------------------------------+
|  










                                    166



   Notes:

        1.  The CONSO skip chain entry  for  the  controller  immediately
            precedes the Kontroller Data Block for the controller.  These
            skip chain entries differ for each type of controller.

        2.  KONBSY contains the following bits:

            ___       ______    _______            Bit       Symbol    Meaning

            0         KOPBSY    Set if the controller is busy.
            1-6                 Reserved.
            17        KOPBND    Set for CI disk controllers when disk
            units
                                on the controller are bound.
|           18-35               Reserved.

        3.  KONCAM contains a bit mask that tells which CPU(s) can access
            the  controller.   Bit  35 is set for CPU0, bit 34 is set for
            CPU1, bit 33 for CPU2, and so forth.

        4.  KONRED, the table of controller-dependant dispatch addresses,
            is described below.

   KONRED (Controller-Dependent Dispatch Addresses)

                +-------------------------------------------------------+
   KONRED (1)   | PI | Address of read program                          |
                |-------------------------------------------------------|
   KONRDS       | Address of read, stop-on-error program                |
                |-------------------------------------------------------|
   KONRDF       | Read header and data                                  |
                |-------------------------------------------------------|
   KONRDC       | Read in 10/11 compatibility mode                      |
                |-------------------------------------------------------|
   KONWRT       | Entry point to write program                          |
                |-------------------------------------------------------|
   KONWTS (2)   | Entry point to write, stop on error                   |
                |-------------------------------------------------------|
   KONWTF       | Write format                                          |
                |-------------------------------------------------------|
   KONWTC       | Write in 10/11 compatibility mode                     |
                |-------------------------------------------------------|











                                    167



                |-------------------------------------------------------|
   KONUNL       | Unload drive                                          |
                |-------------------------------------------------------|
   KONPOS (3)   | F | Position heads-entry zero for fixed-head disk     |
                |-------------------------------------------------------|
   KONLTM (4)   | Compute rotational latency time                       |
                |-------------------------------------------------------|
   KONUPA (5)   | U | S | Test if controller is on-line                 |
                |-------------------------------------------------------|
   KONCPY       | Determine type and capacity of unit                   |
                |-------------------------------------------------------|
   KONRCL       | Recalibrate                                           |
                |-------------------------------------------------------|
   KONSTP       | Stop on hung unit                                     |
|               |-------------------------------------------------------|
|  KONHWP       | Check hardware write protect                          |
|               +-------------------------------------------------------+
   Notes:

        1.  Bits 0-2 (KOBPI) of KONRED  contain  the  PI  level  for  the
            controller.

        2.  For CI disks, KONWTS is equivalent to  KONCNA,  where  bit  0
            (KOPCNA), if set, indicates credits are not available.

        3.  Bit 0  (KOPPWX)  of  KONPOS,  if  set,  indicates  fixed-head
            devices.

        4.  For CI disks, KONLTM is equivalent  to  KONMX,  where  bit  0
            (KOPMX)  indicates  the disk can do multiple transfers at one
            time.

        5.  KONUPA contains two flags.  Bit 0 (KONDWN) is  set  when  the
            controller   is  down.   Bit  1  (KONMPS)  is  set  when  the
            controller can seek while doing a transfer.



















                                    168



   76  LDB -- LINE DATA BLOCK   76  LDB -- LINE DATA BLOCK

   Description:   Contains data pertaining to one terminal line.  One LDB
                  per  line  including  scanner  lines,  PTYs,  and  CTY.
                  LINTAB serves as directory.

   Defined in:    SCNSER
|  
|  Used by:       CCIINT, CLOCK1, COMCON, COMMON, CPNSER, CTXSER, D76INT,
|                 D78INT,  DLSINT, DZINT, LATSER, MPXSER, NETDEV, NETSER,
|                 NRTSER, PSISER, PTYSER, SCMUUO, TTDINT, UUOCON, XTCSER

                +-------------------------------------------------------+
   LDBDDB       | Address of line's attached DDB                        |
                |-------------------------------------------------------|
   LDBCOM *     | Forced command bits                     (Section 76.1)|
|               |-------------------------------------------------------|
|  LDBATR *     | Terminal attribute bits                 (Section 76.2)|
|               |-------------------------------------------------------|
   LDBOST *     | Terminal output bits                    (Section 76.3)|
                |-------------------------------------------------------|
   LDBIST *     | Input state word                        (Section 76.4)|
                |-------------------------------------------------------|
   LDBBKU       | Copy of LDBTIP at last break XMTECH                   |
                |-------------------------------------------------------|
   LDBBKI       | Copy of LDBTIP at last break RECINT                   |
|               |-------------------------------------------------------|
|  LDBTIP       | Byte pointer to put characters in input buffer        |
|               |-------------------------------------------------------|
|  LDBTIT       | Byte pointer to take characters from input buffer     |
|               |-------------------------------------------------------|
   LDBTIC       | Count of echoed characters in input buffer            |
                |-------------------------------------------------------|
   LDBBKC       | Count of break characters in input buffer             |
|               |-------------------------------------------------------|
|  LDBTOP       | Byte pointer to put characters in output buffer       |
|               |-------------------------------------------------------|
|  LDBTOT       | Byte pointer to take characters from output buffer    |
|               |-------------------------------------------------------|
   LDBTOC       | Count of characters from output buffer                |
|               |-------------------------------------------------------|
|  LDBECT       | Byte pointer to take characters from input for echoing|
|               |-------------------------------------------------------|
   LDBECC       | Count of characters to echo                           |
                |-------------------------------------------------------|
   LDBIEC       | Count of invisible characters in echo stream          |
                |-------------------------------------------------------|
   LDBIIC       | Count of invisible characters in input stream         |
|               |-------------------------------------------------------|
|  LDBEOP       | Byte pointer to put characters in echo buffer         |
|               |-------------------------------------------------------|



                                    169



|               |-------------------------------------------------------|
|  LDBEOT       | Byte pointer to take characters from echo buffer      |
|               |-------------------------------------------------------|
|  LDBEOC       | Count of characters in echo buffer                    |
|               |-------------------------------------------------------|
|  LDBOOP       | Byte pointer to enqueue out-of-band characters        |
|               |-------------------------------------------------------|
|  LDBOOT       | Byte pointer to dequeue out-of-band characters        |
|               |-------------------------------------------------------|
|  LDBOOC       | Count of enqueued out-of-band characters              |
|               |-------------------------------------------------------|
   LDBCLP       | Command line pointer (for COMCON)                     |
                |-------------------------------------------------------|
   LDBXNP       | XON class character pointer for output                |
                |-------------------------------------------------------|
   LDBFLP       | Filler character pointer for output                   |
                |-------------------------------------------------------|
   LDBNNP       | "Not now" character pointer for output                |
                |-------------------------------------------------------|
   LDBPBK       | Up to 4 break characters for Packed Image Mode (PIM)  |
                |-------------------------------------------------------|
   LDBHPS       | Horizontal Position Counter                           |
                |-------------------------------------------------------|
   LDBBCT       | Total command line count  | Total break characters    |
                | for this line             | for this line             |
                |-------------------------------------------------------|
   LDBICT       | Total input character count                           |
|               |-------------------------------------------------------|
|  LDBOCT       | Total output character count                          |
|               |-------------------------------------------------------|
   LDBDCH *     | Hardware status bits                    (Section 76.5)|
                |-------------------------------------------------------|
   LDBBYT *     | First word of software status bits      (Section 76.6)|
                |-------------------------------------------------------|
   LDBBY2 *     | Second word of software status bits     (Section 76.7)|
                |-------------------------------------------------------|
   LDBBY3 *     | Third word of software status bits      (Section 76.8)|
                |-------------------------------------------------------|
   LDBLSW *     | Page length bits                        (Section 76.9)|
                |-------------------------------------------------------|
   LDBPAG *     | Terminal page bits                     (Section 76.10)|
                |-------------------------------------------------------|
   LDBISR *     | Interrupt service routine addr         (Section 76.11)|
                |-------------------------------------------------------|
   LDBISB *     | Line speed word                        (Section 76.12)|
                |-------------------------------------------------------|
   LDBQUE       | Global address of the next line in the queue          |
                |-------------------------------------------------------|
   LDBQUH       | Queue header             | Reserved                   |
                |-------------------------------------------------------|




                                    170



                |-------------------------------------------------------|
   LDBTTW *     | Type of line bits                      (Section 76.13)|
                |-------------------------------------------------------|
   LDBREM+0(*,4)| Remote bits                            (Section 76.14)|
                |-------------------------------------------------------|
   LDBREM+1 (4) | Last characteristics message sent                     |
                |-------------------------------------------------------|
   LDBREM+2(*,4)| Remote line number                     (Section 76.15)|
                |-------------------------------------------------------|
   LDBREM+3(*,4)| Remote node number                     (Section 76.16)|
                |-------------------------------------------------------|
   LDBREM+4(*,4)| MCR/VTM word                           (Section 76.17)|
                |-------------------------------------------------------|
   LDBLAT (2)   | Global address of LAT service data block,             |
   LDBNRT (3)   | Global address of NRB (NRTSER data block), or         |
   LDBTTD (*,5) | Line information for support of RSX-20F terminals     |
                |                                        (Section 76.18)|
                |-------------------------------------------------------|
   LDBMIC (*,6) | MIC bits                               (Section 76.19)|
|               |-------------------------------------------------------|
|  LDBLOT       | Byte pointer to take characters for logging           |
|               |-------------------------------------------------------|
   LDBLOC       | Count of characters to log                            |
                |-------------------------------------------------------|
   LDBBKB *     | Break mask field width                 (Section 76.20)|
|               |-------------------------------------------------------|
|  LDBCSB       | Length of reserved space for special character coding |
|               | (LDBCSL value)                                        |
|               |-------------------------------------------------------|
   LDBCC1       | Clear OOB flags for low-order control characters      |
                |-------------------------------------------------------|
   LDBCC2       | Clear OOB flags for high-order control characters     |
                |-------------------------------------------------------|
   LDBCHM *     | Characters mapped by RECMAP            (Section 76.21)|
|               |-------------------------------------------------------|
|  LDBEDT       | Pointer to editor block                               |
|               |-------------------------------------------------------|
   LDBLEN       | Size of a data block for a line                       |
                +-------------------------------------------------------+















                                    171



   Notes:
|  
|       1.  If LAT support is included.
|  
|       2.  If FTDECN (include DECnet support).
|  
|       3.  If FTNET (include ANF-10 network software).

        4.  If FTKL10 (include KL10 support).

        5.  If FTMIC (include Macro Command Processor).

        6.  If FTMLOG (include MIC Log File Support).




   76.1  LDBCOM -- Forced Command Word   76.1  LDBCOM -- Forced Command Word

   +--------------------------------------------------------------------+
   |L|L|L|L|L|      |    L   |                                          |
   |D|D|D|D|D|      |    D   |                                          |
   |B|B|B|B|B|      |    P   |                                          |
   |C|C|C|D|F|      |    C   |                                          |
   |M|M|M|E|D|      |    M   |                                          |
   |R|F|K|T|X|      |    X   |                                          |
   |--------------------------------------------------------------------|
   |0|1|2|3|4|5----8|9-----12|13--------------------------------------35|
   +--------------------------------------------------------------------+

   ____                ____   Word                Mask
   ______    ______    ___________   Symbol    Symbol    Description

   0         LDBCMR    Command request bit.
   1         LDBCMF    Command forced.
   2         LDBCMK    Forcing KJOB command.
   3         LDBDET    Job detached from this line during command
                       processing.
   4         LDBFDX    Processing a FILDAE exit message.
   5-8                 Reserved.
   9-12      LDPCMX    Pointer index for forced command.
   13-35               Reserved.












                                    172



   76.2  LDBATR -- Line Attributes Word   76.2  LDBATR -- Line Attributes Word

|  +--------------------------------------------------------------------+
|  |L|L|L|T|T|L|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|T|    |
|  |A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|A|    |
|  |L|L|L|.|.|L|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|.|    |
|  |8|D|O|8|N|I|L|C|S|G|S|A|P|G|S|T|R|U|V|V|V|E|J|T|T|B|B|H|U|S|C|N|    |
|  |B|I|V|B|R|S|I|I|R|A|E|V|P|P|X|E|C|D|F|F|5|S|T|C|S|M|T|S|W|S|L|K|    |
|  |T|S|R|A|C|O|D|D|M|T|M|O|O|O|L|K|S|K|W|L|2|L|K|S|I|T|A|R|N|U|R|B|    |
|  |--------------------------------------------------------------------|
|  |0|1|2|3|4|5|6|7|8|9|1|1|1|1|1|1|1|1|1|1|2|2|2|2|2|2|2|2|2|2|3|3|3  3|
|  |                    0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|5|6|7|8|9|0|1|2  5|
|  +--------------------------------------------------------------------+
|  
|  LDBATR is defined as  LDBAT2  for  DIGITAL  code  with  the  following
|  definitions:
|  
   ____      ____|  Word      Mask
   ______    ______    ___________|  Symbol    Symbol    Description
|  
|  0         LAL8BT    8-bit terminal.
|  1         LALDIS    Display terminal.
|  2         LALOVR    Overprinting works on this terminal.  If this word
|                      has a positive value (LAL8BT is zero), use LALCOS.
|                      If this word has a negative value (LAL8BT is 1),
|                      use LALOVR.
|  3         TA.8BA    8-bit architecture (can sometimes be 8-bit).
|  4         TA.NRC    National replacement character sets supported.
|  5         LALISO    8-bit means ISO/LATIN-1, not DEC/MCS.
|  6         TA.LID    Line insertion and deletion.
|  7         TA.CID    Character insertion and deletion.
|  8         TA.SRM    Scrolling regions (DECSTBM) supported.
|  9         TA.GAT    Guarded area transfer supported.
|  10        TA.SEM    Selective erase (DECSEL/DECSED) supported.
|  11        TA.AVO    VT100'S Advanced Video Option supported or
|                      emulated.
|  12        TA.PPO    Printer port option supported.
|  13        TA.GPO    ReGIS supported (maybe via graphics processor
|                      option).
|  14        TA.SXL    Sixel graphics supported.
|  15        TA.TEK    Tektronix 4010/4014 emulation.
|  16        TA.RCS    Dynamically redefinable character sets.
|  17        TA.UDK    User-define keys.
|  18        TA.VFW    Variable forms width.
|  19        TA.VFL    Variable forms length.
|  20        TA.V52    VT52 emulation available.
|  21        TA.ESL    Extra status line exists.
|  22        TA.JTK    Katakana character set is available.
|  23        TA.TCS    DEC Technical character set is available.
|  24        TA.TSI    Terminal state interrogation.




                                    173



|  25        TA.BMT    Block-mode transfer.
|  26        TA.BTA    Block transfer is ANSI.
|  27        TA.HSR    Horizontal scrolling.
|  28        TA.UWN    User windows.
|  29        TA.SSU    Multiple sessions.
|  30        TA.CLR    Colored terminal screen.
|  31        TA.NKB    No keyboard (asynchronous printer such as LN03).
|  
|  These may be followed  by  LDBAT3  (customer-defined  attributes)  and
|  LDBTTN (TTY type model name).
|  
   ____|  Mask
   ______    ___________|  Symbol    Description
|  
|  TA.LDT    Locator device type.
|  TA.ACL    ANSI conformance level (pure-ANSI level of support for
|            DIGITAL'S VSRM).
|  TA.DCL    DIGITAL'S conformance level (VSRM/DEC-STD-070).



   76.3  LDBOST -- Output Bits Word   76.3  LDBOST -- Output Bits Word

   +--------------------------------------------------------------------+
   |L|L|L|L|L|L|L|L|L|L| L| L|                                          |
   |O|O|O|O|O|O|O|O|O|O| O| O|                                          |
   |L|L|L|L|L|L|L|L|L|L| L| L|                                          |
   |X|N|E|F|S|S|S|N|R|R| P| M|                                          |
   |F|B|S|S|A|T|S|N|E|E| I| I|                                          |
   |P|S|P|P|P|P|O|P|O|E| M| C|                                          |
   |--------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9|10|11|12--------------------------------------35|
   +--------------------------------------------------------------------+

   ____      ____   Word      Mask
   ______    ______    ___________   Symbol    Symbol    Description

   0         LOLXFP    XOFF fill pointer to be sent.
   1         LOLNBS    Need bell sent.
   2         LOLESP    Echo stream pointer to be serviced.
   3         LOLFSP    Fill string pointer to be serviced (SEND ALL).
   4         LOLSAP    SEND ALL pending.
   5         LOLSTP    Output stopped by XOFF.
   6         LOLSSO    SCNSER stopped output (for page stop).
   7         LOLNNP    Not-now pointer to be serviced.
   8         LOLREO    Re-eat output after free CRLF.
   9         LOLREE    Re-eat echo after free CRLF.
   10        LOLPIM    Terminal was opened in packed image mode.
   11        LOLMIC    Line is controlled by MIC.





                                    174



|  12-17                Reserved.
|  18-26     LDPREE    Echo to re-eat.
|  27-35     LDPREO    Output to re-eat.



   76.4  LDBIST -- Input Status Word   76.4  LDBIST -- Input Status Word

   +--------------------------------------------------------------------+
   |     Character being deferred    |      Reason for deferring        |
   +--------------------------------------------------------------------+

   The reason codes are:

   ____      ______    _______   Code      Symbol    Meaning

   1         LISDCI    Deferred clear interrupt.
   2         LISQOT    Quoting a character.
   3         LISSWI    Evaluating a possible switch sequence.
|  4         LISFND    Looking for a character to find.



   76.5  LDBDCH -- Hardware Status Word   76.5  LDBDCH -- Hardware Status Word

   +--------------------------------------------------------------------+
   |L|L|L|L| |L|L|L|L|L| L| L|          | L| L|   L   |  | L|           |
   |D|D|D|D| |D|D|D|D|D| D| D|          | D| D|   D   |  | D|           |
   |L|L|L|L| |L|L|L|L|L| L| L|  LDPVR1  | R| R|   P   |  | R|   LDPLNO  |
   |I|P|C|F| |8|D|N|F|I| C| B|          | P| C|   V   |  | S|           |
   |D|P|R|C| |B|L|E|C|M| O| K|          | T| T|   R   |  | H|           |
   |L|S|P|R| |I|R|C|S|I| M| A|          | Y| Y|   2   |  | C|           |
   |--------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9|10|11|12------17|18|19|20---24|25|26|27-------35|
   +--------------------------------------------------------------------+

   ____                ____   Word                Mask
   ______    ______    ___________   Symbol    Symbol    Description

   0         LDLIDL    Line is idle.  If clear, a transmit interrupt is
                       expected.
   1         LDLPPS    Prompt position has been set for this line.
   2         LDLCRP    Control-R pending (XMTECH synch plug).
|  3         LDLDIP    Delete in progress in XMTECH (block TYICC4).
|  4         LDLCNE    Command-level no echo.
   5         LDL8BI    Eight-bit input mode by program.
   6         LDLDLR    Suppress dollar sign.
   7         LDLNEC    No echo, due to program.
   8         LDLFCS    Line inited in full character set mode.





                                    175



   9         LDLIMI    Image input.
   10        LDLCOM    Line is at command level.
   11        LDLBKA    Break on all characters (DDTIN, TTCALL).
   12-17     LDPVR1 *  4 of 6 bits pointed to by GETLP1 for GETLIN:.
   12        LDLSLV    Slave; this terminal may be assigned.
   13        LDLLCT(1) Lowercase translate to upper.
   14        LDLTAB(2) Line accepts tabs, not spaces.
   15        LDLLCP    Local copy (no echo).
   16        LDLFRM(3) Line accepts FF and VT (else use LFs).
|  17        LDLNFC    No free carriage return at right margin.
   18        LDRPTY    Pseudo-terminal.
   19        LDRCTY    Console terminal.
   20-24     LDPVR2    Bits pointed to by LDPVR2:
   20        LDROSU(4) Output suppress (<CTRL/O>).
   21        LDRDSD    Dataset line.
|  22                  Reserved.
|  23                  Reserved.
   24        LDRRMT    Remote non-dataset line.
|  25                  Reserved.
   26        LDRSHC    Suppress hung check.
   27-35     LDPLNO    Pointer to hardware line number.


   * Bits for GETLIN UUO:

   _____     ___________   Label     Description

   GTLRDY    Bit for GETLIN to indicate waiting break character.
   GTLT37    Model 37 bit (copy of LDLLCT).
   GTLT35    Model 35 bit (copy of LDLTAB).
   GTLLCP    Local copy (copy of LDLLCP).
   GTLXON    XON is true.



        1.  LDPLCT, pointer to lower case bit.

        2.  LDPTAB, pointer to hardware tabs bit.

        3.  LDPFRM, pointer to hardware form feed bit.

        4.  LDPOSU, pointer to output suppression bit.












                                    176



   76.6  LDBBYT -- First Word for Software Status   76.6  LDBBYT -- First Word for Software Status

   The LDBBYT byte word is also referenced by the byte pointer stored  in
   LDBOFL.

   +--------------------------------------------------------------------+
   |L| L |  P |    |L| L| L| L| L| L|  L  | L| L|  L  | L| L| L|        |
   |1| D |  O |    |1| 1| 1| 1| 1| 1|  D  | 1| 1|  D  | 1| 1| 1|        |
   |L| P |  H |    |L| L| L| L| L| L|  P  | R| R|  P  | R| R| R|        |
   |O| F |  P |    |U| Q| Q| Q| Q| D|  T  | M| C|  C  | D| D| D|        |
   |F| L |  O |    |N| C| N| T| O| E|  I  | I| H|  P  | E| E| E|        |
   |L| C |  S |    |R| C| C| C| T| M|  M  | F| P|  U  | L| C| M|        |
   |--------------------------------------------------------------------|
   |0|1 2|3--5|6--8|9|10|11|12|13|14|15-19|20|21|22-24|25|26|27|28----35|
   +--------------------------------------------------------------------+

             ____             Mask
   ____      ______    ___________   Bits      Symbol    Description

   0         L1LOFL    Set to 1 if front end for this line is down.
   1-2       LDPFLC    Count of number of fillers by class.
   3-5       POHPOS    Old horizontal position.  Needed for tab
                       simulation.
   6-8                 Reserved.
   9         L1LUNR    Unread in progress.
   10        L1LQCC    Quote next character, for CCTYI.
   11        L1LQNC    Quote next character, for TYICC4.
   12        L1LQTC    Quote next character, for XMTECH.
   13        L1LQOT    TTY Quote Enabled flag.
   14        L1LDEM    Deferred Echo flag, set/cleared by XMTECH.
   15-19     LDPTIM    Timeout on image input.
   20        L1RMIF    MIC interlock flag.
   21        L1RCHP    Change hardware parameters queue bit.
   22-24     LDPCPU    CPU number.
   25        L1RDEL    Echo may echo 1 line if deferred.
   26        L1RDEC    Echo may echo 1 character if deferred.
   27        L1RDEM    Deferred echo bit.  Set by SET TERMINAL DEFER.
   28-35               Reserved.
















                                    177



   76.7  LDBBY2 -- Second Word for Software Status   76.7  LDBBY2 -- Second Word for Software Status

   +--------------------------------------------------------------------+
   |L|L|L|L|L|L|L|L|L|                | L| L|             |   L   |     |
   |2|2|2|2|2|2|2|2|2|                | 2| 2|             |   D   |     |
   |L|L|L|L|L|L|L|L|L|     LDPDSC     | R| R|   LDPWID    |   P   |     |
   |D|C|H|H|H|H|H|S|T|                | X| E|             |   A   |     |
   |E|C|D|D|D|D|D|N|A|                | O| C|             |   P   |     |
   |L|S|1|2|3|4|5|D|P|                | N| S|             |   C   |     |
   |--------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9-------------17|18|19|20---------27|28---31|32-35|
   +--------------------------------------------------------------------+

             ____             Mask
   ____      ______    ___________   Bits      Symbol    Description

   0         L2LDEL    Last character in was a delete.
   1         L2LCCS    Last character in was a <CTRL/C>.
|  2-6                 Reserved.
   7         L2LSND    Send allowed while busy.
   8         L2LTAP    <CTRL/Q> from keyboard turns on L2RXON.
   9-17      LDPDSC    Dataset Control Table Index back pointer.
   18        L2RXON    XON is true (paper tape input).
   19        L2RECS    Eat command sync.
   20-27     LDPWID    Width of terminal carriage.
   28-31     LDPAPC(1) Asynchronous port characteristic (type).
   32-35               Reserved.

   Notes:

        1.  Fields in LDPAPC:

            0         APCUNK    Unknown type or not yet set up.
            1         APCHWD    Hardwired terminal.
            2         APCDSD    Dataset line.
            3         APCTSN    Reserved.
            4         APCGAN    Reserved.
            5         APCADL    Autodialler.
            6         APCMCM    Reserved.
            7         APCNRT    DECnet NRTSER line.
            10        APCLAT    LAT terminal.
            11        APCCTM    DECnet CTERM line.












                                    178



   76.8  LDBBY3 -- Third Word for Software Status   76.8  LDBBY3 -- Third Word for Software Status

   +--------------------------------------------------------------------+
   |L|L|L|L|L|L|L|L|L|L| L|     R     |         L         | L|    L     |
   |3|3|3|3|3|3|3|3|3|3| 3|     e     |         D         | 3|    D     |
   |L|L|L|L|L|L|L|L|L|L| L|     s     |         P         | R|    P     |
   |D|F|O|E|I|C|F|O|E|I| C|     r     |         M         | T|    T     |
   |M|P|P|P|P|P|H|H|H|H| H|     v'    |         X         | M|    M     |
   |C|D|D|D|D|D|D|D|D|D| D|     d     |         T         | O|    R     |
   +--------------------------------------------------------------------+
   |0|1|2|3|4|5|6|7|8|9|10|11--------18|19---------------26|27|28-----35|
   +--------------------------------------------------------------------+

   ____      ______    _______   Bits      Symbol    Meaning

   0         L3LDMC    Deferred echo mode changed (sign bit).
   1         L3LFPD    Fill partly done (3 characters).
   2         L3LOPD    Output partly done (3 characters).
   3         L3LEPD    Echo partly done (3-part character to be
                       completed).
   4         L3LIPD    Input partly done (3-part character).
   5         L3LCPD    Command partly done (3-part character).
   6         L3LFHD    Fill half-done (2-part character).
   7         L3LOHD    Output half-done (2-part character).
   8         L3LEHD    Echo half-done (2-part character).
   9         L3LIHD    Input half-done (2-part character).
   10        L3LCHD    Command half-done (2-part character).
   11-18               Reserved.
   19-26     LDPMXT    Maximum idle time for auto-disconnect.
   27        L3RTMO    Timeout flag:  overflow for LDPTMR
                       (auto-disconnect timer expired).
   27-35     LDPTMR    Count up timer for auto-disconnect.



   76.9  LDBLSW -- Page Length Word   76.9  LDBLSW -- Page Length Word

   +--------------------------------------------------------------------+
   |                 |                |                 |               |
   |     LDPLNB      |     LDPSTB     |      LDPLNC     |     LDPSTC    |
   |                 |                |                 |               |
   |--------------------------------------------------------------------|
   |0---------------8|9-------------17|18-------------26|27-----------35|
   +--------------------------------------------------------------------+










                                    179



             ____             Mask
   ____      ______    ___________   Bits      Symbol    Description

   0-8       LDPLNB    Page or "forms" length (base value).
   9-17      LDPSTB    Stop (after n lines) value (base).
   18-26     LDPLNC    Page or "forms" counter (counted up to 0).
   18        LPRLC0    Length counter overflowed flag.
   27-35     LDPSTC    Stop counter (counted up to 0).
   27        LPRSC0    Stop counter overflowed flag.



   76.10  LDBPAG -- Page Bits   76.10  LDBPAG -- Page Bits

   +--------------------------------------------------------------------+
   |L|L|L|L|L|L|L| |L|L| L| L| L| L| L|     |             |             |
   |P|P|P|P|P|P|P| |P|P| P| P| P| P| P|     |             |             |
   |L|L|L|L|L|L|L| |L|L| L| L| L| L| P|     |   LDPPFF    |   LDPACR    |
   |I|P|X|A|B|S|S| |P|S| S| F| S| F| F|     |             |             |
   |R|A|O|L|L|L|A| |O|T| S| F| B| F| F|     |             |             |
   |M|G|F|T|K|F|P| |K|P| T| S| L| F| H|     |             |             |
   |--------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15-17|18---------26|27---------35|
   +--------------------------------------------------------------------+

             ____             Mask
   ____      ______    ___________   Bits      Symbol    Description

   0         LPLIRM    Terminal not heard from this second.
|  1         LPLXNF    Set terminal page command was executed.
   2         LPLXOF    Sent XOFF, always send XON later.
   3         LPLALT    Pointer to altmode conversion bit.
   4         LPLBLK    Suppress blank lines.
   5         LPLSLF    Suppress line feeds.
   6-7                 Reserved.
   8         LPLPOK    Forcing XMIT start using TOPOKE.
   9         LPLSTP    Automatically stop every (LDPSTB) lines.
   10        LPLSST    Don't clear page counter for free on XON.
   11        LPLFFS    Stop on form feeds (reserved).
   12        LPLSBL    Ring bell on auto-stop.
   13        LPLFFF    Simulate form feed with linefeeds (reserved).
   14        LPLFFH    Simulate form feed with clear-screen (reserved).
   15-17               Reserved.
   18-26     LDPPFF    Number LFs remaining on VT and FF simulation.
   27-35     LDPACR    Auto-CRLF column counter.









                                    180



   76.11  LDBISR -- Interrupt Service Routine   76.11  LDBISR -- Interrupt Service Routine

   +--------------------------------------------------------------------+
   |@| Index   | Section Number    | Address of Service Routine         |
   |--------------------------------------------------------------------|
   |0|1|2-------5|6----------------17|18------------------------------35|
   +--------------------------------------------------------------------+

   ____      ___________   Bits      Description

   0         Clear for global indirect word.
   1         Indirection (clear).
   2-5       Index register (T1).
   6-17      Section number of routine.
   18-35     Address of interrupt service routine.



   76.12  LDBISB -- Line Speed Word   76.12  LDBISB -- Line Speed Word

|  +--------------------------------------------------------------------+
|  |L|  L  |  L  |L| L| L|                                              |
|  |I|  I  |  I  |I| I| I|                                              |
|  |L|  L  |  L  |L| L| L|                                              |
|  |C|  T  |  R  |A| 7| R|                                              |
|  |F|  S  |  S  |P| B| T|                                              |
|  |E|  P  |  P  |L| T| C|                                              |
|  |--------------------------------------------------------------------|
|  |0|1---4|5---8|9|10|11|12------------------------------------------35|
|  +--------------------------------------------------------------------+

   ____      ______    _______   Bits      Symbol    Meaning

|  0         LILCFE    1 if front end is clever, 0 if dumb.
|  1-4       LILTSP    Transmit speed.
|  5-8       LILRSP    Receive speed.
|  9         LILAPL    APL mode.
|  10        LIL7BT    Line is restricted to 7-bit operation.
|  11        LILRTC    <CTRL/R>/<CTRL/T> compatibility.
|  13-35               Reserved.














                                    181



   76.13  LDBTTW -- Line Type Word   76.13  LDBTTW -- Line Type Word

   +-------------------------------------------------------------------+
   |ANF |NRT |LAT |USE |Reserved|FSP |VDC |IDC |  LCH  |  PRP  |  TTT  |
   |-------------------------------------------------------------------|
   | 0  | 1  | 2  | 3  |4------8| 9  | 10 | 11 | 12-19 | 20-27 | 28-35 |
   +-------------------------------------------------------------------+

   ____      ______    ___________   Bits      Symbol    Description

   0         LTLANF    ANF-10 network virtual terminal.
   1         LTLNRT    DECnet NRT or CTERM virtual terminal.
   2         LTLLAT    LAT server terminal line.
   3         LTLUSE    Allocatable LDB in use (always on for local LDBs,
                       such as the CTY).
   4-8                 Reserved.
   9         LDLFSP    Line is a full-SCNSER PTY.
   10        LDLVDC    Visible deletion of character has happened.
   11        LDLIDC    Invisible deletion of character has happened.
|  12-19     LDPLCH    Last character read by COMCON.
|  20-27     LDPPRP    Position of prompt.
|  28-35     LDPTTT    Terminal type, as specified by SET TTY TYPE
|                      command.



   76.14  LDBREM+0 -- Remote Bits   76.14  LDBREM+0 -- Remote Bits

   +--------------------------------------------------------------------+
   | | | | | | | | | | |  |  |  |  |  |  |  |  |  |  |                  |
   | | | | | | | | | | |  |  |  |  |  |  |  |  |  |  |        LDPSTS    |
   | | | | | | | | | | |  |  |  |  |  |  |  |  |  |  |                  |
   |--------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20--------------35|
   +--------------------------------------------------------------------+

   The bits in this word are defined different for different applications
   (NETVTM and NETMCR).

             ____             Mask
   ____      ______      ___________   Bits      Symbol      Description

   0         LRLVTM (1)  If set, this is a "local terminal" that has been
                         "SET HOSTed" to another host.
   1         LRLCON (1)  If set, terminal is "connected" (NCL connect
                         sequence is complete).
   2         LRLSTS (1)  If set, a "STATUS" message is required.  Same
                         bit, but different messages for VTM and MCR.






                                    182



|  3         LRLATO (1)  If set, autobaud is in progress.
|  4         LRLSCH (2)  If set, a "CHARACTERISTICS" message is required
|                        (works like LRLSTS).
|  5         LRLDST (2)  A "delayed" status message is required (used to
|                        optimize traffic.  Has priority over LRLSTS).
|  6         LRLQED (2)  If set, VTM line has been "queued" by VTMENQ.
|  7         LRLDIP (2)  Set to initiate a disconnect.
|  8         LRLVTF (2)  VTM terminal needs to be freed by FRELDB.
|  9         LRLVTZ (2)  VTM terminal has been zapped.
|  14        LRLTTO (3)  LDPCHR has the next character to output.
   4         LRLTTW (3)  Line is waiting for a data request.
   5         LRLSCG (3)  <CTRL/O> action requested (send character
                         gobbler).
   6         LRLEPW (3)  Echo pipeline marker waiting to go.
   7         LRLIMO (3)  Indicates that remote is in image mode output.
   8         LRLADR (3)  Use of the auto-dialer has been requested.
   9         LRLXOF (3)  An XOFF (<CTRL/S>) message has been requested.
   10        LRLCHR (3)  This terminal has received at least 1
                         characteristics message.
   11        LRLHUR (3)  Hang-up phone requested.
   12        LRLDSR (3)  The -10's copy of what it thinks LRLDTR should
                         be.
   13        LRLGRT (3)  Greet the terminal (with INITIA).
   15        LRLADL (3)  Indicates this line possesses an auto-dialer
                         (also set by CONNECT message).
   16        LRLTMO (3)  Auto-disconnect requested hang-up phone.
|  17        LRLABR (3)  Autobaud request pending for remote.
   18        LRRSHC (3)  The line at the other end has "SET HOST
                         capability." (it can respond to DISCONNECT
                         messages).
   19        LRRXFF (3)  Send XON/XOFF in status message.

   Notes:

   Bites used by:

        1.  both NETVTM (local SET HOST) and NETMCR (remote terminals).

        2.  only NETVTM (local SET HOST).

        3.  only NETMCR ("normal" remote terminals, like DN87).













                                    183



   76.15  LDBREM+2 -- Remote Line Number   76.15  LDBREM+2 -- Remote Line Number

   +--------------------------------------------------------------------+
   |                        |                           |               |
   |         LDPSLA         |          LDPDLA           |       LDPRLN  |
   |                        |                           |               |
   |--------------------------------------------------------------------|
   |0---------------------12|13-----------------------25|26-----------35|
   +--------------------------------------------------------------------+

             ____             Byte
   ____      _______   _______   Bits      Pointer   Meaning

   0-12      LDPSLA    Our source link address.
   13-25     LDPDLA    Our destination link address.
   26-35     LDPRLN    Line number at remote station.



   76.16  LDBREM+3 -- Remote Node Number   76.16  LDBREM+3 -- Remote Node Number

   +--------------------------------------------------------------------+
   |   L   |                |                  |                        |
   |   D   |                |                  |                        |
   |   P   |     LDPDRQ     |      LDPEPM      |           LDPRNN       |
   |   E   |                |                  |           LDPRNF       |
   |   L   |                |                  |                        |
   |   E   |                |                  |                        |
   |--------------------------------------------------------------------|
   |0-----3|4-------------11|12--------------19|20--------------------35|
   +--------------------------------------------------------------------+

             ____             Byte
   ____      _______   ___________   Bits      Pointer   Description

   0-3       LDPELE    2741 element number.
   4-11      LDPDRQ    Number of data requests from remote.
   12-19     LDPEPM    Serial number of last EPM from remote.
   20-35     LDPRNN    Number of node owning this TTY.
   20-35     LDPRNF    Same as LDPRNN except indexed by "F".














                                    184



   76.17  LDBREM+4 -- MCR/VTM Word   76.17  LDBREM+4 -- MCR/VTM Word

   The bytes in LDBREM+4 are different for MCR and VTM applications.  The
   following byte definitions are used in MCR applications:

|  +--------------------------------------------------------------------+
|  |                |                |                |                 |
|  |     LDPCHR     |     LDPJOB     |     LDPNVR     |    LDPLTT       |
|  |                |                |                |                 |
|  |--------------------------------------------------------------------|
|  |0--------------8|9-------------17|18------------26|27-------------35|
|  +--------------------------------------------------------------------+

             ____             Byte
   ____      _______   ___________   Bits      Pointer   Description

   0-8       LDPCHR    If LRLTTO=1, contains the next output character.
|  9-17      LDPJOB    Job number initiating a connect.
|  18-26     LDPNVR    Remote's NCL version number.
|  27-35     LDPLTT    Last terminal-type (index) sent to remote.

   The  following  byte  definitions  are  used  in   LDBREM+4   by   VTM
   applications:

   +--------------------------------------------------------------------+
   |                                 |                                  |
   |              LDPDST             |              LDBVTQ              |
   |                                 |                                  |
   |--------------------------------------------------------------------|
   |0------------------------------17|18------------------------------35|
   +--------------------------------------------------------------------+

             ____             Byte
   ____      _______   ___________   Bits      Pointer   Description

   0-17      LDPDST    Delayed-status-message for VTM.
   18-35     LDBVTQ    VTM-queue-link.

















                                    185



   76.18  LDBTTD -- RSX-20F Word   76.18  LDBTTD -- RSX-20F Word

   +--------------------------------------------------------------------+
   |                                                                    |
   | Line information for support of RSX-20F terminals                  |
   |                                                                    |
   |--------------------------------------------------------------------|
   |0-----------------------------------------------------------------35|
   +--------------------------------------------------------------------+

   _____     ______    ___________   Value     Symbol    Description

   Left Half:

   740000              Remembered transmit speed.
   36000               Remembered receive speed.
   1000      LTLXOF    Sent XOFF to -20F.
   400       LTLRBS    Remote bit sent for -20F datasets.
   200       LTLCTO    Need to send flush output to -20F.
|  100       LTLAXF    Auto-XOFF enable sent to -20F.
|  40        LTLACK    Line waiting for an ACK.
|  20        LTLXFF    Send XON/XOFF status to -20F.
|  17        LTLTIM    Timeout field for LTLACK.
|  
|  Right Half:
|  
|  400000    LTRABR    Autobaud request pending for -20F.
|  200000    LTR8BE    Last sent 8-bit I/O status as enabled.


























                                    186



   76.19  LDBMIC -- MIC Bits   76.19  LDBMIC -- MIC Bits

   +--------------------------------------------------------------------+
   | | | | | | | | | | |  |  |  |  |  |         |           |           |
   | | | | | | | | | | |  |  |  |  |  |         |           |           |
   | | | | | | | | | | |  |  |  |  |  |         |           |           |
   | | | | | | | | | | |  |  |  |  |  |         |           |           |
   | | | | | | | | | | |  |  |  |  |  |         |           |           |
   | | | | | | | | | | |  |  |  |  |  |         |           |           |
   |--------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15-----21|22-------28|29-------35|
   +--------------------------------------------------------------------+

             ____             Mask
   ____      ______    ___________   Bits      Symbol    Description

                       Set if:
   0         LDLCHK    any of bits 1-14 are set.
   1         LDLMCC    <CTRL/C> has been typed.
   2         LDLOPC    operator character seen in column 1.
   3         LDLERC    error character seen in column 1.
   4         LDLMCP    <CTRL/P> has been typed.
   5         LDLMCB    <CTRL/B> has been typed.

   6         LDLSIL    Silence this line.
   7         LDLMMM    Line in monitor mode.
   8         LDLMTI    Line in user mode and TI wait or in monitor mode
                       and can accept commands .
   9         LDLCL1    Line is in Column on output.

                       Set if:
   10        LDLMCA    <CTRL/A> has been typed (abort).
   11        LDLRSP    error output is available.
   12        LDLRSY    error output is being accepted
   13        LDLLOG    MIC is logging.
|  14        LDLMUI    Use JOBSTS UUO for more information.
|  
|                      ASCII character to be treated as:
|  15-21     LDP.OP    operator character.
|  22-28     LDP.ER    error character.
|  29-35     LDPMJN    MIC master job numbers -- allows more than one MIC
|                      to run.












                                    187



   76.20  LDBBKB -- Break Mask Field Width   76.20  LDBBKB -- Break Mask Field Width

   +--------------------------------------------------------------------+
   |  | Reserved  | Field Width | Reserved                              |
   |--------------------------------------------------------------------|
   |0 |1---------2|3----------11|12-----------------------------------35|
   +--------------------------------------------------------------------+

             ____             Byte
   ____      _______   ___________   Bits      Pointer   Description

   0         LDLBKM    Break masks are enabled.
   1-2                 Reserved.
   3-11      LDPFWD    Field width.
   12-35               Reserved.



   76.21  LDBCHM -- RECMAP Characters   76.21  LDBCHM -- RECMAP Characters

   +--------------------------------------------------------------------+
   |LMLNDS|LMLSSE|  LDPUNP   |  LDPESC   |  LDPSW1  |  LDPSW2 |         |
   |--------------------------------------------------------------------|
   |  0   |  2   |  1----9   |  10--17   |  18--25  |  26--33 | 34 | 35 |
   +--------------------------------------------------------------------+

             ____             Byte
   ____      _______   ___________   Bits      Pointer   Description

|  0         LMLNDS    Non-defailt sequences (for echo control).
|  1         LMLSSE    Switch sequence enabled.
|  2-9       LDPUNP    TTY unpause character.
|  10-17     LDPESC    TTY escape character.
|  18-25     LDPSW1    Switch sequence number one.
|  26-33     LDPSW2    Switch sequence number two.
|  34-35               Reserved.


















                                    188



   77  LINTAB -- LINE TABLE   77  LINTAB -- LINE TABLE

   Description:   Contains the address of  each  Line  Data  Block.   One
                  entry per line (including scanner, CTY, and PTY lines.)
                  Indexed by line number.

   Defined:       COMDEV

   Used in:       CLOCK1, COMCON, COMMON, CPNSER, D76INT, DL0INT  DL1INT,
|                 DTESER,  ERRCON,  MPXSER, NETMCR, ONCE, PTYSER, SCNSER,
|                 SYSINI, TTDINT, UUOCON

                +-------------------------------------------------------+
   Line 0       |                  Fullword LDB address                 |
                |-------------------------------------------------------|
   Line 1       |                                                       |
                |-------------------------------------------------------|
   Line 2       |                                                       |
                |-------------------------------------------------------|
       -        |                                                       |
       -        |                                                       |
       -        |                                                       |
                |                                                       |
                |                                                       |
                |-------------------------------------------------------|
   Line n       |                                                       |
                +-------------------------------------------------------+
                 0                                                    35


























                                    189



   78  LOGTAB -- LOGIN JBTTAB POINTER TABLE   78  LOGTAB -- LOGIN JBTTAB POINTER TABLE

   Description:   Table of pointers to those  job  tables  in  which  the
                  LOGIN UUO stores statistics.

   Defined in:    UUOCON (local symbol)

   Used by:       UUOCON

   +--------------------------------------------+
   |        AC J       |       JBTPPN##         | ; PPN
   |--------------------------------------------|
   |        AC J       |       JBTPRV##         | ; Privilege bits
   |--------------------------------------------|
   |        AC W       |        PDNM1##         | ; 1st half user name
   |--------------------------------------------|
   |        AC W       |        PDNM2##         | ; 2nd half user name
   |--------------------------------------------|
   |        AC W       |        PDCNO##         | ; Charge no. this job
   +--------------------------------------------+
    0                17 18                    35

   Notes:

        1.  LOGIN UUO used only by LOGIN and LOGOUT programs.

        2.  User program does:

                   LOGIN AC,
                       or
                   CALLI AC,15

            where AC contains:

                   XWD no.-of-entries,location

            which is a list of job statistics to be stored in the monitor
            tables listed in LOGTAB.
















                                    190



   79  LVDTBL -- LEVEL D DISK PARAMETER TABLE   79  LVDTBL -- LEVEL D DISK PARAMETER TABLE

   Description:   Contains parameters for  the  Level  D  disk  routines.
                  Each entry accessed by its own label.

   Defined in:    COMMOD

   Used by:       CLOCK1, COMCON, COMMON, FILFND, FILIO, FILUUO,  ONCMOD,
                  REFSTR, SCNSER, SYSINI, UUOCON

   GETTAB Table:  .GTLVD (16)

                +-------------------------------------------------------+
   MFDPPN       | PPN for MFDS [1,1]                                    |
                |-------------------------------------------------------|
   SYSPPN       | PPN for device SYS [1,4]                              |
|               |-------------------------------------------------------|
|  FFAPPN       | PPN for full file access [1,2]                        |
|               |-------------------------------------------------------|
|  HLPPPN       | PPN for HELP and SYSTAT [2,5] (not logged-in PPN)     |
|               |-------------------------------------------------------|
|  SPLPPN       | PPN for printer spooling [3,3]                        |
|               |-------------------------------------------------------|
   SYSPPB       | First PPB in system      | PPB to start scan for      |
                |                          | obtainable NMB             |
                |-------------------------------------------------------|
   SYSSTR       | First STR in system      | Index in Structure Data    |
                |                          | Block for pointer to next  |
                |                          | Structure Data Block       |
                |-------------------------------------------------------|
   SYSUNI       | First UDB in system      | Index in Unit Data Block   |
                |                          | for pointer to next Unit   |
                |                          | Data Block                 |
                |-------------------------------------------------------|
   SWPUNI       | First swapping UDB       | Index in Unit Data Block   |
                |                          | for pointer to next        |
                |                          | swapping Unit Data Block   |
                |-------------------------------------------------------|
   CORNUM       | Number of 4 word blocks                               |
                |-------------------------------------------------------|
   STNPRT       | Standard privilege       |                            |
                |-------------------------------------------------------|
|  UFDPRT       | Standard UFD privilege   |                            |
|               |-------------------------------------------------------|
|               | Number of monitor buffers, set at MONGEN time         |
|               |-------------------------------------------------------|
|  QUESTR       | SIXBIT name of structure for queuing programs         |
|               |-------------------------------------------------------|
|  XPNPPN       | UFD for dumping crashes [10,1]                        |
|               |-------------------------------------------------------|




                                    191



                |-------------------------------------------------------|
   SFDLVL       | Number of nested SFD levels allowed                   |
                |-------------------------------------------------------|
   SPLPRT       | Protection for spooled output                         |
                |-------------------------------------------------------|
   SYSPRT       | Protection for most system files                      |
                |-------------------------------------------------------|
   SYSPRY       | Protection for system .SYS files                      |
                |-------------------------------------------------------|
   MUSTMX       | Negative maximum extended RIB argument for USETI      |
                |-------------------------------------------------------|
   MAXTRN       | Maximum number of blocks to transfer in one operation |
|               |-------------------------------------------------------|
|  NEWPPN       | PPN of experimental system (NEW) [1,5]                |
|               |-------------------------------------------------------|
   OLDPPN       | PPN of old system (OLD) [1,3]                         |
                |-------------------------------------------------------|
   UMDPPN       | User-mode diagnostics PPN [6,10]                      |
                |-------------------------------------------------------|
   NUMBF        | Default number of disk buffers                        |
                |-------------------------------------------------------|
   MAXSWP       | Maximum number of units in active swapping list       |
                |-------------------------------------------------------|
   ALGPPN       | ALGOL library PPN  [5,4]                              |
                |-------------------------------------------------------|
   BLIPPN       | BLISS library PPN [5,5]                               |
                |-------------------------------------------------------|
   FORPPN       | FORTRAN library PPN [5,6]                             |
                |-------------------------------------------------------|
   MACPPN       | MACRO library PPN [5,7]                               |
                |-------------------------------------------------------|
   UNVPPN       | Universal library PPN [5,17]                          |
                |-------------------------------------------------------|
   PUBPPN       | User-maintained SYS [1,6]                             |
                |-------------------------------------------------------|
   TEDPPN       | Text editor library PPN  [5,10]                       |
                |-------------------------------------------------------|
   RELPPN       | REL file library PPN [5,11]                           |
                |-------------------------------------------------------|
   RNOPPN       | RUNOFF library PPN [5,11]                             |
                |-------------------------------------------------------|
   SNOPPN       | SNOBOL library PPN [5,13]                             |
                |-------------------------------------------------------|
   DOCPPN       | DOC file library PPN [5,14]                           |
                |-------------------------------------------------------|
   FAIPPN       | FAIL library PPN [5,15]                               |
                |-------------------------------------------------------|
   MUSPPN       | Music library PPN [5,16]                              |
                |-------------------------------------------------------|





                                    192



                |-------------------------------------------------------|
   DECPPN       | Library for DEC-distributed software PPN (DEC) [10,7] |
|               |-------------------------------------------------------|
|               | Pointer to active swapping list                       |
|               |-------------------------------------------------------|
   BASPPN       | BASIC library PPN [5,1]                               |
                |-------------------------------------------------------|
   COBPPN       | COBOL library PPN [5,2]                               |
                |-------------------------------------------------------|
   MXIPPN       | PDP-11 library PPN [5,3]                              |
                |-------------------------------------------------------|
   NELPPN       | NELIAC library PPN [5,20]                             |
                |-------------------------------------------------------|
   DMPPPN       | Dump library PPN [5,21]                               |
                |-------------------------------------------------------|
   POPPPN       | POP2 library PPN [5,22]                               |
                |-------------------------------------------------------|
   TSTPPN       | Test library PPN [5,23]                               |
                |-------------------------------------------------------|
   ALLOVR       | Non-zero:log soft errors if recover from overrun on 1 |
|               |-------------------------------------------------------|
|               | DAEMON's pointers to MASSBUSS error locations         |
|               |-------------------------------------------------------|
|               | DAEMON's pointers to BAT block and channel error info |
|               |-------------------------------------------------------|
|  DBSPPN       | DBMS library PPN [5,24]                               |
|               |-------------------------------------------------------|
|               | Offset of the expected channel terminal word in CHN   |
|               |-------------------------------------------------------|
   MICPPN       | MIC library PPN [5,25]                                |
                |-------------------------------------------------------|
   TPSPPN       | Text processing system library PPN [5,26]             |
                |-------------------------------------------------------|
   CTLPPN       | CTL file library PPN [5,27]                           |
                |-------------------------------------------------------|
   GAMPPN       | Game library PPN [5,30]                               |
                |-------------------------------------------------------|
   ACTPPN       | System accounting library PPN [1,7]                   |
                |-------------------------------------------------------|
   APLPPN       | APL library PPN [5,31]                                |
                |-------------------------------------------------------|
   RIBECT       | RIB error threshold                                   |
                |-------------------------------------------------------|
   RIBTOT       | Total RIB errors                                      |
                |-------------------------------------------------------|
   SYSDOR       | Dormant access table pointer                          |
                |-------------------------------------------------------|
   SYSCOR       | Free core pointer                                     |
                |-------------------------------------------------------|





                                    193



                |-------------------------------------------------------|
   INTFNC       | Number of times front end (RSX20F) had disk           |
                |-------------------------------------------------------|
   D60PPN       | DAS60 log file area [5,32]                            |
|               |-------------------------------------------------------|
|               | Starting location of queue table for DAEMON error     |
|               | reports                                               |
|               |-------------------------------------------------------|
|               | Starting pointer for DAEMON error extract             |
|               |-------------------------------------------------------|
|               | Starting pointer for DAEMON error insert              |
|               |-------------------------------------------------------|
|               | Length of DAEMON error table                          |
|               |-------------------------------------------------------|
|               | Offset of UNICDA in UDB                               |
|               |-------------------------------------------------------|
|               | Offset of UNIDES in UDB                               |
|               |-------------------------------------------------------|
|  SYSPTR       | Pointer to in-core copies of retrieval pointers       |
|               |-------------------------------------------------------|
|               | Maximum number in system |   Maximum number in job    |
|               | search list (SSL)        |     search list (JSL)      |
|               |-------------------------------------------------------|
|               | Offset of UINSLB into UDBs                            |
|               |-------------------------------------------------------|
|  UTPPPN       | UETP area                                             |
|               |-------------------------------------------------------|
|  INIPPN       | Initialization area [5,34]                            |
|               |-------------------------------------------------------|
|  ERPSIZ       | Length of entry in Daemon error report table          |
|               |-------------------------------------------------------|
|               | Obsolete                                              |
|               |-------------------------------------------------------|
   NUMLBF       | Default number of large disk buffers                  |
                |-------------------------------------------------------|
                | Offset into DEVUNI for SYSTAT                         |
                |-------------------------------------------------------|
   %LDCSZ       | Size of disk cache, in blocks                         |
                |-------------------------------------------------------|
   %LDRDC       | Monitor cache read calls                              |
                |-------------------------------------------------------|
   %LDRDH       | Monitor cache read hits                               |
                |-------------------------------------------------------|
   %LDWRC       | Monitor cache write calls                             |
                |-------------------------------------------------------|
   %LDWRH       | Monitor cache write hits                              |
                |-------------------------------------------------------|
   %LDHSF       | CSHFND calls                                          |
                |-------------------------------------------------------|





                                    194



                |-------------------------------------------------------|
   %LDHSC       | CSHFND collisions in hash table                       |
                |-------------------------------------------------------|
   %LDHSL       | Length of cache hash table                            |
                |-------------------------------------------------------|
   %LDHST       | Address of cache hash table                           |
                |-------------------------------------------------------|
   %LDCHD       | Address of cache list header                          |
                |-------------------------------------------------------|
                | Offset for spooled file name                          |
                |-------------------------------------------------------|
                | Offset for spooled parameter block pointer            |
                |-------------------------------------------------------|
                | Offset for I/O block number                           |
                |-------------------------------------------------------|
                | Offset to retrieval/ALL blocks                        |
                |-------------------------------------------------------|
                | Offset to NMB for father SFD                          |
                |-------------------------------------------------------|
   UPSPPN       | Area for mailers (UPS) [5,35] PPN for library for     |
                | mailers                                               |
                |-------------------------------------------------------|
                | Address of pointer to first system error block        |
                |-------------------------------------------------------|
   ROODRB       | Number of times we ran out of DRBs                    |
|               |-------------------------------------------------------|
|  FNTPPN       | PPN for font files (FNT) [5,36]                       |
|               |-------------------------------------------------------|
|  DSKSET       | Bit-mask of disk sets recognized by this system       |
|               | (Bit 0=Set 7...Bit 35=Set 36)                         |
|               |-------------------------------------------------------|
|  SYSDET       | Core address of first    | Index in UDB for pointer   |
|               | detached unit            | to next unit in system     |
|               |-------------------------------------------------------|
|  %LDOCS       | Original size of disk cache (see %LDCSZ)              |
|               |-------------------------------------------------------|
|  SWEECT       | Swap read error threshold                             |
|               |-------------------------------------------------------|
|  SWETOT       | Total swap read errors                                |
|               |-------------------------------------------------------|
|  ACTDRB       | Doubly-linked list of active Disk I/O Request Blocks  |
|               +-------------------------------------------------------+

   Note:

   If the right half of SYSPPB = 0, the core grabber starts over  at  the
   beginning of the PPB list.







                                    195



   80  MEMTAB -- VIRTUAL MEMORY PAGE TABLE   80  MEMTAB -- VIRTUAL MEMORY PAGE TABLE

   Description:   Contains one word per page of core.  It is used  during
                  swap/page  requests in conjunction with the UPT to keep
                  track of where pages end up on the swapping  area,  and
                  which page to transmit next.

|                 In multi-section monitors, MEMTAB is in Section 3.

   Defined in:    S.MAC

   Used by:       VMSER
|  
|  See also:      PT2TAB, PAGTAB

   +--------------------------------------------------------+
   | L | G | I |          See below                         |
   +--------------------------------------------------------+

   The first three bits of a MEMTAB  entry  are  flags  to  indicate  the
   following:

   ___       ______    _______   Bit       Symbol    Meaning

   0         MT.LEF    Last entry in fragment chain.
   1         MT.GPB    Return swapping space when I/O done in IP queue.
   2         MT.IPC    IPCF page,,addr of packet+.ICPFI in MEMTAB.
|  
|  3-35                The format of these bits differs for the status of
|                      the page:
|  
|  6-14      MT.JOB    For an IPCF page when the page is in the IP queue,
|                      the job number.  The high-order 3 bits contain the
|                      IPCF header address (remaining 15 bits of address
|                      of IPCF header are stored in PT2TAB).
|  15-35     MT.DAD    For a page that is being transmitted to or from
|                      disk, the disk address.
|  15-35     MT.EVM    For a locked page, the page number of EVM for this
|                      physical page.















                                    196



   81  METABL -- META-CHARACTER TABLE   81  METABL -- META-CHARACTER TABLE

   Description:   One  table  entry  for  each  meta-character  (function
                  character),  specifying  characteristics  and,  in some
                  cases,  address  of  a  special  action   routine   for
                  processing the received character.

                  Indexed by the function code of the meta-character.

                  Uses the same bits as CHTABL.

   Defined in:    SCNSER

   Used by:       SCNSER

   Format:

   Code   Name                        Function
               +--------------------------------------------------------+
               | C|   | C| C| C| C| C| C| C| C| C| C| C| C| C| C|  Disp |
               | H|   | H| H| H| H| H| H| H| H| H| H| H| H| H| H|  addr |
               | S|   | P| 2| E| V| C| F| I| C| C| R| A| F| U| B|   on  |
               | P|   | U| P| P| P| R| I| N| N| R| I| L| I| A| R| RECINT|
               | O|   | N| C| A| O| E| L| V| C| E| A| T| L| E| K|   or  |
               |  |   | C|  | R| S|  | O| L|  | T|  |  |  |  |  | XMTCHR|
               +--------------------------------------------------------+
   4000  ACR   | 1|   | 1| 1|  |  |  |  |  |  | 1|  |  | 1|  | 1|       |
               |--------------------------------------------------------|
   4001  ^U    | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  | 1|  | METDL |
               |--------------------------------------------------------|
   4002  ^W    | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  | 1|  | METDW |
               |--------------------------------------------------------|
   4003  DEL   | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  | METDC |
               |--------------------------------------------------------|
   4004  ^H    | 1|   | 1|  |  |  |  |  |  |  |  |  |  | 1|  |  | METBS |
               |--------------------------------------------------------|
   4005 .TONFC | 1|   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | METNFC|
               |--------------------------------------------------------|
   4006 .TOHPS | 1|   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | METHPS|
               |--------------------------------------------------------|
   4007 .TOFLM | 1|   | 1|  |  |  |  |  |  |  | 1|  |  |  |  |  | METFLM|
|              |--------------------------------------------------------|
|  4010 .TODEM | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  | METDEN|
|       (on)   |  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
|              |--------------------------------------------------------|
|  4011 .TODEM | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  | METDEF|
|       (off)  |  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
|              |--------------------------------------------------------|
|  4012 SETCHP | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  | METCHP|
|              |--------------------------------------------------------|




                                    197



|              |--------------------------------------------------------|
|  4013 ^R     | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  | METRTS|
|       (start)|  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
|              |--------------------------------------------------------|
|  4014 ^R     | 1|   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  | METRTE|
|       (end)  |  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
|              |--------------------------------------------------------|
|  4015 .TOFRM | 1|   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | METFRM|
|              |--------------------------------------------------------|
|  4016 .TOTAB | 1|   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | METTAB|
|              |--------------------------------------------------------|
|  4017 .TOWID | 1|   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | METWID|
|              +--------------------------------------------------------+









































                                    198



   82  MFD -- MASTER FILE DIRECTORY   82  MFD -- MASTER FILE DIRECTORY

   Description:   Disk file which tells location of each UFD  (User  File
                  Directory)  in  a  file  structure.   There  is one MFD
                  included in each file structure.

                  There is one entry in the MFD for  each  UFD  that  has
                  files in the structure.

                  Position of an entry is of no significance.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO

                +-------------------------------------+
                |          Entry for user A           |
                |-------------------------------------|
                |          Entry for user B           |
                |-------------------------------------|
                |                  .                  |
                |                  .                  |
                |                  .                  |
                |-------------------------------------|
                |          Entry for user Z           |
                +-------------------------------------+

   Format of each entry:

                +-------------------------------------+
                |    Project #     |   Programmer #   |
                |-------------------------------------|
                |   SIXBIT/UFD/    |       CFP        |
                +-------------------------------------+

   Notes:

        1.  The MFD is actually the UFD for [1,1].   PPN  [1,1]  is  used
            only for this purpose.

        2.  The CFP (Compressed  File  Pointer)  specifies  the  relative
            supercluster  within  the  structure  where  the  RIB  of the
            corresponding file can be found.

        3.  The first entry in  the  MFD  is  a  pointer  to  itself  (to
            [1,1].UFD).

           Relative      Number of       Relative       Number
   CFP=    Unit #     x  Superclusters + Block #   .    Blocks
           within        per             within    -    per
           STR           Unit            that unit .    Supercluster



                                    199



   The number of clusters in a "supercluster" is determined by:


                  number-clusters-in-structure
                  -----------------------------
                            2(18)


   rounded up  by  1.   Hence,  every  structure  has  fewer  than  2**18
   superclusters,  and  the  CFP  fits  in  18  bits.   The  concept of a
   supercluster is used only in connection with Compressed File Pointers.











































                                    200



   83  NMB -- FILE NAME BLOCK   83  NMB -- FILE NAME BLOCK

   Description:   Used to remember the file name in a project  programmer
                  number  across  all  file structures.  There is one NMB
                  for each open file of each PPN regardless of  how  many
                  versions  of the files are in existence.  This table is
                  linked into the list for each PPN.

   Defined in:    COMMOD

   Used by:       FILIO, FILFND, FILUUO

              +--------------------------------------------------+
   NMBNAM     | File name in SIXBIT                              |
              |--------------------------------------------------|
   NMBPPB *   | Next NMB             |X|X|                       |
              |--------------------------------------------------|
   NMBRNG (3) | Ptr to SFD NMB lst     | Compressed File Pointer | NMBCFP
              |--------------------------------------------------|
   NMBACC *   | First ACC block (6)    | File ext in SIXBIT (2)  | NMBEXT
              |--------------------------------------------------|
   NMBFSN (7) | FSN  |                                           |
              |--------------------------------------------------|
   NMBKNO (4) | Know bits for this file                          |
              |--------------------------------------------------|
   NMBYES (5) | Yes bits for this file                           |
              |--------------------------------------------------|
   NMBCNT     | Use count                                        |
              +--------------------------------------------------+

   Notes:

        1.  If a file  is  being  superseded,  there  are  access  blocks
            corresponding  to each existing version of the file, but only
            one NMB.

        2.  The compressed file pointer in  NMBEXT  is  copied  from  the
            second word of the UFD entry for this file.  Its value is the
            logical super-cluster number  within  the  structure  of  the
            file's RIB (see UFD).

        3.  If this NMB is for an SFD (NMPSFD (bit 34)  set  in  NMBSFD),
            NMBRNG is a pointer to an NMB list of files under the SFD and
            the extension is assumed to be 'SFD'.

        4.  NMBKNO - Bit 36-n set if we know whether or not  file  exists
            in  structure n (can be either way, and NMBYES tells which is
            true).

        5.  NMBYES - Bits 36-n set if file definitely exists in structure
            n.



                                    201



        6.  Access tables are linked into a ring for each file,  starting
            and ending at NMBACC.  All addresses that point to ACC blocks
            are even multiples of 4; the link back to NMBACC is not.   If
            there  are  no  ACC blocks in the ring at some time, the left
            half of NMBACC does not contain  zero,  but  rather  its  own
            address.

        7.  NMBFSN holds the file structure number in bits 0-5.




   83.1  NMBPPB -- Next NMB   83.1  NMBPPB -- Next NMB

   +-------------------------------------------------------+
   |  Addr of next NMB      |x|y|     Reserved             |
   +-------------------------------------------------------+
   0                       15   17                        35

             ____             Byte
   ____      _______   ___________   Bits      Pointer   Description

   0-15                Address of next NMB for this directory (low order
                       2 bits = 0).
             NMPUPT    If this bit is on, NMBPPB is the location of the
                       father SFD for this list of NMBs (only set in the
                       last NMB in the list).
   17        NMPSFU    Bit on in AC, never in core, if the location
                       returned (by UFORSF) is an SFD ACC.  Off if the
                       location is a UFB.



   83.2  NMBACC -- First ACC   83.2  NMBACC -- First ACC

   +-------------------------------------------------------+
   |      NMBACC              |        NMBEXT              |
   +-------------------------------------------------------+
   0                         17                          35

   ____   Word
   _____     ____      ________   Label     Bits      Contents

   NMBACC    0-17      First ACC in access ring with this filename/PPN.
                       If ring is empty, the byte is not 0, instead it
                       points to itself.  In this way no special checking
                       is needed to add or delete access blocks from
                       ring.
   NMBEXT    18-35     Holds the left-justified SIXBIT file extension.





                                    202



   84  NUMTAB -- TABLE OF GETTAB TABLES   84  NUMTAB -- TABLE OF GETTAB TABLES

   Description:   Contains monitor table address and bits  that  indicate
                  whether there may be segment data or process data.

                  This is the table that is referenced by the GETTAB  UUO
                  to pass back the information requested.

   Defined in:    UUOCON

   Used by:       COMMON, UUOCON

   GETTAB Table:  .GTSLF (23)

                Bits*                 GETTAB Table Address
                +-----------------------------------------+
                |                    |       JBTSTS       |
                |-----------------------------------------|
                |                    |       JBTADR       |
                |-----------------------------------------|
                |                    |       JBTPPN       |
                |-----------------------------------------|
                |        "           |         "          |
                +-----------------------------------------+

   Notes:

        1.  ABSTAB (loc 410) in COMMON contains the absolute  address  of
            NUMTAB.

        2.  Bits 0-8 hold the maximum size  of  the  table  if  it  is  a
            regular table.

        3.  Bits 9-11 contain one of the following codes:

            ____  _______            Code  Meaning

            0     Undefined in this monitor.
            1     Index by item type.
            2     Index by job number.
            3     Index by job or segment.
            4     Index by job data in PDB.
            5     Index by negative and positive offsets.











                                    203



   85  PAGTAB -- PAGE TABLE   85  PAGTAB -- PAGE TABLE

   Description:   This table is used to keep  track  of  user  core.   It
                  contains  one  word  for  each  page  of physical core.
                  PAGPTR,  defined  in  COMMON,  contains  the   starting
                  address   for  the  linked  list  of  free  pages.   In
                  addition, each segment in core has its own linked  list
                  of  pages  and is addressed through the EPT at location
                  412.
|  
|                 In multi-section monitors, PAGTAB is in Section 3.

   Defined in:    S.MAC
|  
|  Used by:       APRSER, SYSINI, VMSER
|  
|  See also:      PT2TAB, MEMTAB

|  Physical
|   Page        0 1 2 3 4 5 6 7 8 9       17 18                       35
|               +-------------------------------------------------------+
|     0         |  Page bits     | Job #    |Ptr to next phys pg of list|
|               |-------------------------------------------------------|
      1         |                |                                      |
                |-------------------------------------------------------|
      2         |                |                                      |
                |-------------------------------------------------------|
                                      .    .    .

   Bit definitions:

   ____      _____     _______   Bits      Label     Meaning

                       On if this page is:
   0         FREPAG    not in some job's addressing space.
   1         LOKPHB    contained in a segment that is locked in
                       physically contiguous memory.
   2         LOKEVB    contained in segment that is locked virtually
                       contiguous in the exec addressing space.
   3         LOKIPB    contained in a segment that is locked in place.
   4         NXMBIT    below MEMSIZ but is non-existent.
   5         MONTRB    contained in the monitor.
   6         IPCBIT    owned by IPCF.
   7         TNCSHB    temporarily uncached.

   8         CONTGB    On if this range of pages must be physically
                       contiguous (for DX20 microcode, CI20 disks,...).
|  9-17      PT.JOB    Job # in paging I/O wait for this page.






                                    204



   86  PB -- PATH BLOCK   86  PB -- PATH BLOCK

   Description:   Contains information describing a specific  path  to  a
                  specific  node  on  a CI network, status of the virtual
                  circuit to that node, and a linked list  of  Connection
                  Blocks for connections to applications on that node.

                  Path Blocks are created by KLPSER when a START datagram
                  is received from a previously unknown CI node.

   Defined in:    SCAPRM

   Used by:       KLPSER, MSCCOM, RAXKON, SCASER, SCSUUO

   See also:      CB, PCB, SB

   Symbol       Map
                +-------------------------------------------------------+
   .PBPCB       | Port Control Block address                            |
                |-------------------------------------------------------|
   .PBDPN       | Destination port number (a CI node address)           |
                |-------------------------------------------------------|
   .PBIDX (1)   | Indexes                                               |
                |-------------------------------------------------------|
   .PBVCS (2)   | Status of virtual circuit                             |
                |-------------------------------------------------------|
   .PBFLG (3)   | Flags                                                 |
                |-------------------------------------------------------|
   .PBSST       | Start sequence timer                                  |
                |-------------------------------------------------------|
   .PBTIM       | Time last message received                            |
                |-------------------------------------------------------|
   .PBTWQ       | Forward link for SCA work queue for this Path Block   |
                |-------------------------------------------------------|
   .PBBWQ       | Backward link for SCA work queue for this Path Block  |
                |-------------------------------------------------------|
   .PBCLC       | Total number of locked connections                    |
                |-------------------------------------------------------|
   .PBOBB       | Saved buffer to use in SC.SNM                         |
                |-------------------------------------------------------|
   .PBFCB       | Pointer to first Connection Block                     |
                |-------------------------------------------------------|
   .PBLCB       | Pointer to last Connection Block                      |
                |-------------------------------------------------------|
   .PBDPC       | Destination port characteristics                      |
                |-------------------------------------------------------|
   .PBDCR       | Destination code revision                             |
                |-------------------------------------------------------|
   .PBDPF       | Destination port functionality                        |
                |-------------------------------------------------------|




                                    205



                |-------------------------------------------------------|
   .PBDPS       | Destination port state                                |
                |-------------------------------------------------------|
   .PBCPU       | CPU that owns this Path Block (SMP systems only)      |
                +-------------------------------------------------------+

   Notes:

        1.  The indexes stored in .PBIDX are contained in  the  following
            fields of the word:

            ____   ______  ________            Bits   Symbol  Contents

            0-11   PBPBI   This Path Block index.
            12-23  PBNPI   Next Path Block index.
            25-35  PBSBI   System block index.


        2.  The state of the virtual circuit is stored  in  .PBVCS.   The
            codes stored in the word have the following meanings:

            ____   _______            Code   Meaning

            0      Closed.
            1      Start sent.
            2      Start received.
            3      Opened.


        3.  The flags that are stored in .PBFLG  indicate  the  following
            states:

            ___    ______  _______            Bit    Symbol  Meaning

            0      PB.TMG  Timed message.
            1      PB.OVC  Virtual circuit needs to be opened.
            2      PB.OFL  Node is offline.
            18     PB.NTC  Virtual circuit needs to be closed.
            19     PB.OKO  Virtual circuit is ready to be opened.
            20     PB.WFI  Waiting for new Identification-received 
                           message.













                                    206



   87  PCB -- PORT CONTROL BLOCK   87  PCB -- PORT CONTROL BLOCK

   Description:   Contains queue structures and other data shared by  the
                  CI20  microcode  and  the  CI20 driver in TOPS-10.  The
                  Port Control Block is the interface between a CI20  and
                  the KL10.

                  One PCB is created for each  CI20  detected  by  AUTCON
                  during system initialization.

   Defined in:    KLPPRM

   Used by:       KLPSER

   See also:      CB, PB, SB

   The pointers stored in the beginning of the PCB  are  defined  by  the
   CI20  microcode;  therefore,  they  are  stored as physical addresses.
   Starting at  .PCKCT,  pointers  are  stored  by  software  as  virtual
   addresses.

   Symbol              Map
                +-------------------------------------------------------+
   .PCBDT       | Address of Buffer Descriptor Table (BDT)              |
                |-------------------------------------------------------|
   .PBMQE       | Message queue entry length                            |
                |-------------------------------------------------------|
   .PBDQE       | Datagram queue entry length                           |
                |-------------------------------------------------------|
   .PBRQE       | Reserved queue entry length                           |
                |-------------------------------------------------------|
   .PCCQ3 *     | Command queue 3                                       |
                |-------------------------------------------------------|
   .PCCQ2 *     | Command queue 2                                       |
                |-------------------------------------------------------|
   .PCCQ1 *     | Command queue 1                                       |
                |-------------------------------------------------------|
   .PCCQ0 *     | Command queue 0                                       |
                |-------------------------------------------------------|
   .PCRSQ *     | Response queue                                        |
                |-------------------------------------------------------|
   .PCMFQ *     | Message free queue                                    |
                |-------------------------------------------------------|
   .PCDFQ *     | Datagram free queue                                   |
                |-------------------------------------------------------|
   .PCRFQ *     | Reserved free queue                                   |
                |-------------------------------------------------------|
   .PCRSV       | Reserved for this port                                |
                |-------------------------------------------------------|
   .PCERO (1)   | Error word 0                                          |
                |-------------------------------------------------------|



                                    207



                |-------------------------------------------------------|
   .PCER1       | Error word 1 (API function word)                      |
                |-------------------------------------------------------|
   .PCER2       | Error word 2 (register data)                          |
                |-------------------------------------------------------|
   .PCER3       | Error word 3 (channel logout word 1)                  |
                |-------------------------------------------------------|
   .PCER4       | Error word 4 (channel logout word 2)                  |
                |-------------------------------------------------------|
   .PCPBA       | Physical address of start of PCB                      |
                |-------------------------------------------------------|
   .PCPIA       | Priority interrupt level                              |
                |-------------------------------------------------------|
   .PCIVA       | Interrupt vector address (not used)                   |
                |-------------------------------------------------------|
   .PCCCW       | Port's channel command word                           |
                |-------------------------------------------------------|
   .PCRSP       | Reserved for this port                                |
                |-------------------------------------------------------|
   .PCVPO       | Virtual to physical offset for references into the    |
                | PCB (use XMOVEI AC,.PCxxx/SUB AC,.PCVPO)              |
                |-------------------------------------------------------|
   .PCSTS (2)   | Status flags                                          |
                |-------------------------------------------------------|
   .PCFQC       | Number of datagrams and messages to put back on the   |
                | free queue when KLIPA restarts after SET MEMORY       |
                | OFFLINE command                                       |
                |-------------------------------------------------------|
   .PCONN       | The CI node number for this CPU                       |
                |-------------------------------------------------------|
   .PCSBK       | System block address, indexed by CI node number       |
                |-------------------------------------------------------|
   .PCPBK       | Path Block address, indexed by CI node number         |
                |-------------------------------------------------------|
   .PCRIS (3)   | Request-id status and flags, indexed by CI node no.   |
                |-------------------------------------------------------|
   .PCRIT       | Request-id timer, indexed by CI node number           |
                |-------------------------------------------------------|
   .PCRIN       | Next node for request-id poller                       |
                |-------------------------------------------------------|
   .PCCPU       | CPU that owns this CI (SMP systems only)              |
                |-------------------------------------------------------|
   .PCKCT       | CPU uptime when last command was queued               |
                |-------------------------------------------------------|
   .PCKRT       | CPU uptime when last response was received            |
                |-------------------------------------------------------|
   .PCKAC       | Total number of Keep-Alive Failures                   |
                |-------------------------------------------------------|






                                    208



                |-------------------------------------------------------|
   .PCKCI       | CONI at last Keep-Alive Failure                       |
                |-------------------------------------------------------|
   .PCKAT       | System uptime at last Keep-Alive Failure              |
                |-------------------------------------------------------|
   .PCCSR       | CONI at last interrupt                                |
                |-------------------------------------------------------|
   .PCCRA       | CRAM address                                          |
                |-------------------------------------------------------|
   .PCCDL       | Left half CRAM data                                   |
                |-------------------------------------------------------|
   .PCCDR       | Right half CRAM data                                  |
                |-------------------------------------------------------|
   .PCLG0       | Channel logout word 0                                 |
                |-------------------------------------------------------|
   .PCLG1       | Channel logout word 1                                 |
                |-------------------------------------------------------|
   .PCLG2       | Channel logout word 2                                 |
                |-------------------------------------------------------|
   .PCECW       | Port's CCW at time of error                           |
                |-------------------------------------------------------|
   .PCLKE       | Date and time of last KLIPA error                     |
                |-------------------------------------------------------|
   .PCCTM       | Timer for next periodic read-counters                 |
                |-------------------------------------------------------|
   .PCCJB       | Job number of job that owns the counters              |
                |-------------------------------------------------------|
   .PCCTR       / Statistics counters (date/time when last read),       /
                / followed by variable-length counters data             /
                |-------------------------------------------------------|
   .PCMJB       | Job number of job doing a maintenance function        |
                |-------------------------------------------------------|
   .PCMTI       | Maintenance mode message timer                        |
                |-------------------------------------------------------|
   .PCMFL (4)   | Maintenance mode message flag                         |
                |-------------------------------------------------------|
   .PCMCN       | Buffer name that Close Buffer command is for          |
                |-------------------------------------------------------|
   .PCMCF       | -1 if a Close Buffer response was received for the    |
                | buffer in .PCMCN                                      |
                |-------------------------------------------------------|
   .PCCDB       | Address of simulated CDB for DIAG. UUO                |
                |-------------------------------------------------------|
   .PCULB (5)   / Header of variable-length microcode loader parameter  /
                / block                                                 /
                +-------------------------------------------------------+








                                    209



   The blocks designated by * in the PCB are variable-length queues.  The
   Port Control Block queues are formatted as follows:

   ______    ______    ________   Offset    Symbol    Contents

   0         .PQIWD    Interlock  word.   The  interlock  is   a   simple
                       AOS-style interlock.  This word contains -1 if the
                       queue is available to be manipulated, and  a  zero
                       or  positive  value if the queue is locked against
                       access.  The interlock  word  is  set  and  tested
                       using a AOSx instruction.

   1         .PQFLI    Forward link (FLINK) word.  This word contains the
                       physical memory address of the first entry on that
                       queue.  If the queue  is  empty,  the  FLINK  word
                       contains its own physical memory address.

   2         .PQBLI    Backward link (BLINK) word.   This  word  contains
                       the  physical  memory address of the last entry in
                       the queue.  If the queue is  empty,  the  previous
                       word  (.PQFLI)  contains  its own address, and the
                       contents of this word (.PQBLI) are indeterminate.

   Notes:

        1.  The error word .PCERO contains the following fields  for  the
            error data:

            ____   ______  ________            Bits   Symbol  Contents

            0      EO.CMD  Error occurred while reading a command queue.
            1-2    EOQUE   Command queue number (if bit 0 is set).
            3      EO.RES  Error occurred while building a response.
            4-11   EOMBZ   Must be zero.
            12-35  EOFLI   Forward link of entry that is in error.

        2.  The  status  word  .PCSTS  contains  flags  designating   the
            following states:

            ___        ______ _______            Bit        Symbol Meaning

            0      ST.STP  KLIPA was stopped last second.
            1      ST.MFL  Memory is being set offline.  KLIPA should be
                           shut down and restarted when ST.RES is set.
            2      ST.RES  Restart the KLIPA after SET MEMORY OFFLINE.
            3      ST.MAI  Maintenance mode enabled.
            4      ST.WAB  Wire A is bad.
            5      ST.WBB  Wire B is bad.
            6      ST.DED  KLIPA is dead.
            7      ST.PTH  Last path for loopback packet.
            8      ST.CQA  Queued I/O for this KLIPA.
            9      ST.RDY  KLIPA initialization complete.


                                    210



        3.  The status and flags for the request-id are stored in .PCRIS,
            and have the following meanings:

            ___    ______  _______            Bit    Symbol  Meaning

            0      RI.PTH  Path last ID sent on (off = A, on = B).
            1      RI.PAO  Path A is open.
            2      RI.PBO  Path B is open.
            3      RI.NRA  No response on Path A.
            4      RI.NRB  No response on Path B.
            5      RI.TRY  Request-id attempt (off=first, on=second).
            6      RI.WFR  Waiting for response.
            12-17          Total number times there was no response.

        4.  The maintenance mode message status flag stored in .PCMFL  is
            initialized  to  -1.   The  word contains 0 if the packet was
            received with no errors.  The flag is set to 1 if the  packet
            was received with an error.

        5.  The microcode parameter block (.PCULB) is  a  variable-length
            block  that  contains information used by BOOT when the KLIPA
            microcode is (re)loaded.  This block is defined in S.MAC  and
            is  also  used  for  other devices, such as TX01, TX02, DX20,
            NIA20, and, of course, CI20.






























                                    211



   88  PDB -- PROCESS DATA BLOCK   88  PDB -- PROCESS DATA BLOCK

   Description:   One PDB for each active job.  Set up by CREPDB  routine
                  in DATMAN when the job is initialized.

   Defined in:    COMMON (prototype)
                  DATMAN (modify and find routines)
|  
|  Used by:       APRSER, CLOCK1, COMCON, COMMOD, COMMON, CORE1,  FILFND,
|                 IPCSER, NETSER, QUESER, SCHED1, SEGCON, UUOCON, VMSER

                                                              Conditional
                                                                 Assembly
              +-------------------------------------------------+
   .PDIPT,,   | (1) | ICPT (MCU)     | Quantum run time         |
   .PDQNT     |     |                |                          |
              |-------------------------------------------------|
   .PDCNO     | User's charge number                            | FTCNO
              |-------------------------------------------------|
   .PDKCT     | Kilo-core ticks for the job                     | FTKCT
              |-------------------------------------------------|
   .PDNM1     | First half of user's name in SIXBIT             | FTUNAME
              |-------------------------------------------------|
   .PDNM2     | Second half of user's name in SIXBIT            | FTUNAME
              |-------------------------------------------------|
   .PDRTM     | Job's incremental runtime                       | FTTIME
              |-------------------------------------------------|
   .PDTTM     | Job's total runtime                             | FTTIME
              |-------------------------------------------------|
   .PDTT2     | Additional runtime in fractional jiffies        | FTTIME
              |-------------------------------------------------|
   .PDEBT     | Total EBOX time in jiffies                      | FTKL10
              |                                                 | FTTIME
              |-------------------------------------------------|
   .PDEB2     | Remainder in EBOX counts                        | FTKL10
              |                                                 | FTTIME
              |-------------------------------------------------|
   .PDMBT     | Total MBOX time in jiffies                      | FTKL10
              |                                                 | FTTIME
              |-------------------------------------------------|
   .PDMB2     | Remainder in MBOX counts                        | FTKL10
              |                                                 | FTTIME
              |-------------------------------------------------|
   .PDPGM     | Program to run on Control-C or RUN              | FTSET
              |-------------------------------------------------|
   .PDABS (2) | Addr. break settings| Break address             |
              |-------------------------------------------------|
   .PDCVL (3) | CVPL                | CPPL                      |
              |-------------------------------------------------|
   .PDMVL     | MVPL                | MPPL                      |
              |-------------------------------------------------|



                                    212



              |-------------------------------------------------|
   .PDDVL (4) | Pointer to table of DDBs with log. names        | FTHSLN
              |-------------------------------------------------|
   .PDIPC (5) | First packet        | Send/receive ctrs         | FTIPCF
              |-------------------------------------------------|
   .PDIPA (6) | IPCF statistics                                 | FTIPCF
              |-------------------------------------------------|
   .PDIPQ (7) | Flags and quotas                                | FTIPCF
              |-------------------------------------------------|
   .PDIPL     | Interlock word                                  |
              |-------------------------------------------------|
   .PDPID     | PID for PID-specific receives                   |
              |-------------------------------------------------|
   .PDIPI     | PID of this job's [SYSTEM]INFO                  | FTIPCF
              |-------------------------------------------------|
   .PDIPN     | Last entry in IPCFQ |                           | FTIPCF
              |-------------------------------------------------|
   .PDEQJ     | 0                   | Pointer to job queue      | FTEQDQ
              |-------------------------------------------------|
   .PDQSN     | FILDAE seq. #       | QUEUE. UUO seq. #         |
              |-------------------------------------------------|
   .PDEPA     | 0                   | Addr of packet response   |
              |                     | to pseudo-process msg     |
              |-------------------------------------------------|
   .PDEQQ (8) | Flags               | ENQ quota                 | FTEQDQ
              |-------------------------------------------------|
   .PDJSL (9) | Job search list                                 | FTSTR
              |-------------------------------------------------|
   .PDSCX     | Job's saved context word                        |
              |-------------------------------------------------|
   .PDDIA     | Location of DIAG. DDB for job                   | FTDHIA
              |-------------------------------------------------|
   .PDSTR     | Structure the program came from                 |
              |-------------------------------------------------|
   .PDNAM     | Name of the program                             |
              |-------------------------------------------------|
   .PDDIR     | Directory the program came from                 |
              |-------------------------------------------------|
   .PDSFD     | Path to program                                 |
              |-------------------------------------------------|
   .PDDFL (10)| Word containing user-defined defaults           | FTSET
              |-------------------------------------------------|
   .PDCAP (12)| Maximum privileges allowed                      | FTPRV
              |-------------------------------------------------|
   .PDACS     / Account string                         (8 words)/ FTACCT
              |-------------------------------------------------|
   .PDVKC     | Virtual time-core interval                      | FTKCT
              |                                                 | FTACCT
              |-------------------------------------------------|





                                    213



              |-------------------------------------------------|
   .PDUUC     | Count of UUOs done by this job                  | FTACCT
              |-------------------------------------------------|
   .PDHZF     | HPQ fit flag                                    | FTHPQ
              |-------------------------------------------------|
   .PDPST     | Negative of swapout time                        | FTPSCD
              |-------------------------------------------------|
   .PDOBI (11)| Operator/batch information                      |     
              |-------------------------------------------------|
   .PDSTM     | Time of last reset                              |
              |-------------------------------------------------|
   .PDLBS     | Default size of large disk buffer: LH is set by |
              | UUO, RH is set by command                       |
              |-------------------------------------------------|
   .PDOSL     | Old-style LIB PPN                               |
              |-------------------------------------------------|
   .PDCMN     | AOBJN pointer to user-defined command list      |
              |-------------------------------------------------|
   .PDUNQ     | User-defined command pointers: LH is user       |
              | UNQTAB, RH is address of user command block     |
              |-------------------------------------------------|
   .PDSAC (13)| Address of first context block                  | M.CTX
              |-------------------------------------------------|
   .PDCTC (13)| Address of current context block                | M.CTX
              |-------------------------------------------------|
   .PDCTQ (13)| Context quota word                              | M.CTX
              |-------------------------------------------------|
   .PDCTU (13)| Context use word                                | M.CTX
              |-------------------------------------------------|
   .PDCTX (14)| Context flag word                               |
              |-------------------------------------------------|
   .PDTMI     | Initial value for virtual timer traps           |
              |-------------------------------------------------|
   .PDTMC     | Countdown value for vir timer traps, or old PC  |
              |-------------------------------------------------|
   .PDVRT     | Virtual memory paging rate                      |
              |-------------------------------------------------|
   .PDSCS     | Address of process queue block for SCS. UUO     | M.SCA
              |-------------------------------------------------|
   .PDEJB     | Address of Ethernet job block                   | M.ENET
              |-------------------------------------------------|
   .PDCST (15)/ Reserved for customer definition                /
              +-------------------------------------------------+

   Notes:

        1.  Bit 0 of .PDIPT is the PDMSWP bit that is set to indicate the
            expiration of the MCU (minimal care utilization).






                                    214



        2.  .PDABS contains address break settings:

            ___    ______  _______            Bit    Symbol  Meaning

            0      OC.BCI  Break on instruction fetch.
            1      OC.BCD  Break on data fetch.
            2      OC.BCW  Break on write.
            3      OC.BCM  Break on MUUO reference to address 
                           (software).
            4      OC.ABE  Address break enabled.
            5      OC.FEP  Follow exec paging.
            6      OC.FUP  Follow user paging.
            7      OC.BSU  Break address and conditions set by UUO.

        3.  .PDCVL - Bit 18 is set if the CPPL is a limit rather  than  a
            guideline.

        4.  .PDDVL - Pointer to table of pointers to DDBs owned  by  this
            job  and having logical names, or zero if no such DDBs, or -1
            if too many to fit in the table (4 words = 8 DDBs).

        5.  .PDIPC

            ____   ________            Bits   Contents

            0-17   Pointer to first packet.
            18-26  Packets sent and not received.
            27-35  Packets waiting to be received.

        6.  .PDIPA - Left half contains the count of sends  since  LOGIN.
            Right half contains the count of receives since LOGIN.

        7.  .PDIPQ

            ____   ______  _______            Bits   Symbol  Meaning

            0      IP.DBS  Receiver is disabled.
            1      IP.HBS  Quotas have been set.
            2      IP.DPR  At least 1 PID dropped on RESET.
            3      IP.DPL  At least 1 PID dropped on LOGOUT.
            4      IP.LOK  Interlock bit for this job's IPCF receive 
                           queue.
            9-17   IP.JOB  Job whose IPCF queue has been locked.
            18-26          Send quota.
            27-35          Receive quota.

        8.  .PDEQQ - Bit 0, EQ.HBS, indicates the quota has been set.







                                    215



        9.  .PDJSL - The number of words in the PDB is a function of  the
            maximum  number  of file structures in a search list (.SLMXJ=
            10 (decimal)).  For each file structure there is a 9-bit byte
            plus  an additional two bytes for the fence and stop markers.
            For file structure bytes, the following definitions exist:

            _____   ______   ___            Value   Symbol   Use

            400              Spare bit.
            200     FS.NCR   No-create.
            100     FS.WLK   Software write-lock.
            77               File structure number.

            System search  list  is  maintained  in  COMMOD  starting  at
            location SYSSL and also consists of 9-bit bytes.

            The fence marker has a value 1 greater than the maximum  file
            structure number.  The stop marker has a value 1 greater than
            the fence marker.

       10.  .PDDFL contains the following fields:

            ____   ___________            Bits   Description

            0-8    Default file protection.
            9      Non-zero if default protection was specified.
            10     Non-zero if file daemon specified protection.
            11     Use default file specification on RUN and GET.
            12     Don't ask about detached jobs on LOGIN.
            18-26  File protection from FILDAE.
            27-35  Default number of disk buffers.

       11.  Bits for .PDOBI are:

            ____   ___________            Bits   Description

            0-1    Write to operator values.
            2-4    Operator privilege type.
            10     Batch stream number set.
            12-17  Batch stream number.

       12.  For the values for .PDCAP, see JBTPRV.

       13.  These context words are conditionally assembled depending  on
            the  value  of  M.CTX,  which  causes  CTXSER to be loaded if
            necessary.  This word is usd only by CTXSER.








                                    216



       14.  This context word is always assembled, independant  of  state
            of  M.CTX  and the presence of CTXSER.  .PDCTX contains flags
            and fields used for context creation and  by  the  scheduler.
            In  general,  left  half  bits  are  of  a  transient  nature
            affecting only the current context,  while  right  half  bits
            apply  to  those  operations  which are of a job-wide nature.
            .PDCTX is referenced by CTXSER  and  SCHED1  although  SCHED1
            only reads the state of the scheduler bit (CT.SCDE).

                    ____   ______  _______                    Bits   Symbol  Meaning

                     0      CT.SCD  Scheduler requesting context save.
                     1      CT.ATO  Auto-save in progress.
                     3      CT.TOP  Creating a new top-level context.
                     4      CT.SWT  Switch to an existing context.
                     5      CT.UUO  Context saved with CTX. UUO.
                     6      CT.PRN  Physical device search on RUN UUO.
                     18     CT.LGO  Job is logging out.
                     19     CT.MTJ  Job is migrating.
                     27-35  CT.MFC  Migrate's first context number.

       15.  .PDCST is always at the end of the PDB, and is equivalent  to
            one  or  more  words  reserved  for customer definition.  The
            symbol M.PCST is equivalent to the number of  words  reserved
            here.





























                                    217



   89  PPB -- PROJECT PROGRAMMER NUMBER DATA BLOCK   89  PPB -- PROJECT PROGRAMMER NUMBER DATA BLOCK

   Description:   Contains information pertaining to all files  belonging
                  to  one  PPN.   There  is one PPB for each PPN with any
                  active files; it is linked into a list for the  system,
                  starting  at  SYSPPB,  and  is  also  available through
                  JBTPPB.

   Defined in:    COMMOD

   Used by:       FILFND, FILUUO

                +------------------------------------------------+
   PPBNAM       | Project Number         | Programmer number     |
                |------------------------------------------------|
   PPBSYS       | Next PPB in system     |                       |
                |------------------------------------------------|
   PPBUFB       | First UFB              |                       |
                |------------------------------------------------|
   PPBNMB (1)   | First NMB              |                       | PPBNLG
                |------------------------------------------------|
   PPBCNT       | Use count for the PPB                          |
                |------------------------------------------------|
   PPBKNO (2)   | KNO bits for UFD                               |
                |------------------------------------------------|
   PPBYES (3)   | YES bits for UFD                               |
                |------------------------------------------------|
   PPBLOK       | Bits n+1=1 if UFD for FSN is interlocked       |
                +------------------------------------------------+

   Notes:

        1.  Bit 35 of PPBNMB is the PPPNLG bit; PPN  is  not  logged  in.
            This  bit, when set, indicates the PPN is logged in.  Used to
            flush PPB immediately when last file becomes dormant in PPB.

        2.  PPBKNO - Bit 36-n set if monitor knows whether or not UFD for
            this PPN exists in structure n.

        3.  PPBYES - Bit 36-n is set if the UFD for this  PPN  definitely
            exists in structure n.













                                    218



   90  PTYTAB -- PSEUDO-TERMINAL DDB TABLE   90  PTYTAB -- PSEUDO-TERMINAL DDB TABLE

   Description:   Table of pseudo-terminal  (PTY)  DDBs.   There  is  one
                  entry for each PTY in the system.  (See TTYTAB also.)

   Defined in:    COMMON

   Used by:       PTYSER, SCNSER, SYSINI

                +-------------------------------------+
   PTYTAB:      |                  |   DDB address    | PTY0
                |-------------------------------------|
                |                  |      "    "      | PTY1
                |-------------------------------------|
                |                  |      "    "      | PTY2
                |-------------------------------------|
                /               .  .  .               /
                |-------------------------------------|
                |                  |   DDB address    | PTYn
                +-------------------------------------+


































                                    219



   91  PT2TAB -- PAGE SECTION NUMBERS   91  PT2TAB -- PAGE SECTION NUMBERS

   Description:   Used to keep track of user core,  this  table  contains
                  one  word  for  each page of physical core.  Indexed by
                  page number, this table is complementary to PAGTAB.

   Defined in:    S.MAC
|  
|  Used By:       APRSER, SYSINI, VMSER
|  
|  See also:      PAGTAB, MEMTAB

   Physical
    Page

           +-------------------------------------------------------+
      0    | | L | Virtual section no.   | Backward link addr      |
           |-------------------------------------------------------|
      1    | | L | Virtual section no.   | Backward link addr      |
           |-------------------------------------------------------|
      2    | | L | Virtual section no.   | Backward link addr      |
           |-------------------------------------------------------|
                                 .    .    .

   ____      ______    _______   Bits      Symbol    Meaning

|  3-17      P2.VPN    Virtual page number for swapout (see below).
|  1         P2.LIP    Lock In Progress (page to be returned to LOKCON,
|                      not to the free list).
|  2         P2.TRN    Page in transit (job # in MT.JOB in MEMTAB).
|  18-35     P2.BLK    Backward link to previous page.
|  
   P2.VPN contains the next virtual page number for a swap request.   For
   a  paging queue request, this field stores the virtual page number for
   this page for job pages.  For IPCF  pages,  this  field  contains  the
   low-order  15  bits of the address of the IPCF queue header.  The size
   of the field is defined by the symbol P2.SPN, which has a value of  15
   (decimal).
|  
   ____      ______    _______|  Bits      Symbol    Meaning
|  
|  4-8       P2.VSN    Section number.
|  9-17      P2.RPN    Section-relative page number.











                                    220



   92  QBITS -- WAIT STATE CODE REQUEUE TABLE   92  QBITS -- WAIT STATE CODE REQUEUE TABLE

   Description:   Specifies a requeue dispatch  address  and  a  transfer
                  table address for requeueing a job as a function of its
                  wait state code.  There is  one  entry  for  each  wait
                  state code, and the value of the wait state code is the
                  index factor of the table.  The wait state code is  the
                  queue  number,  offset  by  the first sharable resource
                  code.

   Defined in:    SCHED1

   Used by:       SCHED1

   See also:      JBTSTS

      
         Wait     Dispatch          Transfer Table
         State    Address           Address

                +------------------------------------+
            0   | QRNT            | QRNW             |
                |------------------------------------|
            1   | QWST            | QWSW  (-1)       |
                |------------------------------------|
            2   | QTST            | QTSW             |
                |------------------------------------|
            3   | QDST            | QDSW  (-1)       |
                |------------------------------------|
            4   | QPST            | QPSW  (-1)       |
                |------------------------------------|
            5   | QAUT            | QAUW  (-1)       |
                |------------------------------------|
            6   | QDAT            | QDAW  (-1)       |
                |------------------------------------|
            7   | QCBT            | QCBW  (-1)       |
                |------------------------------------|
           10   | QDTT            | QDTW  (-1)       |
                |------------------------------------|
           11   | QIPT            | QIPW  (-1)       |
                |------------------------------------|
           12   | QCXT            | QCXW  (-1)       |
                |------------------------------------|
           13   | QDCT            | QDCW  (-1)       |
                |------------------------------------|
           14   | QCAT            | QCAW  (-1)       |
                |------------------------------------|
           15   | QMMT            | QMMW             |
                |------------------------------------|
           16   | QEVT            | QEVW             |
                |------------------------------------|



                                    221



                |------------------------------------|
           17   | QEQT            | QEQW             |
                |------------------------------------|
           20   | QMCT            | QMCW  (-1)       |
                |------------------------------------|
           21   | QIOWT           | QIOWW (-1)       | 
                |------------------------------------|
           22   | QTIOWT          | QTIOWW           |
                |------------------------------------|
           23   | QDIOWT          | QDIOWW (-1)      |
                |------------------------------------|
           24   | QPIOWT          | QPIOWW (-1)      |
                |------------------------------------|
           25   | QPQIOT          | QPQIOW (-1)      |
                |------------------------------------|
           26   | QSLPT           | QSLPW            |
                |------------------------------------|
           27   | QEWT            | QEWW             |
                |------------------------------------|
           30   | QNAPT           | QNAPW  (-1)      |
                |------------------------------------|
           31   | QNULT           | QNULW            |
                |------------------------------------|
           32   | QJDCT           | QJDCW            |
                |------------------------------------|
           33   | QSTOPT          | QSTOPW           |
                +------------------------------------+

   Notes:

   A transfer table address of -1 implies that the code at  the  dispatch
   address  only  modifies  the  wait  state  code, and no physical queue
   transfer takes place (that is, a short term state change).





















                                    222



   93  QUEUE TRANSFER TABLE   93  QUEUE TRANSFER TABLE

   Description:   Contains input parameters for Queue  Transfer  routine.
                  There  is  one  such  table  for each different type of
                  queue transfer.

   Defined in:    SCHED1

   +-------------------------------------+
   |      Place       |     Function     |
   |-------------------------------------|
   |      Quant       |       Dest       |
   +-------------------------------------+

   Notes:

   Place>0        Transfer to beginning of destination queues.

   Place<0        Transfer to end of destination queue.

   Function       is the address of the QXFER routine  to  be  used.   It
             defines  the  type  of  transfer.   There are three possible
             values:

             1.  QFIX - Destination queue specified in this table.

             2.  QLINK - Destination queue is a function of source queue.

             3.  QJSIZ - Destination queue is a function of job size.

   Dest           specifies the destination queue.

             1.  If Function is QFIX, Dest is the destination queue
                 number.

             2.  If Function is QLINK, Dest is the address of a Job
                 Size-Queues Progression Table that specifies destination
                 queue as a function of source queue.

             3.  If Function is QJSIZ, Dest is the address of a
                 Job-Size-Queue Table which specifies destination queue
                 as a function of job size.












                                    223



   Quant          specifies the change to the job's quantum run  time  as
             follows:

             If Quant<0, no change to quantum runtime.

             If Quant>0, reset the quantum run time as follows:

             1.  If Function is QFIX, set quantum run time to the value
                 of Quant.

             2.  If Function is QLINK or QJSIZ, Quant is the address of a
                 Quantum Time Table, which has entries corresponding to
                 the entries in the table used to determine the
                 destination queue.  The entry in the same position as
                 the selected destination queue is used to reset the
                 quantum run time.

             See BQFIX and following in SCHED1.




































                                    224



   94  QUEUE TABLE FOR JOB SCANNING   94  QUEUE TABLE FOR JOB SCANNING

   Description:   Determines manner in which job queues  are  scanned  by
                  routine  QSCAN  in SCHED1.  There is one entry for each
                  queue to be considered, and entries are  in  the  order
                  that the corresponding queues are to be considered.

   Defined in:    COMMON

   Used by:       SCHED1

                +-------------------------------------+
                | Queue #          | Scan code        |
                |-------------------------------------|
                |        "         |        "         |
                |-------------------------------------|
                |        "         |        "         |
                |-------------------------------------|
                |        "         |        "         |
                |-------------------------------------|
                |                  0                  |
                +-------------------------------------+

   The Scan Code is the address of a  scanning  routine  in  QSCAN.   The
   routines are:

   _______   ______   Routine   Scans:

    QFOR     Whole queue forward, first in-core then out-core.
    QBAK     Whole queue backward, first out-core then in-core.
    IQFOR    In-core queue forward.
    IQBAK    In-core queue backward.
    IQFOR1   In-core queue for first member.
    IQBAK1   In-core queue backward (all but first member).
    OQFOR    Out-core queue forward.
    OQBAK    Out-core queue backward.
    OQFOR1   Out-core queue for first member.
    OQBAK1   Out-core queue backward (all but first member).
    SQFOR    Out-core subqueues (PQ2 class swap-in scan).
    BGFOR    Out-core background batch subqueue (PQ2 class swap-in).
    ISSFOR   In-core subqueues (PQ2 class scheduling scan).
    IBBFOR   In-core background batch subqueue (PQ2 class scheduling).
    OSSFOR   Out-core subqueues (PQ2 class lost-time scan).
    IRRFOR   Just swapped in queue, then QP2 in-core queue.
    IGFOR    Just swapped in queue and jobs waiting for high segment.
    OLFOR    Background batch, B.B.  JIL, regular output queue, PQ2
             in-core.

   Queues are scanned, in specified manner, in the order in  which  their
   entries  appear  in  the table, and a zero entry terminates the table.
   See SSCAN, SSCAN1, ISCAN, and OSCAN, in COMMON.



                                    225



   95  QQSTAB -- QUANTUM TIME QUEUE TABLE   95  QQSTAB -- QUANTUM TIME QUEUE TABLE

   Description:   Specifies value to which a job's quantum  run  time  is
                  reset on certain types of queue transfers.

   Defined in:    COMMON

   Used by:       SCHED1

                +-------------------------------------+
                | Quantum time 1                      |
                |-------------------------------------|
                | Quantum time 2                      |
                |-------------------------------------|
                |                  -                  |
                |-------------------------------------|
                |                  -                  |
                |-------------------------------------|
                |                  -                  |
                |-------------------------------------|
                |                  0                  |
                +-------------------------------------+

   Quantum time is in jiffies (power line frequency).

   A 0 entry indicates end of table.




























                                    226



   96  QTTAB -- QUEUE PROGRESSION QUEUE TABLE   96  QTTAB -- QUEUE PROGRESSION QUEUE TABLE

   Description:   Specifies the queue for a job  to  be  put  into  as  a
                  function of the queue it is in.

                  A Queue Progression Table is specified in the  Transfer
                  Table   for   link-type  queue  transfers.   (Refer  to
                  Transfer Table.)

   Defined in:    COMMON

   Used by:       SCHED1

                +-------------------------------------------------------+
                | Source queue 1            | Destination queue 1       |
                |-------------------------------------------------------|
                | Source queue 1            | Destination queue 2       |
                |-------------------------------------------------------|
                |             -             |             -             |
                |-------------------------------------------------------|
                |             -             |             -             |
                |-------------------------------------------------------|
                |             -             |             -             |
                |-------------------------------------------------------|
                |             0             |             0             |
                +-------------------------------------------------------+

   Each entry is a queue number.

   A 0,,0 entry indicates end of table.
























                                    227



   97  REQTAB -- SHARABLE DEVICE REQUEST TABLE   97  REQTAB -- SHARABLE DEVICE REQUEST TABLE

   Description:   Tells how  many  jobs  require  use  of  each  sharable
                  device.  Each entry is referenced by its own label.

                  An entry contains -1 if no job wants that resource.  If
                  a  job  uses the device, the entry is incremented to 0.
                  Each additional job that asks for the device  while  it
                  is  in  use  increments  the  entry by one, and must be
                  requeued to the corresponding  sharable  resource  wait
                  queue.

   Defined in:    SCHED1

   Used by:       CLOCK1, SYSINI

   See also:      AVALTB

   The words in REQTAB are stored in the following order.  However,  some
   of the words may not be included in all systems.

   ____      ______    ________   Word      Symbol    Resource

   0         AUREQ     Alter disk UFD quota.
   1         DAREQ     Disk storage allocation.
   2         CBREQ     Disk core block scan.
   3         DTREQ     DECtape control.
   4         IPREQ     IPCF interlock.
   5         CXREQ     Context save.
   7         DCREQ     Data control (magtape and DECtape).
   10        CAREQ     Semi-permanent core allocation.
   11        MMREQ     Memory management.
   12        EVREQ     Exec virtual memory.
   13        EQREQ     ENQ/DEQ.
   14        MCREQ     Monitor I/O disk cache.

   Notes:

        1.  Entries  in  this  table  may  be  tested   and   incremented
            simultaneously, as follows:

                   AOSE XXREQ
                   PUSHJ P,     XXWAIT
                     -
                     -
                     -

            If the resource was  available,  the  routine  may  continue.
            Otherwise, the job must be requeued to wait for it.





                                    228



        2.  Table AVALTB has entries  corresponding  to  the  entries  in
            REQTAB.

        3.  The AVALTB entries are built by the  conditionally  assembled
            RWAITS  MACRO  entries in S.MAC; therefore, some of the above
            listed entries are not present in all systems.
















































                                    229



   98  RIB -- RETRIEVAL INFORMATION BLOCK   98  RIB -- RETRIEVAL INFORMATION BLOCK

   Description:   Disk block containing descriptive information  about  a
                  file.  There is one prime RIB for each file.  If a file
                  needs more retrieval pointers than can fit in a  single
                  RIB, a second (extended) RIB block is allocated to hold
                  the additional pointers (and so on).  The last block(s)
                  of  a file is (are) a copy of the prime RIB, called the
                  spare RIB.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO, ONCMOD, REFSTR

                +-------------------------------------------------------+
   RIBFIR       | -Number of retrieval ptrs| First pointer address      |
                |-------------------------------------------------------|
   RIBPPN       | Project Number           | Programmer number          |
                |-------------------------------------------------------|
   RIBNAM       | File name in SIXBIT                                   |
                |-------------------------------------------------------|
   RIBEXT *     | File extension           | Access date                |
                |-------------------------------------------------------|
   RIBPRV *     | Access     | Mode | Creation time | Creation date     |
                |-------------------------------------------------------|
   RIBSIZ       | File length in words                                  |
                |-------------------------------------------------------|
   RIBVER       | Version number (as in .JBVER)                         |
                |-------------------------------------------------------|
   RIBSPL       | Possible user file name when spooled                  |
                |-------------------------------------------------------|
   RIBEST       | Estimated length of file in blocks                    |
                |-------------------------------------------------------|
   RIBALC       | Number of blocks allocated for file (including RIBs)  |
                |-------------------------------------------------------|
   RIBPOS       | Logical block number in structure                     |
                |-------------------------------------------------------|
   RIBFT1       | Word for future use by DEC                            |
                |-------------------------------------------------------|
   RIBNCA       | Non-privileged word for customer to define            |
                |-------------------------------------------------------|
   RIBMTA       | Tape label if file on magtape                         |
                |-------------------------------------------------------|
   RIBDEV       | Name of structure containing file                     |
                |-------------------------------------------------------|
   RIBSTS *     | Status bits                                           |
                |-------------------------------------------------------|
   RIBELB *     | Logical block number where bad region begins          |
                |-------------------------------------------------------|
   RIBEUN       | Error unit number in     | Number of bad blocks in    |
                | structure                | region                     |
                |-------------------------------------------------------|


                                    230



                |-------------------------------------------------------|
   RIBQTF *     | FCFS quota for this PPN in this structure (UFD only)  |
                |-------------------------------------------------------|
   RIBQTO *     | Logged out quota this PPN in this STR (UFD only)      |
                |-------------------------------------------------------|
   RIBQTR *     | Reserved quota this PPN in this STR (UFD only)        |
                |-------------------------------------------------------|
   RIBUSD *     | No. of blocks used when job was logged out (UFD only) |
                |-------------------------------------------------------|
   RIBAUT       | Author PPN writing the file                           |
                |-------------------------------------------------------|
   RIBNXT       | Next STR for this file                                |
                |-------------------------------------------------------|
   RIBPRD       | Previous STR for this file                            |
                |-------------------------------------------------------|
   RIBPCA       | Privileged argument for customer use                  |
                |-------------------------------------------------------|
   RIBUFD       | Blk # in STR of UFD Data Block with ptr to this RIB   |
                |-------------------------------------------------------|
   RIBFLR       | Relative block number of 1st block in RIB             |
                |-------------------------------------------------------|
   RIBXRA *     | Address of next RIB in chain                          |
                |-------------------------------------------------------|
   RIBTIM       | Creation date and time in new format                  |
                |-------------------------------------------------------|
   RIBLAD       | Last accounting date (UFD only)                       |
                |-------------------------------------------------------|
   RIBDED       | Directory expiration date (UFD only)                  |
                |-------------------------------------------------------|
   RIBACT       | AOBJN pointer for accounting string                   |
                |-------------------------------------------------------|
                | Retrieval Pointers (details on following pages)       |
                |-------------------------------------------------------|
   RIBACS       | Account string (pointer in RIBACT)                    |
                |-------------------------------------------------------|
   RIBCOD       | 0                        | 777777                     |
                |-------------------------------------------------------|
   RIBSLF       | 0                        | Self block number          |
                +-------------------------------------------------------+















                                    231



   98.1  RIBEXT -- File Extension   98.1  RIBEXT -- File Extension

   +-------------------------------------------------------+
   |      Extension          |       |    Access Date      |
   +-------------------------------------------------------+
    0                      17 18   23 24                 35

   ____      ________   Bits      Contents

   0-17      File extension in SIXBIT.
   24-35     Last access date.



   98.2  RIBPRV -- Access Privilege   98.2  RIBPRV -- Access Privilege

   +-------------------------------------------------------+
   |  Access      |Mode | Creation time  |  Creation date  |
   +-------------------------------------------------------+
    0              8     12               23             35

   ____      ________   Bits      Contents

   0-8       Access code.
   9-12      Data mode of file.
   13-23     File creation time.
   24-35     Low-order twelve bits of file creation date.

   Access Codes:

   ____      _______   Bits      Meaning

   0-2       Apply to any job with matching programmer number.
   3-5       Apply to any job with matching project number.
   6-8       Apply to all other jobs.

   Privilege Codes for User Files:

   ____      _______ __________   Code      Highest Privileges

   7         None (but owner may read).
   6         Execute-only (but owner may read).
   5         Read.
   4         Append (allocate, deallocate).
   3         Update.
   2         Write (supersede, truncate).
   1         Rename (change attributes).
   0         Change privileges.






                                    232



   Privilege Codes for Directories:

   ____      _________   Code      Privilege

   4         Allow LOOKUPs in this directory.
   2         Allow creates.
   1         Allow directory to be read as a data file.

   Any combination of these bits may be set.

   Notes:

        1.  RIBPRV is maintained  in  ACYPRV  while  the  file  is  being
            accessed.

        2.  If the monitor is assembled for File Daemon,  and  FILDAE  is
            running,  an  owner  privilege  greater  than  or  equal to 4
            invokes FILDAE, giving extended access protection modes.  See
                _______ _______ _____ ______            the TOPS-10 Monitor Calls Manual for details.



   98.3  RIBSTS -- Status Word   98.3  RIBSTS -- Status Word

   +-------------------------------------+
   |             Status bits             |
   +-------------------------------------+

   Left half bits apply to the UFD, right half bits apply to this file.

   ____      _____     _______   Bits      Label     Meaning

   0         RIPLOG    (LH only) User logged in.
   1         RIPCHG    Set to 1 by FILSER if any file is written or
                       renamed.
   9,27      RIPSCE    File has had checksum error.
   7,24      RIPABU    Always BACKUP this UFD/file.
   10,28     RIPHWE    File has had hard write error.
   11,29     RIPHRE    File has had hard read error.
   14,32     RIPBFA    File found bad by FAILSAFE during restore
                       operation.
   15,33     RIPCHR    File closed after crash.
   17,35     RIPBDA    File found bad by assessment CUSP.
   18        RIPDIR    This is a directory.
   19        RIPNDL    This file cannot be deleted by any user.
   20        RIPDMP    Dump file not yet processed by CRSCPY.
   21        RIPNFS    Not to be dumped by FAILSAFE.
   22        RIPABC    Always bad checksum (SWAP.SYS, SAT.SYS).
   23        RIPCBS    Compress bit set.
   25        RIPNQC    This file is not checked for quota.
   31        RIPPAL    Preallocated file.
   32        RIPRMS    This is an RMS file.


                                    233



   98.4  RIBELB -- Data Error Location   98.4  RIBELB -- Data Error Location

   +-------------------------------------------------------+
   |  Error bits  |      LBN where bad region starts       |
   +-------------------------------------------------------+

   Bits 0 through 8 give the type of error that occurred.  Bits 9 through
   35 give the logical block number on the unit where the error occurred.

   ___       _______   Bit       Meaning

   3         Error other than listed below.
   4         Data error (parity or ECC hard).
   5         Search or header compare error.



   98.5  File-Specific Definitions   98.5  File-Specific Definitions

   The following words in the RIB are defined differently for file header
   blocks.  The symbols for the UFD word and the file header word are:

   ___       ____      ________ ___ ____ ______   UFD       File      Contents for File Header

   RIBQTF    .RBTYP    File type and flags.
   RIBQTO    .RBBSZ    Byte sizes.
   RIBQTR    .RBRSZ    Record and block sizes.
   RIBUSD    .RBFFB    FFB and ACW fields.

   The file header words  are  each  described  in  more  detail  in  the
   following sections.



   98.5.1  .RBTYP -- File Type   98.5.1  .RBTYP -- File Type - .RBTYP contains the following:

   ____      ______    _______   Bits      Symbol    Meaning

   0         RB.DEC    File formatted by DIGITAL.
   1         RB.RMS    RMS-10 formatted file.
   2         RB.MCY    MACY11 format.
   3         RB.CTG    File is contiguously allocated.
   4         RB.WSB    Records do not cross section boundaries.
   5-14                Reserved for use by DIGITAL.
   15-17     RB.CRY    File is encrypted (field contains code indicating
                       the type of encryption algorithm).
   18-23     RB.DTY    File data type (codes listed below).







                                    234



                       ____  ______  _______                       Code  Symbol  Meaning

                       0     .RBDUN  Undefined (none specified).
                       1     .RBDAS  ASCII character data.
                       2     .RBDBI  Binary (image) data.
                       60-77         Reserved for customer definition.

   24-29     RB.DTO    Data OTS type (codes listed below).

                       ____  ______  _______                       Code  Symbol  Meaning

                       0     .RBOUN  Undefined (none specified).
                       1     .RBOCO  COBOL.
                       2     .RBOFO  FORTRAN.
                       3     .RBOMS  Mail file (MS program).
                       60-77         Reserved for customer definition.

   30-35     RB.DCC    Data carriage-control formatting (codes listed
                       below).

                       ____  ______  _______                       Code  Symbol  Meaning

                       0     RB.CUN  Undefined (none specified).
                       1     RB.CFO  FORTRAN carriage control.
                       2     RB.CAS  ANSI space carriage control.
                       60-77         Reserved for customer definition.



   98.5.2  .RBBSZ -- Byte Sizes   98.5.2  .RBBSZ -- Byte Sizes - .RBBSZ contains the following:

   ____      ______    _______   Bits      Symbol    Meaning

   0-7       RB.BSZ    Logical data byte size.
   8-15      RB.FSZ    Physical data frame size.
   16-23     RB.HSZ    Fixed header size.
   24-39     RB.RFM    Record format (for variable-length records (codes
                       are listed below).
















                                    235



                       ____  ______  _______                       Code  Symbol  Meaning

                       0     .RBRUN  Undefined (no specified record
                                     structure).
                       1     .RBRFX  Fixed-length records.
                       2     .RBRVR  Variable-length records.
                       3     .RBRVF  Variable-length records with
                                     fixed-length header.
                       4     .RBRSP  Spanned records (ANSI labelled
                                     tapes).
                       60-77         Reserved for customer definition.

   30-35     RB.RFO    Record organization (codes are listed below).

                       ____  ______  _______                       Code  Symbol  Meaning

                       0     .RBRSQ  Sequential records.
                       1     .RBRRL  Relative records.
                       2     .RBRID  Indexed records.
                       3     .RBRHS  Hashed records.
                       60-77         Reserved for customer definition.



   98.5.3  .RBRSZ -- Record Sizes   98.5.3  .RBRSZ -- Record Sizes - .RBRSZ contains:

        The left half (RB.RSZ) specifies the record size, in bytes.

        The right half (RB.BLS) specifies the block size, in bytes.



   98.5.4  .RBFFD -- FFB and ACW   98.5.4  .RBFFD -- FFB and ACW - .RBFFB contains:

        The left half (RB.FFB) specifies the first free byte  within  the
        last block of the file.

        The right half (RB.ACW) is the application-specific field.
















                                    236



   98.6  RIBXRA -- Next RIB   98.6  RIBXRA -- Next RIB

   (Same format as DEVRIB)

             ____             Byte
   ____      _______   ________   Bits      Pointer   Contents

   0                   Set to 1.
   1-8       DEYRBC    Number of RIB (first extended RIB is 1, and so
                       forth).
   9-12      DEYRBU    Logical unit on which extended RIB exists.
   13-35     DEYRPA    Cluster address on unit of extended RIB.



   98.7  Retrieval Pointer Format   98.7  Retrieval Pointer Format

   +-------------------------------------------------------+
   |  Cluster count  |     Checksum     |   Cluster addr   |
   +-------------------------------------------------------+

   Widths of these fields are defined symbolically, and may be  different
   for  each  file  structure.  Byte pointer is defined in the HOM block,
   kept in Structure Data Block while the structure is mounted.

   _____               ____ _______   Field               Byte Pointer

   Cluster Count       STYCNP
   Checksum            STYCKP
   Cluster Address     STYCLP (23 bits maximum)

   If cluster count = 0, the word actually is one of the following:

         o  Pointer to new unit, if bit 18 = 1.  Bits 19-35 specify
            logical number within file structure.

         o  EOF flag, if whole word is zero.

         o  Cluster count is number of clusters in group.















                                    237



   99  SAB -- STORAGE ALLOCATION BLOCK   99  SAB -- STORAGE ALLOCATION BLOCK

   Description:   Table describing allocation of clusters of blocks for a
                  file structure.

                  Each allocation bit represents a corresponding  cluster
                  of physical blocks within the structure.

                  (See also SAT.SYS and SPT.)

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, ONCMOD, REFSTR

            +----------------------------------------------------+
   SABRNG   | Core address of next   | No free clusters          | SABTAL
            | SAB for unit           | in this SAT               |
            |----------------------------------------------------|
   SABSCN   | No words in SAT buffer | Address to start scan for |
            |                        | free clusters             |
            |----------------------------------------------------|
   SABNDX * | A  | B  | NDX     | First cluster                  | SABCLA
            |    |    |         |                                | SABFIR
            |----------------------------------------------------|
   SABHOL   | Number of blocks in largest hole                   |
            |----------------------------------------------------|
   SABBIT   | One data block of SAT.SYS                          |
            +----------------------------------------------------+

   * Details on following page.

   SABNDX -- NDX and CLA

   +-------------------------------------------------------+
   |  A   |  B   |       NDX       |     First cluster     |
   +-------------------------------------------------------+
    0        1     2             12  13                  35

   ____           ____   Word           Mask
   _____   ____   ______  ________   Label   Bits   Symbol  Contents

   SABFIR  0      SAPDIF  Set if table in core different from disk.
   SABFIR  1      SAPBAD  Set if SAT block is on a bad block in disk.
   SABNDX  2-12   SAYNDX  Index value for SPT entry representing this
                          SAT.
   SABCLA  13-35  SAYCLA  Cluster address within unit of first cluster
                          represented in this SAT.







                                    238



   Notes:

        1.  The NDX and CLA fields are related by the formula.

                             Number
                       CLA = Cluster          x      (NDX)
                             per SAT

        2.  Bits 2-35 are set -1 when the file structure  is  created  to
            force SAT to be read into SAB.

        3.  Under KL-paging, the SAT is usually in Section 7.










































                                    239



   100  SAT.SYS -- CLUSTER ALLOCATION FILE   100  SAT.SYS -- CLUSTER ALLOCATION FILE

   Description:   Disk file describing the allocation of all clusters  of
                  blocks on the file structure.

                  Contains  one  bit  for  each  cluster  of   the   file
                  structure.

                  Bits are in the same order as the clusters  which  they
                  represent.

                 +------------------------------------------------------+
   Cluster 0-35  | One bit for each cluster (clusters 0 through 35)     |
                 |------------------------------------------------------|
          36-71  | Clusters 36 through 71                               |
                 |------------------------------------------------------|
        .  .  .  | And so forth...                                      |
                 +------------------------------------------------------+

   Notes:

        1.  SAT blocks are always on the same unit as the  clusters  that
            they represent.

        2.  If more than one SAT block is needed for  a  single  physical
            unit,  each  block  is  near the clusters that it represents.
            Hence, only the first block in  each  group  (1  cluster)  of
            SAT.SYS contains data.

        3.  Programs should not look at bits corresponding to nonexistent
            clusters.  They may or may not be set.  (Function of hardware
            sector length.)

        4.  Each SAT block has  a  corresponding  entry  in  the  Storage
            Allocation Pointer Table (SPT) for that unit.

        5.  The unused bits in the final word of each SAT must be set  to
            1,  as  the  monitor depends on this condition when searching
            for holes.















                                    240



   101  SB -- SYSTEM BLOCK   101  SB -- SYSTEM BLOCK

   Description:   Contains information describing a specific node in  the
                  CI network.  System blocks are created by KLPSER when a
                  START datagram is received from a previously unknown CI
                  node.

   Defined in:    SCAPRM

   Used by:       KLPSER, MSCCOM, RAXKON, SCASER, SCSUUO

   See also:      CB, PB, PCB

   Symbol       Map
                +-------------------------------------------------------+
   .SBDPN       | Destination port number (CI node number)              |
                |-------------------------------------------------------|
   .SBIDX       | This system's System Block index                      |
                |-------------------------------------------------------|
   .SBPIN       | Index of first Path Block,,no. of Path Blocks         |
                |-------------------------------------------------------|
   .SBDSA       / Destination system address                   (2 words)/
                |-------------------------------------------------------|
   .SBMMS       | Maximum message and datagram length values            |
                |-------------------------------------------------------|
   .SBDST       | Destination software type                             |
                |-------------------------------------------------------|
   .SBDSV       | Destination software version                          |
                |-------------------------------------------------------|
   .SBDSE       / Destination software edit number             (2 words)/
                |-------------------------------------------------------|
   .SBDHT       | Destination hardware type                             |
                |-------------------------------------------------------|
   .SBDHV       / Destination hardware version                 (3 words)/
                |-------------------------------------------------------|
   .SBNNM       / Destination node name                        (2 words)/
                |-------------------------------------------------------|
   .SBDTD       / Destination time of day from Start Packet    (2 words)/
                +-------------------------------------------------------+

   The last portion of the System Block (from .SBDSA to .SBDTD)  is  used
   to store the BLT data from the Start Datagram.












                                    241



   102  SCHEDULER SCAN TABLES   102  SCHEDULER SCAN TABLES

   Description:   Used by the system scheduler when selecting  a  job  to
                  run.

   Defined in:    COMMON

   Used by:       SCHED1

   See also:      Queue Transfer Table

   SSCAN -- Used by policy CPU for selecting a job to run:

              +--------------------------------------+
   SSCAN      |      -HPQn       |     IQFOR         |
              |      -HPQ1       |     IQFOR         |
              |      -PQ1        |     IQFOR         |
              |      -PQ2        |     IRRFOR(RR)    | 
              |      -PQ2        |     ISSFOR(class) |
              |      -PQ2        |     IBBFOR(class) |
              |                  |                   |
              +--------------------------------------+

   SSCAN1 -- Used by second processor for selecting a job to run:

              +--------------------------------------+
   SSCAN1     |      -HPQn       |     IQFOR         |
              |      -HPQ1       |     IQFOR         |
              |      -PQ2        |     IRRFOR(RR)    | 
              |      -PQ2        |     ISSFOR(class) |
              |      -PQ1        |     IQFOR         |
              |      -PQ2        |     IBBFOR(class) |
              |                  |                   |
              +--------------------------------------+

   SQSCAN -- Used by SQFOR code:

                Subqueue #        Ptrs to Quota Left
              +-------------------------------------+
   SQSCAN     |       -SQ0       |     CLSQTA       |
              |       -SQ1       |     CLSQTA+1     |
              |       -SQ2       |     CLSQTA+2     |
              |                  |                  |
              |       -SQn       |     CLSQTA+n     |
              +-------------------------------------+

   SQFOR scans subqueues forward according to SQSCAN table if RRFLAG = 0,
   (count  of  classes with non-zero quotas), otherwise it scans PQ2 with
   QFOR routine.





                                    242



   DCSCAN  is  used  by  the  scheduler  for  selecting  jobs  for   IPCT
   decrementing.   This  table  is not processed by QSCAN but by specific
   code in the IPCT maintenance routines.

              +--------------------------------+
   DCSCAN     |                           -EWQ |
              |--------------------------------|
              |                          -SLPQ |
              |--------------------------------|
              |                           -PQ2 |
              |--------------------------------|
              |                           -PQ1 |
              |--------------------------------|
              |                          -HPQn |
              +--------------------------------+

   Notes:

   The items flagged by  (RR)  are  used  in  a  system  built  with  the
   round-robin scheduler (FTNSCHED=0).  Items flagged by (class) are used
   in a system built with the class scheduler (FTNSCHED=1).

































                                    243



   103  SPT -- STORAGE ALLOCATION POINTER TABLE   103  SPT -- STORAGE ALLOCATION POINTER TABLE

   Description:   Contains pointers to all SAT blocks for a unit, whether
                  in  core or not.  There is one entry for each SAT block
                  on a unit, in order of the cluster address  which  they
                  represent, and zero entry indicates end of table.

   Defined in:    COMMOD

   Used by:       FILFND, ONCMOD

                +-------------------------------------------------------+
   SPTFIR       | Free cluster count       | Cluster address in unit    |
                |-------------------------------------------------------|
                | Free cluster count       | Cluster address in unit    |
                |-------------------------------------------------------|
                                      .    .    .   
                |-------------------------------------------------------|
                | 0                        | 0                          |
                +-------------------------------------------------------+
                 0                       12 13                        35

             ____             Byte
   ____      _______   ________   Bits      Pointer   Contents

   0-12      SPYTAL    Number free clusters represented in this SAT
                       Block.
   13-35     SPYCLA    Cluster address within unit for this SAT Block.

   Notes:

         o  Each Unit Data Block (UDB) contains a pointer to its SPT.

         o  Each SAT block that is in core is  in  a  Storage  Allocation
            Block  (SAB).  The SAB contains the index value for the entry
            in  this  table  corresponding  to  the  SAT  block  that  it
            currently contains.

         o  The last word in the SPT table is always zero.

         o  Under KL-paging, the SPT is usually in Section 2.













                                    244



   104  STR -- FILE STRUCTURE DATA BLOCK   104  STR -- FILE STRUCTURE DATA BLOCK

   Description:   Contains   descriptive   information   about   a   file
                  structure.

                  There is a Structure  Data  Block  for  each  structure
                  defined in the system.

   Defined in:    COMMOD

   Used by:       COMMON, FILFND, FILIO, FILUUO, IPCSER, ONCMOD

            +----------------------------------------------------+
   STRNAM   | SIXBIT structure name                              |
            |----------------------------------------------------|
   STRSYS   | Next STR in system       | This STR number         | STRFSN
            |----------------------------------------------------|
   STRUNI   | First UDB for this STR   | K for CRASH.EXE         | STRK4C
            |----------------------------------------------------|
   STRREF   | Nonzero if STR needs to  | Number of units in this | STRUNM
            | be refreshed             | STR                     |
            |----------------------------------------------------|
   STRHGH   | Highest logical block in structure                 |
            |----------------------------------------------------|
   STRSIZ   | Size of STR in 128 word blocks                     |
            |----------------------------------------------------|
   STRGAR   | Limit on total blocks reserved in STR              |
            |----------------------------------------------------|
   STRRES   | Number of reserved blocks remaining free           |
            |----------------------------------------------------|
   STRALT   | Alter number for this structure                    |
            |----------------------------------------------------|
   STRTAL   | No. first-come-first-serve free blocks on structure|
            |----------------------------------------------------|
   STROVR   | Overdraw limit - per user                          |
            |----------------------------------------------------|
   STRMNT   | Mount count for this STR                           |
            |----------------------------------------------------|
   STRPT1   | First retrieval pointer for MFD                    |
            |----------------------------------------------------|
   STRTRY * | TRY | RETRY | RECAL |     |     | X | UNIT |   | X | STRUN1
            |----------------------------------------------------|
   STRBPU   | (Maximum) Number of blocks per unit                |
            |----------------------------------------------------|
   STRBSC   | Number of blocks per     | Maximum number of super |
            | supercluster             | clusters per unit       |
            |----------------------------------------------------|
   STRJOB   | Access                   | Job # having access or 0|
            |----------------------------------------------------|
   STYCNP   | Byte pointer to RIB cluster count in AC T2         |
            |----------------------------------------------------|



                                    245



            |----------------------------------------------------|
   STYCKP   | Byte pointer to RIB checksum field in AC T2        |
            |----------------------------------------------------|
   STYCLP   | Byte pointer for cluster address in AC T2          |
            |----------------------------------------------------|
   STRPPN   | PPN of the structure owner                         |
            |----------------------------------------------------|
   STRSDL   | Position of STR in system dump list                |
            | (-1=not in list)                                   |
            |----------------------------------------------------|
   STRCRS   | LBN of RIB for CRASH.EXE                           |
            +----------------------------------------------------+

   * Details following.

   Notes:

        1.  All STR Data  Blocks  are  set  up  by  the  ONCE-Only  code,
            according  to  information  found  in  the  Home  Blocks.  No
            information  pertaining  to  structures  is  coded  into  the
            monitor.

        2.  STRALT is incremented each time a SAT block  is  written  for
            this structure.

        3.  Access is -1 if the job in right half is the  only  job  with
            the structure mounted, and it is not single-access structure.

   STRTRY Byte Definitions

   +---------------------------------------------------------+
   |  TRY   | RETRY | RECAL |      |  X   | UNIT |         |X|
   +---------------------------------------------------------+
    0      6         12      18     27         31      34  35

   ____                ____   Word                Byte
   _____     ____      _____     _______   Label     Bits      Label     Content

   STRTRY    0-5       STYTRY    Number of times to retry before error
                                 considered hard.
   STRTRY    6-11      STYSER    Number of times to retry on search and
                                 data errors.
   STRTRY    12-17     STYRCL    Number of recalibrates for search and
                                 data errors.
   STR1PT    27        STP1PT    Set if STRPT1 is only retrieval pointer
                                 for MFD.
   STRUN1    28-31     STYUN1    Logical unit number within this file
                                 structure where MFD begins.
   STRPVS    35        STYPVS    Non-zero if this is a private structure.





                                    246



   105  SWPLST -- SWAPPING LIST TABLE   105  SWPLST -- SWAPPING LIST TABLE

   Description:   Table used by the VM swapper in conjunction with MEMTAB
                  to  keep  track  of jobs being swapped or having paging
                  I/O in progress.

   Defined in:    COMMON

   Used by:       SCHED1, SWPSER, VMSER

         0                 13 14                 26 27                35
        +---------------------------------------------------------------+
        | Bits               | Start phys. pg.     |   Number of pages  |
        |---------------------------------------------------------------|
        |                    |                     |                    |
        |---------------------------------------------------------------|
                                     .  .  .                         

   Notes:

   ___       ______    _______   Bit       Symbol    Meaning

   0         SL.FRG    Fragmented entry.
   1         SL.DIO    Direction of I/O (1 = out).
   2         SL.SIO    Swapping/paging (1 = swapping).
   3         SL.IOP    I/O in progress.
   4         SL.IOD    I/O done (this swap list entry is done).
   5         SL.IPC    On if an IPCF page.
   6         SL.DFM    Don't find me (used to keep FNDSLE from finding
                       this entry).
|  7         SL.CHK    Swapping checksum error.
|  8         SL.ERR    I/O error (IODTER, IODERR, or IOIMPM).
|  9         SL.CHN    Channel error (IOCHMP or IOCHNX).
|  10        SL.MAP    Map info in this entry or fragment.
|  11        SL.PIW    Job waiting for paging queue.

   For a contiguous entry, the data is in the following fields:

        Bits 14-26          Contains the starting physical page number
                            (used as an index into MEMTAB).

        Bits 27-35          Contains the number of pages.

   For a fragmented entry, the following field contains:

        Bits 18-35          Contains the address of the fragment table.
                            The fragment table is linked the same way the
                            JBTSWP entry is, but the entries are as
                            above.





                                    247



   106  SW2LST -- SECONDARY SWPLST   106  SW2LST -- SECONDARY SWPLST

   Description:   The original SWPLST entry is stored  here  for  cleanup
                  purposes,   since  SWPLST  is  modified  while  I/O  is
                  progressing.

   Defined in:    COMMON

   Used by:       VMSER



   107  SW3LST -- THIRD SWPLST   107  SW3LST -- THIRD SWPLST

   Description:   The right half of this table is used to store  the  job
                  number  of  the  job being swapped or doing paging I/O,
                  and left half holds the contents of SWPOUT at the  time
                  the original related SWPLST was created.

   Defined in:    COMMON

   Used by:       SCHED1, SWPSER, VMSER

              +-------------------------------------+
   SW3LST     |                  .                  |
              |                  .                  |
              |-------------------------------------|
              |     (SWPOUT)     |    Job Number    |
              |-------------------------------------|
              /               .   .  .              /
























                                    248



   108  SWPTAB -- SWAPPING TABLE   108  SWPTAB -- SWAPPING TABLE

   Description:   Contains addresses of the Unit Data Blocks of all units
                  available  for  swapping.   This  table  specifies  the
                  active swapping list.

   Defined in:    COMMOD

   Used by:       CPNSER, FILFND, FILIO, ONCMOD, SEGCON, SWPSER,  SYSINI,
                  VMSER

                       +-------------------------------------+
                       |                UDB 1                |
                       |-------------------------------------|
                       |                UDB 2                |
                       |-------------------------------------|
                       |                UDB 3                |
                       |-------------------------------------|
                       |                                     |
                       |                                     |
                       |-------------------------------------|
                       |                UDB n                |
                       +-------------------------------------+































                                    249



   109  TABSTR -- STRUCTURE TABLE   109  TABSTR -- STRUCTURE TABLE

   Description:   Contains addresses of all File Structure Data Blocks in
                  the  system.   File  structures  are in order of access
                  speed, fastest to slowest.

                  Index value  for  each  entry  is  the  File  Structure
                  Number, FSN.

   Defined in:    COMMOD

   Used by:       COMMON, CPNSER, FILFND, FILIO, FILUUO, ONCMOD, SYSINI

                +-------------------------------------+
   STRAOB:      |  -.SLMAX         |    .FSMIN        |
                       |-------------------------------------|
   STRTAB:      |                STR 1                |
                |-------------------------------------|
                |                STR 2                |
                |-------------------------------------|
                |                                     |
                |                                     |
                |-------------------------------------|
                |                STR n                |
                +-------------------------------------+

   Notes:

        1.  Number of entries is .SLMAX.  This value cannot exceed 36.

        2.  The first word is an AOBJN pointer to the rest of the table.























                                    250



   110  TRANSFER TABLES   110  TRANSFER TABLES

   Description:   These tables are  used  in  the  requeuing  process  to
                  determine the destination queue and quantum runtime for
                  jobs being requeued by the scheduler.

   Defined in:    SCHED1

   See also:      JBTSTS, QBITS

   Although these tables  are  defined  by  macros  in  COMMON  they  are
   represented here in their expanded form:


        EQFIX== 400000,,QFIX     ;Specifies fix transfer to end of queue
        EQLNKX==400000,,QLNKZ    ;Specifies requeing and quantum run
                                 ; time based on current queue and
                                 ; job size

        QNULW:  EXP     EQFIX    ;Null queue
                XWD     -1,-NULQ

        QSTOP::
        QSTOPW: EXP EQFIX        ;Stop queue
                XWD -1,-STOPQ

        QJDCW:  EXP EQFIX        ;DAEMON wait queue
                XWD -1,-JDCQ

        QCMW::  EXP EQFIX        ;Command wait queue
                XWD -1,-CMQ

        QTSW:                    ;TTY I/O Wait satisfied
        QRNW:   EXP EQFIX        ;Jobs just became runnable
                XWD QADTAB##,-PQ1         

        QRNW1:  EXP EQFIX        ;Back of QP1, no quantum change
                XWD  -1,-PQ1

        QRNW2:  EXP EQFIX        ;Back of PQ2, no quantum change
                XWD  -1,-PQ1

        QTIOWW: EXP EQFIX        ;TTY I/O Wait satisfied
                XWD -1,TIOWQ

        QSLPW:  EXP  EQFIX       ;Sleep for greater than/equal to
                XWD  -1,-SLPQ    ;1 second

        QEWW:   EXP EQFIX        ;Event wait
                XWD -1,-EWQ

        QTIME:  EXP EQLNKZ       ;When quantum time exceeded
                XWD 0,QRQTBL

                                    251



   111  TTFCOM -- FORCED COMMANDS TABLE   111  TTFCOM -- FORCED COMMANDS TABLE

   Description:   Allows SCNSER  to  force  a  specified  command  to  be
                  executed  for  a  job without having to put the command
                  into the terminal buffer.

                  The TTFCOM table contains one entry, in SIXBIT  format,
                  for each command that SCNSER might want to force.  Each
                  entry is conditionally assembled.

                  Each symbol in TTFCOM is associated with a  value  that
                  equals  its offset within TTFCOM.  The LDB DDB contains
                  this offset for forced commands.

   Defined in:    SCNSER

   Used in:       CLOCK1, COMCON, NETMCR, NETSER, NETVTM,  ONCE,  SYSINI,
                  UUOCON

   _____                  _______                   _______   Label                  Content                   Command

           +-------------------------------------+
   TTFCXC  |                HALT                 | Control-C
           |-------------------------------------|
   TTFCXD  |                .BYE                 | Dataset
           |                                     | disconnect
           |-------------------------------------|
   TTFCXH  |               .HELLO                | Dataset
           |                                     | connect
           |-------------------------------------|
   TTFCXR  |               .RESTA                | System restart
           |-------------------------------------|
   TTFCXK  |                KJOB                 | Kill job
           |-------------------------------------|
   TTFCXI  |               INITIA                | Call initializing CUSP
           |-------------------------------------|
   TTFCXJ  |               .FCONT                | Forced continue
           |-------------------------------------|
   TTFCXT  |                .TYPE                | Retype line
           |-------------------------------------|
   TTFCXW  |                USESTA               | <CTRL/T>
           |-------------------------------------| 
   TTFCXL  |                .NETLD               | Network reload
           |-------------------------------------|
   TTFCXS  |                .HALT                | <CTRL/C>
           |                                     | with no trapping
           |-------------------------------------|
   TTFCXB  |                .BPT                 | <CTRL/D> breakpoint
           |-------------------------------------|
   TTFCXX  |                CTEST                | (For patching)
           +-------------------------------------+



                                    252



   112  TERMINAL CHUNKS   112  TERMINAL CHUNKS

   Description:   Used to hold characters that need  to  be  typed  on  a
                  terminal,  or  characters  received from a terminal and
                  not yet read by a program.   The  first  word  of  each
                  chunk  is  a  link  word  containing  the  addresses of
                  previous and following chunks.  The  remainder  of  the
                  terminal chunk is 3 words consisting of 3 12-bit bytes.
                  Each byte contains an ASCII character or null.

                  Buffers are set up dynamically, as needed, from a  pool
                  of monitor free core reserved for that purpose.

                  The association between a buffer and a line depends  on
                  pointers in the Line Data Block.

                  Buffers are built from four word  "chunks,"  which  are
                  linked together as necessary.

   Defined in:    SCNSER

   See also:      LDB

                +---------------------------------------+
                | Prev chunk addr   | Next chunk addr   |
                |---------------------------------------|
                | Byte 0     | Byte 1      | Byte 2     |
                |---------------------------------------|
                | Byte 3     | Byte 4      | Byte 5     |
                |---------------------------------------|
                | Byte 6     | Byte 7      | Byte 8     |    
                +---------------------------------------+

   Notes:

        1.  The bits in each byte are defined as:

            ____   _______            Bits   Meaning

            9      Image mode.
            10     Character has been echoed.
            11     Character has been logically deleted from the 
                   character stream.
            12     Current byte is a special function character 
                   (meta-character), rather than a normal data 
                   character.

        2.  If there is not another  chunk  in  a  given  direction,  the
            corresponding linkage is zero.





                                    253



        3.  All chunks that are not part of a buffer are linked  together
            to  form  the  "free  list".   The  word TTFTAK points to the
            oldest chunk in the free list, and word TTFPUT points to  the
            newest chunk in the free list.

        4.  The size of  an  individual  buffer  is  limited  by  program
            action.  An output buffer cannot exceed 80 characters.  If an
            input buffer exceeds 172 characters (value of symbol  TTIWRN)
            each  receive  interrupt forces the output of an XOFF.  If an
            input buffer  contains  300  characters  (symbol  TTIMAX)  no
            additional characters are accepted from that line.  A bell is
            substituted for the echo of a lost character.










































                                    254



   113  TTUUOT -- TTCALL DISPATCH TABLE   113  TTUUOT -- TTCALL DISPATCH TABLE

   Description:   This table contains pre-check and dispatch  information
                  for TTCALL UUOs.  The bits in the left half are checked
                  before dispatching.  There is one entry for each TTCALL
                  UUO.

   Defined in:    SCNSER

           +--------------------------------------------------+
   TTUUOT: | Check bits  |             |   Dispatch address   | TTCALL 0
           |--------------------------------------------------|
           |             |             |                      | TTCALL 1
           |--------------------------------------------------|
           |             |             |                      | TTCALL 2
           |--------------------------------------------------|
           |             |             |                      |
           |             |             |                      |
           |--------------------------------------------------|
           |             |             |   Dispatch address   | TTCALL 17
           +--------------------------------------------------+
             0          4                18                  35

   ___       _____     _______   Bit       Label     Meaning

                       This function:
   0         TC.ADC    must be address-checked.
   1         TC.USR    must be at user level, else return.
   2         TC.USW    must be at user level, else wait.
   3         TC.ATW    must be attached, else wait.
   4         TC.ATR    must be attached, else return.
   5         TC.ECS    releases the previous input line, causing a
                       subsequent RESCAN to fail.





















                                    255



   114  TTYTAB -- TTY TABLE   114  TTYTAB -- TTY TABLE

   Description:   One entry per job, indexed by job number.  This is  the
                  table of controlling (attached) terminals for each job.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, COMDEV, CPNSER, ERRCON, FILIO,  IPCSER,
                  PSISER, PTYSER, SCNSER, UUOCON

           +------------------------------------------------------+
   TTYTAB: |                          |                           | Job 0
           |------------------------------------------------------|
           |                          | DDB address               | Job 1
           |------------------------------------------------------|
           |                          | DDB address               | Job 2
           |------------------------------------------------------|
           |                          | DDB address               | Job 3
           |------------------------------------------------------|
           |                          |                           |
           |                          |                           |
           |                          |                           |
           |                          |                           |
           |                          |                           |
           |------------------------------------------------------|
           |                          |        DDB address        | Job n
           +------------------------------------------------------+

   A zero entry indicates no attached terminal, otherwise, right half  is
   controlling DDB for the job.  There is always a TTY DDB for every job,
   even though  no  TTY  need  be  attached.   Thus,  UUOs  look  through
   TTYTAB(n) for a DDB because UUOs come from jobs.






















                                    256



   115  TYPTAB -- DEVICE TYPES TABLE   115  TYPTAB -- DEVICE TYPES TABLE

   Description:   Contains three letter generic  device  type  prefix  in
                  SIXBIT format for all possible devices in the system.

                  Used by UUOCON subroutine which finds a DDB  given  its
                  Universal Device Index.

   Defined in:    UUOCON

   Used by:       UUOCON

                +-------------------------------------+
                |             SIXBIT/DSK/             |
                |-------------------------------------|
                |             SIXBIT/DTA/             |
                |-------------------------------------|
                |             SIXBIT/MTA/             |
                |-------------------------------------|
                /                 . . .               /
                +-------------------------------------+

































                                    257



   116  UCLJMP -- CALL AND CALLI UUO DISPATCH TABLE   116  UCLJMP -- CALL AND CALLI UUO DISPATCH TABLE

   Description:   Contains dispatch addresses for CALL  and  CALLI  UUOs.
                  There  is  one  entry for each two routines.  Left half
                  contains address for even numbered routines; right half
                  for odd numbered routines

                  Indexed by one half the CALLI argument.

                  For CALL UUOs, a table lookup is done in UCLTAB to  get
                  routine  number;  for CALLI UUOs the number is supplied
                  directly.  One half of this routine number is  used  as
                  the  table  index.   The  left  half  is taken for even
                  numbers; right half for odd.  UUOCON then dispatches to
                  that address.

   Defined in:    UUOCON

   Used by:       UUOCON

                +-------------------------------------+
                /               .  .  .               /
                |-------------------------------------|
                | Customer adr -4  | Customer adr -3  |
                |                                     |
                | Customer adr -2  | Customer adr -1  |
                |-------------------------------------|
                |   DEC    adr 0   |  DEC     adr 1   |
                |-------------------------------------|
                |   DEC    adr 2   |  DEC     adr 2   |
                |-------------------------------------|
                /               .  .  .               /
                +-------------------------------------+

   Notes:

   UCLJMP has entries corresponding to entries in UCLTAB.  Table  entries
   may  be  added  in  the  negative  direction  by customers, and in the
   positive direction by DIGITAL.  Once a table entry is established, its
   position can never be changed without invalidating those programs that
   use the corresponding CALLI.













                                    258



   117  UCLTAB -- CALL UUO NAMES TABLE   117  UCLTAB -- CALL UUO NAMES TABLE

   Description:   Contains names of the CALL UUOs.  There  is  one  entry
                  for each CALL function.

                  Indexed by corresponding CALLI value.  Customer defined
                  CALLs  have  negative  index  values;  DEC  CALLs  have
                  positive values.  Table entries are SIXBIT  expressions
                  of  the  CALL  names.  There are corresponding dispatch
                  addresses in the UCLJMP table.

   Defined in:    UUOCON

                +-------------------------------------------------------+
   CCLTAB:      | Customer CALL -m                                      |
                |-------------------------------------------------------|
                | Customer CALL -2                                      |
                |-------------------------------------------------------|
                | Customer CALL -1                                      |
                |-------------------------------------------------------|
   UCLTAB:      | DEC CALL 0                                            |
                |-------------------------------------------------------|
                | DEC CALL 1                                            |
                |-------------------------------------------------------|
                | DEC CALL 2                                            |
                |-------------------------------------------------------|
                | DEC CALL n                                            |
                +-------------------------------------------------------+

   Notes:

        1.  Customers may extend the table in the negative direction with
            as many of their own CALLs as desired.

        2.  The value  specified  in  a  CALLI  UUO  corresponds  to  the
            position  of the CALL UUO name in this table.  Hence, once an
            entry is established, its position in the table can never  be
            changed  without  invalidating any existing programs that use
            that CALLI.

        3.  All CALLs above CALLI AC,55 do not have a corresponding  CALL
            with  a  SIXBIT argument.  In the future, only CALLIs will be
            added by DIGITAL.











                                    259



   118  UDB -- UNIT DATA BLOCK, OFFSETS COMMON TO ALL KONTROLLERS   118  UDB -- UNIT DATA BLOCK, OFFSETS COMMON TO ALL KONTROLLERS

|  Description:   The  UDB  is  a  prototype  data  block  that  contains
|                 information  used  by AUTCON to configure disk and tape
|                 drives at system startup and  when  they  come  online.
|                 UDBs  are  generated  dynamically  by  AUTCON  when the
|                 system is started.
|  
|  Defined in:    DEVPRM
|  
|  Used by:       APRSER, COMMON, CPNSER, DPXKON, ERRCON, FHXKON, FILFND,
|                 FILIO, FILUUO, FSXKON, ONCMOD, RPXKON, SYSINI, VMSER

                +-------------------------------------------------------+
   UDBNAM       | Unit name                                             |
                |-------------------------------------------------------|
   UDBPDN       | Physical drive number                                 |
                |-------------------------------------------------------|
   UDBDSN       / Drive serial number                          (2 words)/
                |-------------------------------------------------------|
   UDBKDB       | KDB address for each port                             |
                |-------------------------------------------------------|
   UDBCAM       | CPU accessibility mask                                |
                |-------------------------------------------------------|
   UDBDDB       | Normal DDB address                                    |
                |-------------------------------------------------------|
   UDBPCC       | Number-of-words,,starting-offset indicating physically|
                | contiguous core requirements                          |
                |-------------------------------------------------------|
   UDBSIZ       | Length of common UDB                                  |
                +-------------------------------------------------------+
|  
|  
|  
   118.1  Magtape Definitions (TUB) Unit Data Block|  118.1  Magtape Definitions (TUB) Unit Data Block
|  
|  Description:   TUBs are the magtape specific  Unit  Data  Block  (UDB)
|                 definitions.   Each  TUB is prefixed by a UDB block and
|                 is suffixed by  controller-dependent  UDB  information.
                  The  UDB  is  a  prototype  data  block  that  contains
                  information used by AUTCON to configure tape drives  at
                  system startup and when they come on-line.  UDBs can be
                  found by tracing them through  the  pointers  in  their
                  KDB's  (TKBUDB  pointed to by TKBIUN) or by tags formed
                  by concatenating "..U" with controller number and  unit
                  number.   For  example, ..U12 for the third unit on the
                  second controller (MTB2).

                  See  also:   Magtape   Device   Data   Block,   Magtape
                  Kontroller Data Block
|  
|  Defined in:    DEVPRM


                                    260



   Used by:       COMMON, TAPUUO

|               +-------------------------------------------------------+
|  TUBAKA       | Current unit address                                  |
|               |-------------------------------------------------------|
|  TUBCUR       | Pointer to current DDB                                |
|               |-------------------------------------------------------|
|  TUBDDL       | Lable DDB address                                     |
|               |-------------------------------------------------------|
|  TUBCNF (1)   | Configuration information                             |
|               |-------------------------------------------------------|
|  TUBSTS (2)   | Unit status                                           |
|               |-------------------------------------------------------|
|  TUBIEP       | Initial error pointer                                 |
|               |-------------------------------------------------------|
|  TUBFEP       | Final error pointer                                   |
|               |-------------------------------------------------------|
   TUBQUE       | Queue pointer for IORBs                               |
                |-------------------------------------------------------|
   TUBERR       | Error recovery info                                   |
                |-------------------------------------------------------|
   TUBRID       | Reelid                                                |
                |-------------------------------------------------------|
   TUBFIL       | Number of files from BOT                              |
                |-------------------------------------------------------|
   TUBREC       | Number of records from EOF                            |
                |-------------------------------------------------------|
   TUBCRD       | Number of characters read since unload                |
                |-------------------------------------------------------|
   TUBCWR       | Number of characters written since unload             |
                |-------------------------------------------------------|
   TUBSRE       | Number of soft read errors                            |
                |-------------------------------------------------------|
   TUBHRE       | Number of hard read errors                            |
                |-------------------------------------------------------|
   TUBSWE       | Number of soft write errors                           |
                |-------------------------------------------------------|
   TUBHWE       | Number of hard write errors                           |
                |-------------------------------------------------------|
   TUBTME       | Total media errors since unload                       |
                |-------------------------------------------------------|
   TUBTDE       | Total device errors since reload                      |
                |-------------------------------------------------------|
   TUBTUN       | Total unloads                                         |
                |-------------------------------------------------------|
   TUBTRY       | Retries to resolve error                              |
                |-------------------------------------------------------|
   TUBCCR       | Character count on last record                        |
                |-------------------------------------------------------|
                | File                     | Record                     |
   TUBPBE       |               position before error                   |
                |-------------------------------------------------------|


                                    261



                |-------------------------------------------------------|
   TUBFES       | Final error state word                                |
                |-------------------------------------------------------|
   TUBCHR       | Statistics for MTCHR. UUO                             |
                |-------------------------------------------------------|
   TUBPGM       | Program name on error                                 |
                |-------------------------------------------------------|
   TUBUID       | PPN using drive on error                              |
|               |-------------------------------------------------------|
|  TUBDVC       | Device code for error logging                         |
|               |-------------------------------------------------------|
|  TUBKTY       | Controller type for error logging                     |
|               |-------------------------------------------------------|
|  TUBCNI       | Error status for next record                          |
|               |-------------------------------------------------------|
|  TUBHTT       / Hung timer table                             (4 words)/
|               |-------------------------------------------------------|
|  TUBMTV       | Timeout in case no access to some port                |
|               |-------------------------------------------------------|
|  TUBTIM       | Running hung timer                                    |
|               |-------------------------------------------------------|
|  TUBMDL       | SIXBIT drive model name                               |
|               |-------------------------------------------------------|
|  TUBPTR (3)   | Byte pointer to file.ext                              |
|               |-------------------------------------------------------|
   TUBMSG (3)   | Label message length     | Label message function code|
                |-------------------------------------------------------|
   TUBPHY (3)   | Physical name for label PCS                           |
                |-------------------------------------------------------|
   TUBLBL (3)   | Label status word                                     |
                |-------------------------------------------------------|
   TUBRFM (3)   | Record format                                         |
                |-------------------------------------------------------|
   TUBRCC (3)   | Record size                                           |
                |-------------------------------------------------------|
   TUBBKL (3)   | Block size                                            |
                |-------------------------------------------------------|
   TUBEXP (3)   | Expiration date                                       |
                |-------------------------------------------------------|
   TUBPRT (3)   | Protection                                            |
|               |-------------------------------------------------------|
|  TUBPSN (3)   | File position number                                  |
|               |-------------------------------------------------------|
|  TUBFNM (3)   | ASCII file name                                       |
|               |-------------------------------------------------------|
|  TUBGVR (3)   | Generation + version numbers                          |
|               +-------------------------------------------------------+







                                    262



|  Notes:
|  
|       1.  The TUBCNF bits are listed below.
|  
            ___    ______  _______|           Bit    Symbol  Meaning
|  
|           18     TUC7TK  7-track.
|           19     TUCIRD  Interrupts when rewind done.
|           20     TUCDMS  Diagnostic mode set.
|           21     TUCSNS  Force sense.
|           23     TUCD62  Drive can do 6250 BPI.
|           24     TUCD16  Drive can do 1600 BPI.
|           25     TUCD80  Drive can do 800 BPI.
|           26     TUCD55  Drive can do 556 BPI.
|           27     TUCD20  Drive can do 200 BPI.
|           28     TUCDIG  DIAG. UUO has been done.
|           29     TUCFOI  File operations illegal.


        2.  The TUBSTS bits are listed below.

            ___    ______  _______            Bit    Symbol  Meaning

            0      TUSNS   Do not schedule this unit (sign bit).
            1      TUSBOT  Beginning of tape.
            2      TUSWTL  Write locked.
            3      TUSREW  Tape rewinding.
            12     TKSMNT  Controller is in maintenance mode 
                           (also in TKBSTS).
            13     TKSSIL  Request silence about offline condition 
                           (also in TKBSTS).
            14     TKSSCH  Requested scheduled interrupt 
                           (also in TKBSTS).
            15     TKSSTD  Started (also in TKBSTS).
            16     TKSSEL  Selected (also in TKBSTS).
            17     TKSOFL  Offline (also in TKBSTS).

|  
|       3.  This symbol  is  used  only  if  FTTLAB  (tape  labeling)  is
|           selected at MONGEN time.
|  













                                    263



   118.2  Disk Definitions (UNI) Unit Data Block|  118.2  Disk Definitions (UNI) Unit Data Block
|  
|  Description:   UNIs are disk specific  Unit  Data  Block  definitions.
|                 Each  UNI  is  prefixed  by a UDB block and suffixed by
|                 controller dependent UDB information.  There is one UDB
|                 for  each physical disk drive on the system (two if the
|                 drive is dual ported).  UDBs are generated  dynamically
|                 by  AUTCON  when  the  system is started and when units
|                 come online.
|  
|  Defined in:    DEVPRM
|  
|  Used by:       APRSER, COMMON, CPNSER, DPXKON, ERRCON, FHXKON, FILFND,
|                 FILIO, FILUUO, FSXKON, ONCMOD, RPXKON, SYSINI, VMSER

                +-------------------------------------------------------+
   UNILOG       | SIXBIT logical name within structure (HOMLOG)         |
                |-------------------------------------------------------|
   UNIHID       | SIXBIT Home Block ID name (HOMHID)                    |
                |-------------------------------------------------------|
   UNISYS *     | Next UDB in system | SIC                 | LUN        |
                |-------------------------------------------------------|
   UNISTR       | Next UDB for STR   | STR Data Block                   |
                |-------------------------------------------------------|
|  UNICHN       | Next UDB on channel                                   |
|               |-------------------------------------------------------|
|  UNIKON       | Next UDB on controller                                |
                |-------------------------------------------------------|
   UNISWP *     | Next UDB for swapping    | CFS                        |
                |-------------------------------------------------------|
   UNIHCT       | Hard disk error statistics                            |
                |-------------------------------------------------------|
   UNISCT       | Soft and hard error statistics                        |
                |-------------------------------------------------------|
   UNIMCT       | Monitor detected error statistics                     |
                |-------------------------------------------------------|
   UNIERR       | Device CONI at time of last hard error                |
                |-------------------------------------------------------|
   UNISOF       | CONI at time of last error before recovery            |
                |-------------------------------------------------------|
   UNIHBN       | Last logical block number on hard or soft error       |
                |-------------------------------------------------------|
   UNIBRC       | Number of buffered mode blocks read on unit           |
                |-------------------------------------------------------|
   UNIBWC       | Number of buffered mode blocks written on unit        |
                |-------------------------------------------------------|
   UNIDRC       | Number of dump mode blocks read on unit               |
                |-------------------------------------------------------|
   UNIDWC       | Number of dump mode blocks written on unit            |
                |-------------------------------------------------------|




                                    264



                |-------------------------------------------------------|
   UNIMRC       | Number of monitor blocks read on unit                 |
                |-------------------------------------------------------|
   UNIMWC       | Number of monitor blocks written on unit              |
                |-------------------------------------------------------|
   UNIICT       | Number of blocks swapped in from unit                 |
                |-------------------------------------------------------|
   UNIOCT       | Number of blocks swapped out to unit                  |
                |-------------------------------------------------------|
   UNIMSC       | Number of monitor + swap seeks on this unit           |
                |-------------------------------------------------------|
   UNIUSC       | Number of user mode seeks on this unit                |
                |-------------------------------------------------------|
   UNIPCT       | Number of positioning    | Number of soft + hard      |
                | failures                 | seek incomplete failures   |
                |-------------------------------------------------------|
   UNIFKS       | Free K for swapping on this unit                      |
                |-------------------------------------------------------|
   UNISDI       | Last DATAI status before recovery attempted           |
                |-------------------------------------------------------|
   UNIHDI       | Last DATAI status after first recovery failed         |
                |-------------------------------------------------------|
   UNIECT       | Number of times error status returned for last        |
                | operation                                             |
                |-------------------------------------------------------|
   UNIHNG       | Hung timeout counters                                 |
                |-------------------------------------------------------|
   UNISTS *     | Status code for unit                                  |
                |-------------------------------------------------------|
   UNICCT *     | Section number    |   BCT    | Number of channel      |
                | for swapping SAT  |          | termination errors     |
                |-------------------------------------------------------|
   UNIHOM       | 1st home block address   | Redundant home blk adr     |
                |-------------------------------------------------------|
   UNIQUE       | addr. of 1st PWQ DDB     | Job number of PWQ DDB      |
                |-------------------------------------------------------|
   UNIGRP *     | Number of blocks to try  | Last disk position (RP20)  |
                | for on output            |                            |
                |-------------------------------------------------------|
   UNIBPU       | Number of logical blocks per unit (returned by DSKCHR)|
                |-------------------------------------------------------|
   UNIBPM       | Number of logical blocks/unit incl. maint. cyls.      |
                |-------------------------------------------------------|
   UNIPCI       | Number of blocks paged in from unit                   |
                |-------------------------------------------------------|
   UNIPCO       | Number of blocks paged out to unit                    |
                |-------------------------------------------------------|
   UNICHR *     | BPC         | BPT        | Blocks per cylinder        |
                |-------------------------------------------------------|





                                    265



                |-------------------------------------------------------|
   UNICPS *     | WPS       | | SPU        | CPS                        |
                |-------------------------------------------------------|
   UNICYL       | Current physical cylinder number                      |
                |-------------------------------------------------------|
   UNIBLK       | Logical block number within unit                      |
                |-------------------------------------------------------|
   UNISAB       | Address of first SAB in ring                          |
                |-------------------------------------------------------|
   UNITAL       | Number of free blocks on unit (reserved + FCFS)       |
                |-------------------------------------------------------|
   UNIDES *     | Unit description bits for DSKCHR                      |
                |-------------------------------------------------------|
   UNIPTR       | -length swap SAT table   | Addr of swap SAT table     |
                |-------------------------------------------------------|
   UNISLB       | 1st logical block for swapping on unit                |
                |-------------------------------------------------------|
   UNIXRA       | Number of blks read      |  Number of blks written    |
                | using extended ribs      |  using extended ribs       |
                |-------------------------------------------------------|
   UNICDA       | Previous cont. of RH     | Addr of active DDB         |
                |-------------------------------------------------------|
   UNIGEN       | Generation number of UDB (AOSed when unit is          |
                | dismounted)                                           |
                |-------------------------------------------------------|
   UNIRCV       | Number of hung unit retries without success           |
                |-------------------------------------------------------|
   UNISWA       | addr of current SWPLST   | distance to swap block     |
                | entry                    |                            |
                |-------------------------------------------------------|
   UNISWD       | Distance to swap cylinder                             |
                |-------------------------------------------------------|
   UNIQUL       | Length of position wait queue                         |
                |-------------------------------------------------------|
   UNIBUC       | Number of blocks in 10/11 compatibility mode          |
                |-------------------------------------------------------|
   UNIDIA       | Job # of job shutting    | Addr of DDB of job         |
                | down I/O (DIAG. UUO)     | shutting down I/O (DIAG.)  |
                |-------------------------------------------------------|
   UNIALT *     | Bit mask of CPUs         |  Alternate port addr       |
                |-------------------------------------------------------|
|  UNI2ND *     | A | Reserved             | Alternate port addr        |
|               |-------------------------------------------------------|
|  UNITIM       | Hung-timer                                            |
                |-------------------------------------------------------|
   UNIJOB       | Previous RH UNIJOB       | Job number of RH UNICDA    |
                |-------------------------------------------------------|
   UNIAJB       | DA resource status word                               |
                |-------------------------------------------------------|





                                    266



                |-------------------------------------------------------|
   UNIDS2 *     | N | P | res. | KOF       | PUN                        |
                |-------------------------------------------------------|
   UNILTM       | Universal date/time of lock on structure              |
                |-------------------------------------------------------|
   UNISPT       | RH is address of storage allocation pointers (SAT)    |
                | table                                                 |
                |-------------------------------------------------------|
   UNIPGT       | Page quarter turns       | Page turns                 |
                | (Number of times RIB was reread to get new pointers)  |
                |-------------------------------------------------------|
   UNICRC       | Number of monitor cache read calls                    |
                |-------------------------------------------------------|
   UNICRH       | Number of monitor cache read hits                     |
                |-------------------------------------------------------|
   UNICWC       | Number of monitor cache write calls                   |
                |-------------------------------------------------------|
   UNICWH       | Number of monitor cache write hits                    |
                |-------------------------------------------------------|
   UNICBK       | Number of monitor blocks cached for this unit         |
                |-------------------------------------------------------|
   UNIK4S       | Word addr of K for swapping on this unit              |
                |-------------------------------------------------------|
   UNILAS       | Last command issued to MASSBUS device                 |
                |-------------------------------------------------------|
   UNISCR       | Contents of control register at first error           |
                |-------------------------------------------------------|
   UNIHCR       | Contents of control register at end                   |
                |-------------------------------------------------------|
   UNISDR       | Contents of data register at first error              |
                |-------------------------------------------------------|
   UNIHDR       | Contents of data register at end                      |
                |-------------------------------------------------------|
   UNIEBK       | Drive registers saved here on error.  LH has last     |
                | error, RH has first error.  Last word in block is the |
                | command that caused the error.  (0-16 words,          |
                | determined by X'ERNO)                                 |
                +-------------------------------------------------------+

   * Details on following pages.














                                    267



   118.2.1  UNISYS -- Next UDB in System   118.2.1  UNISYS -- Next UDB in System -
   +--------------------------------------------------------+
   |   Next UDB in system  |  SIC   |         |     LUN     |
   +--------------------------------------------------------+
    0                    17 18       25        30         35

   ____      ____      ____      ___________   Word      Bits      Byte      Description

   UNISYS    0-17                Core address of next UDB in system.
                                 Zero indicates last unit.
   UNISIC    18-25     UNYSIC    Number of SAT blocks in core for this
                                 unit.
   UNILUN    30-35     UNYLUN    Logical unit number within file
                                 structure for unit.



   118.2.2  UNISWP -- Next UDB For Swapping   118.2.2  UNISWP -- Next UDB For Swapping -
   +-------------------------------------------------------+
   |Next UDB for swapping | |  CFS  |  K for swapping      |
   +-------------------------------------------------------+
    0                   17   20   22 23                   35

   ____      ____      ____      ___________   Word      Bits      Byte      Description

   UNISWP    0-17                Address of next UDB for swapping.
   UNIFCS    20-22     UNYCFS    Swapping class of unit.
   UNIK4S    23-35     UNYK4S    Number of K for swapping on the unit.



   118.2.3  UNISTS -- Unit Status   118.2.3  UNISTS -- Unit Status -
    +-------------------------------------------------------+
    |                       Code                            |
    +-------------------------------------------------------+
     0                                                    35

   ____      ____      ___________   Word      Code      Description

   ICOD      0         Unit idle.
   PWCOD     2         Position wait.
   PCOD      3         Positioning.
   TWCOD     4         Waiting to transfer data.
   TCOD      5         Transferring data.
   MDACOD    6         Unit useable only by MDA.
   OWCOD     7         Obsolete.
   OCOD      10        Operator wait, no file active.
   OW2COD    11        Obsolete.
   O2COD     12        Same as OCOD, but no message once a minute.





                                    268



   118.2.4  UNICCT -- Channel Error   118.2.4  UNICCT -- Channel Error -
   +-------------------------------------------------------+
   | Section  |   BCT  | _# of channel termination errors  |
   +-------------------------------------------------------+
    0        8 9      17 18                              35

   ____                ____   Word                Byte
   _____     ____      _______   ___________   Label     Bits      Pointer   Description

   UNISNS    0-8       UNYSNS    Section number of swapping SAT table.
   UNIBCT    9-17      UNYBCT    Number of slots left in BAT block for
                                 unit.
   UNICCT    18-35               Number of channel termination errors on
                                 this unit.



   118.2.5  UNIGRP -- Output Word   118.2.5  UNIGRP -- Output Word -
   +-------------------------------------------------------+
   | Blocks to try on output  | P | N | R | M |   |  LKP   |
   +-------------------------------------------------------+

   ____      ______    _______   Bits      Symbol    Meaning

   18        UNIPWQ    Clock request outstanding of another CPU to
                       process the Position Wait Queue.
   19        UNINDU    Disk cache needs sweeping.
   20        UNIRHP    HOM block reread in progress (CI disks).
   21        UNIMSG    "Offline" message has been given for this minute.
   22-26               Reserved.
   27-35     UNILKP    Last known position of disk (RP20 disks).



   118.2.6  UNICHR -- Block Counts   118.2.6  UNICHR -- Block Counts -
   +-------------------------------------------------------+
   |      BPC    |      BPT      |   Blocks per cylinder   |
   +-------------------------------------------------------+
    0           8 9            17 18                     35

   ____                ____   Word                Byte
   _____     ____      _______   ___________   Label     Bits      Pointer   Description

                                 Number of blocks per:
   UNIBPC    0-8       UNYBPC    cluster.
   UNIBPT    9-17      UNYBPT    track.
   UNIBPY    18-35     UNYBPY    cylinder.







                                    269



   118.2.7  UNICPS -- SAT Word   118.2.7  UNICPS -- SAT Word -
   +-------------------------------------------------------+
   |      WPS     |  |      SPU     |        CPS           |
   +-------------------------------------------------------+
    0            8 9  10          17 18                  35

   ____                ____   Word                Byte
   _____     ____      _______   ___________   Label     Bits      Pointer   Description

                                 Number of:
   UNIWPS    0-8       UNYWPS    words per SAT block.
   UNISPU    9-17      UNYSPU    SAT blocks on the unit.
   UNICPS    18-35     UNYCPS    clusters per SAT.



   118.2.8  UNIDES -- Unit Description   118.2.8  UNIDES -- Unit Description -
   +--------------------------------------------------------------+
   |Bits|Status code|Bits|  |Channel|Kon-type| No. |U-type|       |
   +--------------------------------------------------------------+
    0--6 7---------8 9-16 17 18---20 21----26 27-29 30--32 33---35

   ____                ____   Word                Mask
   _____     ___       ______    _______   Label     Bit       Symbol    Content

   UNIDES    0         UNPRHB    Monitor must reread HOME block to ensure
                                 pack ID is correct.  Set when a pack
                                 goes offline.
   UNIDES    1         UNPOFL    Unit is offline.
   UNIDES    2         UNPHWP    Unit is hardware write-protected.
   UNIDES    3         UNPSWP    Unit is in a structure that is software
                                 write-protected.
   UNIDES    4         UNPSAF    Unit is in a single access structure.
   UNIDES    5         UNPZMT    Structure mount count is zero.
   UNIPRF    6         UNPPRF    Unit is in a private structure.

   UNIUST    7-8                 Unit status code, as follows:
                       UNVPIM    0 - unit up, pack mounted.
                       UNVPBM    1 - unit up, pack is being mounted.
                       UNVNPM    2 - unit up, pack is not mounted.
                       UNVDWN    3 - unit down.

   UNIDES    9         UNPMSB    Unit has more than one SAT block.
   UNIDES    10        UNPNNA    No new access on structure.
   UNIAWL    11        UNPAWL    Structure is write-protected for all
                                 jobs.
   UNIDES    12        UNPFUS    Unit got a file-unsafe.
   UNIWMD    13        UNPWMD    Unit waiting for MDA to do something.
   UNIDES    14        UNPALT    Unit is dual-ported.
             15        UNPUSI    Unit status is inconsistent.
             16        UNPRSS    Removing swapping space from unit.
   UNISCN    18-20               Data channel number.


                                    270



   UNIKTP    21-26     UNYKTP    Controller type, as follows:
                       TYPDR     0 - DR (Future drum, if any).
                       TYPFH     1 - FH RC10 (Burroughs disk or Bryant
                                 drum).
                       TYPDP     2 - DP RP10 (RP01-03 disks).
                       TYPMD     3 - MD Bryant mass disk.
                       TYPFS     4 - FS RH10 with RS04.
                       TYPRP     5 - RP RH10 with RP04-06.
                       TYPRN     6 - RH20/RP20.

   UNIKNM    27-29     UNYKNM    Controller number within type.
   UNIUTP    30-32     UNYUTP    Unit type.
   UNIPUN    33-35     UNYPUN    Obsolete (see UNIDS2).

   Notes:

        1.  This word is returned by the DSKCHR UUO.  Those items  marked
            with an asterisk are returned by the DSKCHR UUO.

        2.  Controller type starts at zero (for  example,  DPA=0,  DPB=1,
            and so on).




   118.2.9  UNIALT -- First Word for Alternate Port   118.2.9  UNIALT -- First Word for Alternate Port -
   +-------------------------------------------------------+
   |  Bit mask for CPU       |    Alternate port address   |
   +-------------------------------------------------------+

   Notes:

        1.  The left half of UNIALT contains a bit mask representing  the
            CPU(s) that can access the disk (for CI disks only).  The bit
            is on, if the HSC50 has been initiated on the device.  Bit 17
            = CPU0, bit 16 = CPU1, bit 15 = CPU2,...

        2.  The right half contains the address of the other port, if the
            drive is dual- or alternate-ported.




   118.2.10  UNI2ND -- Second Word for Alternate Port   118.2.10  UNI2ND -- Second Word for Alternate Port -
   +-------------------------------------------+
   | A |                  |    UDB address     |
   +-------------------------------------------+
    0                   17 18                35

   Entire word is zero if this unit is not being  accessed  through  dual
   ports.   For  units  that  are  dual-ported,  UNI2ND  is  one  of  the
   following:


                                    271



   XWD 0,UDB-addr-of-alternate        If this is the main port for the
                                      unit.

   XWD -1,UDB-addr-of-main            If this is the alternate port.



   118.2.11  UNIAJB -- DA Status   118.2.11  UNIAJB -- DA Status -

        1.  Is -1 if no DA in progress on this unit.

        2.  Is +n if job n is allocating but no other jobs are waiting.

        3.  Is n,,n is job n is allocating and others are waiting to  use
            the DA resource.




   118.2.12  UNIDS2 -- Lap Plug Number   118.2.12  UNIDS2 -- Lap Plug Number -
   +-------------------------------------------------------+
   | N | P | Res. |    KOF    |     KNM    |    PUN        |
   +-------------------------------------------------------+

   ___       ______    _______   Bit       Symbol    Meaning

                       Set if:
   0         U2PNRM    the unit has non-removable media.
   1         U2PPGA    port became inaccessible without giving an
                       off-line interrupt.
   2-8                 Reserved.

                       Contains the:
   9-17      UNIKOF    offset of the unit into KONTAB.
   18-26     UNIKNM    controller number.
   27-35     UNIPUN    physical unit number (lap plug number).


















                                    272



   119  UFB -- USER FILE DIRECTORY DATA BLOCK   119  UFB -- USER FILE DIRECTORY DATA BLOCK

   Description:   One data block for every UFD/file structure pair  which
                  has  an  active  file.  All blocks for a file structure
                  are linked together.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO

                +-------------------------------------------------------+
    UFBTAL (1)  | Total of reserved + free blocks left in this UFD      |
                |-------------------------------------------------------|
    UFBPPB *    | Next UFB, this user | privileges   | UN1 |            |
                |-------------------------------------------------------|
    UFBPT1      | First retrieval pointer to UFD                        |
                |-------------------------------------------------------|
    UFBWRT (2)  | FCFS quota               | Number of blocks           |
                |-------------------------------------------------------|
    UFBFSN      | FSN  |                                                |
                |-------------------------------------------------------|
    UFBAUJ      | Equals n is job n owns the AU for this UFB            |
                |-------------------------------------------------------|
    UFBWAT (3)  | -1 if AU is available                                 |
                +-------------------------------------------------------+

   * UFBPPB is described on the next page.

   Notes:

        1.  UFBTAL goes negative if the user has exceeded  quota  and  is
            using  overdraw.   No  new  ENTERs  allowed  if  this is 0 or
            negative.  Total includes RIBs.

        2.  In    UFBWRT,    bits    0-26    contain    the     logged-in
            first-come/first-served  quota.   This  is never decremented.
            Bits 27-35 contain the number of blocks written  in  the  UFD
            itself.

        3.  The value of UFBWAT reflects the status of the  AU  resource.
            If  the contents of this word is -1, the AU is available.  If
            the word is 0, the AU is in use.   If  the  word  contains  a
            non-negative  number, that number reflects the number of jobs
            waiting for the resource.










                                    273



   119.1  UFBPPB -- Next UFB   119.1  UFBPPB -- Next UFB


   +-------------------------------------------------------+
   |      UFBPPB             |    PRV      | 1| UN1 |      |
   +-------------------------------------------------------+
    0                      17 18         26   28     32  35

   ____   Word
   _____     ____      ______    _______   Label     Bits      Symbol    Content

   UFBPPB    0-17                Core address of next UFD Data Block for
                                 this PPN (in another file structure).
   UFBPRV    18-26     UFYPRV    Access privileges for this UFD in this
                                 structure.  Byte pointer UFYPRV is used
                                 to load this byte into AC.  The codes
                                 that can be stored in UFBPRV are:

                                 ____  ______  _______                                 Code  Symbol  Meaning

                                 1     UFRXRD  Can read directory.
                                 2     UFRXCR  Can create files.
                                 4     UFRXLK  Can do LOOKUPS.

   UFB1PT    27        UFP1PT    Set if UFBPT1 is the only retrieval
                                 pointer for this UFD.
   UFBUN1    28-31     COYUN1    Logical unit number within file
                                 structure associated with first
                                 retrieval pointer.

























                                    274



   120  UN BLOCK -- USER NI BLOCK   120  UN BLOCK -- USER NI BLOCK

   Description:   Used to communication function  specific  data  between
                  the Ethernet driver (ETHSER) and its users.

   Defined in:    ETHPRM

   Used by:       D8EINT, DNADLL, ETHSER, ETHUUO, LATSER, LLMOP

                  The Ethernet  functions  are  described  below  the  UN
                  block.

                +-------------------------------------------------------+
   UN.PID       | Portal ID                                             |
                |-------------------------------------------------------|
   UN.SID       | Secondary ID                                          |
                |-------------------------------------------------------|
   UN.RID       | Request ID                                            |
                |-------------------------------------------------------|
   UN.STA *     | Portal status word                                    |
                |-------------------------------------------------------|
   UN.JCH       | JCH of portal owner                                   |
                |-------------------------------------------------------|
   UN.UID       | User ID                                               |
                |-------------------------------------------------------|
   UN.CBA       | User callback address                                 |
                |-------------------------------------------------------|
   UN.PTY  *    | Protocol identification word                          |
                |-------------------------------------------------------|
   UN.DAD (1,4) / Destination Ethernet address                 (2 words)/
                |-------------------------------------------------------|
   UN.SAD (1,4) / Source Ethernet address                      (2 words)/
                |-------------------------------------------------------|
   UN.BSZ (2)   | Datagram buffer size in bytes                         |
                |-------------------------------------------------------|
   UN.BFA (2)   / Datagram buffer byte pointer                 (2 words)/
                |-------------------------------------------------------|
   UN.CAR (3,4) / Current Ethernet address                     (2 words)/
                |-------------------------------------------------------|
   UN.HAD (3,4) / Hardware Ethernet address                    (2 words)/
                +-------------------------------------------------------+

   Notes:

        1.  The destination and source Ethernet addresses are  only  used
            by   the  NU.RCV  (receive  datagram)  and  NU.XMT  (transmit
            datagram) functions.  Additionally, the destination  Ethernet
            address is used by the NU.EMA (enable multi-cast address) and
            NU.DMA (disable multi-cast address) functions to specify  the
            multi-cast address.




                                    275



        2.  The datagram buffer size and byte pointer  are  used  by  the
            NU.RCV  (receive  datagram)  and  NU.XMT  (transmit datagram)
            functions.  If the datagram size is specified as  zero,  then
            UN.BFA  is  assumed to be the address of an MSD chain for the
            datagram.  Additionally, these  words  are  used  to  specify
            auxiliary buffers for several other functions.

        3.  The  current  Ethernet  address  and  the  hardware  Ethernet
            address  are  used  by  the NU.RCI (read channel information)
            function.

        4.  The Ethernet address  is  stored  as  six  8-bit  bytes  left
            justified in two words.

   Ethernet User Functions:

   All calls to the Ethernet driver (ETHSER) are  made  by  specifying  a
   function  code  and the address of an UN block where arguments for the
   function are stored.

   Portals implement a specific protocol on Ethernet.   A  protocol  user
   creates  a new portal with the NU.OPN function.  A portal is closed by
   the  NU.CLO  function.   Portal  user  queues  receive  and   transmit
   datagrams   using   the   NU.RCV  and  NU.XMT  functions.   Individual
   multi-cast Ethernet addresses can be enabled or disabled by the NU.EMA
   and  NU.DMA  functions.  Functions exist for getting information about
   Ethernet channels, portals, and Kontrollers.

   _____     ______    ___________   Value     Symbol    Description

   1         NU.OPN    Open portal.
   2         NU.CLO    Close portal.
   3         NU.RCV    Queue receive datagram buffer.
   4         NU.XMT    Queue transmit datagram buffer.
   5         NU.EMA    Enable multi-cast address.
   6         NU.DMA    Disable multi-cast address.
   7         NU.RCL    Read Ethernet channel list.
   10        NU.RCI    Read Ethernet channel information.
   11        NU.RCC    Read Ethernet channel counters.
   12        NU.SCA    Set Ethernet channel address.
   13        NU.RPL    Read Ethernet portal list.
   14        NU.RPI    Read Ethernet portal information.
   15        NU.RPC    Read Ethernet portal counters.
   16        NU.RKL    Read Ethernet Kontroller list.
   17        NU.RKI    Read Etherent Kontroller information.
   20        NU.RKC    Read Ethernet Kontroller counters.








                                    276



   120.1  UN.STA -- Portal Status Word   120.1  UN.STA -- Portal Status Word

   |--------------------------------------------------------------------|
   |RUN|ZRO|   |ADS|                    |Time domain reflectometry value|
   |--------------------------------------------------------------------|
     0   1   2  3-4 5-----------------17 18---------------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0         UNRUN     Portal is in run state (online).
   1         UNZRO     Zero counters after reading.
   3-4       UNADS     Address space of datagram buffer:

             UNA.EV    0 = Exec virtual.
             UNA.UV    1 = User virtual.
             UNA.PH    2 = Physical.

   18-35     UNTDR     Time domain reflectometry value.



   120.2  UN.PTY -- Protocol Identification Word   120.2  UN.PTY -- Protocol Identification Word

   |--------------------------------------------------------------------|
   |PAD|   | CHN |     Not used       |         Protocol type           |
   |--------------------------------------------------------------------|
     0  1-2 3---5 6-----------------17 18-----------------------------35

   ____      ______    _______   Bits      Symbol    Meaning

   0         UNPAD     Protocol uses padding.
   3-5       UNCHN     Ethernet channel number.
   18-35     UNPRO     Protocol type:

             PT%INF    -1 = Information protocol.
             PT%PRM    -2 = Promiscuous receiver type.
             PT%UNK    -3 = Unknown protocol receiver type.

















                                    277



   121  UNQTAB, UNQTB2, UNQTBC -- COMMAND TABLES|  121  UNQTAB, UNQTB2, UNQTBC -- COMMAND TABLES
|  
|  Description:   Contain command characteristics bits  for  all  monitor
|                 commands.  Entries in each table are indexed by command
|                 name offsets as follws:
|  
                  _____     _______ __|                 Table     Indexed by
|  
|                 UNQTAB    COMTAB
|                 UNQTB2    COMTB2
|                 UNQTBC    CSTTAB
|  
|  Defined in:    Table in COMMON, bits in S

   Used by:       COMCON, UUOCON

   See also:      COMTAB, COMTB2, DISP, DISP2, UNQTB2

   +-------------------------------------------------------+
   |           Command bits (described below)              |
   +-------------------------------------------------------+

   ____      ______    _______   Bits      Symbol    Meaning

|  0         NOINCK    No check for job initialization (JNA in JBTSB=0).
   1         NOCRLF    No automatic <CRLF>.
   2         NOPER     No printing monitor prompt (period).
   3         TTYRNU    Set terminal to user mode and start program.
   4         TTYRNC    Keep terminal in monitor mode and start program.
   5         TTYRNW    Set terminal to user level and restore I/O status.
   6         CMWRQ     Requeue job after command wait.
   7         NOMESS    No command response, ever.
   8         ERRFLG    Command error.
   9         SACFLG    Command was executed in an alternate context.
|  10        NOFLM     Do not force left margin.
|  11        PSTCST    Reserved for customer definition.
   18        NOCORE    No core needed for the command.
   19        NOJOBN    No job number needed for command.
   20        NOLOGN    A job does not need to be logged in to use this
                       command.
   21        NOACT     Command must wait until job's devices are not
                       active.
   22        NORUN     The job must not be running.  <CTRL/C> required.
   23        INCORE    Job must be in core, if it has core.
   24        NXONLY    Not legal for execute-only program.
   25        NBATCH    Not legal for batch job.
   26        CMDERR    Error encountered in command processing.
   27        NORCMP    Allow use by job that is not logged in, on a
                       remote terminal, even with M.RCMP set.
   28                  Reserved.
   29        CUSTMR    Reserved for customer definition.
   30-31               Reserved.


                                    278



                       Command is unique to:
   32        UNIQ.1    one character.
   33        UNIQ.2    two characters.
   34        UNIQ.3    three characters.
   35        UNIQ.4    four characters.

















































                                    279



   122  UNWTAB -- UNWIND RESOURCE TABLE   122  UNWTAB -- UNWIND RESOURCE TABLE

   Description:   Contains the names of routines for unwinding  scheduler
                  interlocks   and   resource   waits.    This  table  is
                  equivalent to AVALTB and REQTAB.  The default unwinding
                  routine  is  UNWRES.   The default scheduler routine is
                  SCDRES.

   Defined in:    S

   Used by:       SCHED1

   Each word in this table appears as:

   +-----------------------------------------------------------+
   | Ptr to unwind routine     | Ptr to scheduler routine      |
   +-----------------------------------------------------------+

   Where the left half contains the address of  the  routine  to  use  to
   unwind  the  resource,  and the right half contains the address of the
   scheduler level routine to get the resource.

































                                    280



   123  UFD -- USER FILE DIRECTORY   123  UFD -- USER FILE DIRECTORY

   Description:   Contains the locations for all files in  the  structure
                  belonging  to  a  particular project programmer number.
                  One UFD in each structure for each  project  programmer
                  number having any files in that structure.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO

                +-------------------------------------+
                | File 1 entry                        |
                |-------------------------------------|
                | File 2 entry                        |
                |-------------------------------------|
                | File 3 entry                        |
                |-------------------------------------|
                |                                     |
                +-------------------------------------+

   Format of each entry:

                +------------------------------------------------+
   UFDNAM       | File name in SIXBIT                            |
                |------------------------------------------------|
   UFDEXT       | Extension               | CFP                  | UFDCFP
                +------------------------------------------------+

   Note:

   See MFD for discussion of compressed file pointers (CFPs).






















                                    281



   124  UPT -- USER PROCESS TABLE   124  UPT -- USER PROCESS TABLE

   Description:   Contains information about each job, and is used by the
                  monitor to control memory mapping, scheduling, and I/O,
                  and contains "scratch space" for  dynamically  changing
                  variables about the job.

                  The UPT is pointed to by the GETTAB table .GTUPM (100),
                  and  has  been called the User Page Map Page (UPMP) for
                  many years.  The UPT points to the page maps  for  each
                  user  section  that  has  been created, but contains no
                  page mapping information itself.

                  The offsets into the UPT are often called by the symbol
                  .USxxx,  which  is  equivalent to .UPxxx (listed below)
                  plus .UPMP (the start of the UPT).  Offset  values  are
                  shown for items that are used by hardware.

   Defined in:    S.MAC

   Symbol       Map                                             
                +-------------------------------------------------------+
   JOBPDO       / Push down list                             (156 words)/
                |-------------------------------------------------------|
   JOBPRO       / Protected job data area                     (24 words)/
                |-------------------------------------------------------|
   .UPLPS       | Current first virtual page numbers on swapout, or     |
                | pointer to table of same for fragmented, low segment  |
                | swapout                                               |
                |-------------------------------------------------------|
   .UPSLX       |                          | SWPLST index (paging I/O)  |
                |-------------------------------------------------------|
   .UPTMP       / Temporary locations used for swapping        (6 words)/
                |-------------------------------------------------------|
   .UPFFT       | Virtual time of first page fault                      |
                |-------------------------------------------------------|
   .UPLFT       | Virtual time of last fault                            |
                |-------------------------------------------------------|
   .UPVCT       | Real page faults         | Faults when page is in core|
                |-------------------------------------------------------|
   .UPREL       | Highest location gotten by CORE UUO or command        |
                |-------------------------------------------------------|
   .UPNXP       | Page range as specified in PAGE. argument list, or    |
                | current page being processed by PAGE.                 |
                |-------------------------------------------------------|
   .UPJOB       | Job number                                            |
                |-------------------------------------------------------|
   .UPMEM       | Total virtual memory a job has                        |
                |-------------------------------------------------------|
   .UPHSE       | Virtual address of the end of the high segment        |
                |-------------------------------------------------------|



                                    282



                |-------------------------------------------------------|
   .UPHSS       | Virtual address of the start of the high segment      |
                |-------------------------------------------------------|
   .UPVRT       | Non-zero if job is virtual (LH=hiseg, RH=lowseg)      |
                |-------------------------------------------------------|
   .UPBTS*      | Random collection of bits  (see Notes)                |
                |-------------------------------------------------------|
   .UPANA       | Count of non-accessible pages                         |
                |-------------------------------------------------------|
   .UPICT       | Incremental count of page faults                      |
                |-------------------------------------------------------|
   .UPPFH       | Copy of .JBPFH on swap-out                            |
                |-------------------------------------------------------|
   .UPFOP       | Used by FILOP. to recover from a page fail            |
                |-------------------------------------------------------|
   .UPHVA       | Used for address checking at interrupt level          |
                |-------------------------------------------------------|
   .UPLST       | Ptr to swappable DDBs    | Ptr to saved context blk   |
                |-------------------------------------------------------|
   .UPFCC       | Header for cached free space                          |
                |-------------------------------------------------------|
   .UPFCU       | Header for uncached free space               (KL only)|
                |-------------------------------------------------------|
   .UPFCD       | Core loc. of SWITCH.INI  | Header for restricted      |
                |                          | free space                 |
                |-------------------------------------------------------|
   .UPLNM       | T4                       | Ptr. to logical name space |
                |-------------------------------------------------------|
   .UPCTA       |                          | Extended channel table loc.|
                |-------------------------------------------------------|
   .UPMBF       | Address of monitor buffer                             |
                |-------------------------------------------------------|
   .UPLBF       | Flag to indicate use of extra page of directory       |
                | 0=don't get, -n=IOWD for it, n=can get                |
                |-------------------------------------------------------|
   .UPSPT       | Current section pointer (swapping I/O, and so forth)  |
                |-------------------------------------------------------|
   .UPNCR       | Number of core page in NZS                            |
                |-------------------------------------------------------|
   .UPSCT       / Array of counters for no. of pages            (9 bits)/
                |-------------------------------------------------------|
   .UPPFF       | PFH page fault PC flags                               |
                |-------------------------------------------------------|
   .UPPFC       | PFH page fault PC counter                             |
                |-------------------------------------------------------|
   .UPPFL       | Last page paged out by PFH                            |
                |-------------------------------------------------------|
   .UPPFU       | Count of page faults for current UUO                  |
                |-------------------------------------------------------|
   .UPUSN       | Section number read as argument from /USE on R, RUN,  |
                | GET and MERGE commands                                |
                |-------------------------------------------------------|


                                    283



                |-------------------------------------------------------|
   .UPCDB       | Mapping pointers for current CPU's CDB                |
                |-------------------------------------------------------|
   .UPUSA       | Program start address                                 |
                |-------------------------------------------------------|
   .UPEPL       | Address of extended pushdown list                     |
                |-------------------------------------------------------|
   .UPUAC       / Job's ACs while getting PFH                 (20 words)/
                |-------------------------------------------------------|
   .UPSBF       | Saved .UPMBF when doing 4-block read                  |
                |-------------------------------------------------------|
   .UPEND       | Last word allocated to UPMP                           |
                |-------------------------------------------------------|
   .UPPFT       | Address of user page fault trap instruction           |
                |-------------------------------------------------------|
   .UPAOT  421  | Address of user arithmetic trap instruction           |
                |-------------------------------------------------------|
   .UPPDT  422  | Address of user push down list overflow instruction   |
                |-------------------------------------------------------|
   .UP03T  423  | Address of user trap 3 instruction                    |
                |-------------------------------------------------------|
   .UPMUO  424  | MUUO flags               | MUUO opcode, AC            |
                |-------------------------------------------------------|
   .UPMUP  425  | MUUO old PC                                           |
                |-------------------------------------------------------|
   .UPMUE  426  | MUUO effective address                                |
                |-------------------------------------------------------|
   .UPUPF  427  | Addr of MUU Process Context word                      |
                |-------------------------------------------------------|
   .UPMTS       / MUUO trap vector                            (10 words)/
   .UPMTE       / End of trap vector                                    /
                |-------------------------------------------------------|
   WSBTAB       / Working set bit table for Section 0         (17 words)/
                |-------------------------------------------------------|
                / Reserved                                              /
                |-------------------------------------------------------|
   .LMPFW  500  | Page fail word                                        |
                |-------------------------------------------------------|
   .LMPFP  501  / Page fail old PC word                        (2 words)/
                |-------------------------------------------------------|
           503  | Page fail new PC word                                 |
                |-------------------------------------------------------|
   .LMEBH  504  | EBOX cycle meter count (high-order bits)              |
                |-------------------------------------------------------|
   .LMEBL  505  | EBOX cycle meter count (low-order bits)               |
                |-------------------------------------------------------|
   .LMMBH  506  | MBOX cycle meter count (high-order bits)              |
                |-------------------------------------------------------|
   .LMMBL  507  | MBOX cycle meter count (low-order bits)               |
                |-------------------------------------------------------|




                                    284



                |-------------------------------------------------------|
                / Not used                                              /
                |-------------------------------------------------------|
   SECTAB       / Address of user's section page map pages              /
                |-------------------------------------------------------|
                / Reserved for software                                 /
                |-------------------------------------------------------|
   .UMORG       | Map slots for funny space follow this word            |
                |-------------------------------------------------------|
   .UMWSB       | Map slot for .WSBNZ                                   |
                |-------------------------------------------------------|
   .UMUPM       | Map slot for current section map                      |
                |-------------------------------------------------------|
   .UMJDT       | Map slot for .JDAT                                    |
                |-------------------------------------------------------|
   .UMVJD       | Map slot for .VJDT                                    |
                |-------------------------------------------------------|
   .UMTMP       | Map slot for temporary use                            |
                |-------------------------------------------------------|
   .UMJBK       | Map slot used by JOBPEK                               |
                |-------------------------------------------------------|
   .UMNZM       | Reserved                                              |
                |-------------------------------------------------------|
   .UMUUP       | Cached UPT map slot                                   |
                +-------------------------------------------------------+

   Notes:

   The bits defined in .UPBTS are:

   ____      ______    _______   Bits      Symbol    Meaning

   0         UP.BIG    User has created extended sections.
   1         UP.WHC    Working set has changed.
   2         UP.MGP    Monitor got PFH.
   3         UP.GET    Running GET to get program that is to big to fit
                       in core.
   4         UP.SAA    Set access allowed immediately.
   5         UP.CSP    Core image may contain SPY pages.
   6         UP.MPF    Merging PFH.
   7         UP.MMO    Job owned and released MM resource over scheduler
                       call.
   8         UP.PGB    Paging I/O pages have not been returned.
   9         UP.IYB    "In-your-behalf" PPN.
   10        UP.WSS    Working set is scrambled.
   11        UP.DST    Don't put TTY at monitor level.
   12        UP.CXO    Core image (not just high segment) is
                       execute-only.
   13        UP.FIP    FILOP.  in progress.
   14        UP.DDW    Don't diddle working set.
   15                  Reserved.
   16        UP.NZS    Need to swap in non-zero section.


                                    285



   16        UP.MAP    Current SWPLST entry has map information.
   17        UP.CTX    Context save or restore in progress.  Used for RUN
                       error recovery and high segment manipulation.
   18        UP.SWF    SET WATCH FILES has been set.
   19        UP.JXP    MAPBAK.  Call XPANDH when done.
   20        UP.EPL    Count of non-accessible pages.
















































                                    286



   125  USER PAGE MAP (SECTION MAP)   125  USER PAGE MAP (SECTION MAP)

   Description:   The page map contains the  physical  page  number  that
                  corresponds to each virtual page for the user.  Indexed
                  by virtual page number, this page contains one word for
                  each  virtual  page.   That  word contains the physical
                  address for  that  page,  and  the  accessibility  bits
                  associated  with  the  page.  The monitor maintains one
                  Section Map for each user section.

   Each page pointer is formatted as follows:

   +-------------------------------------------------------+
   |Cd|P|W|K|C|A|SP|N|C|O|SS|     Addr                     |
   +-------------------------------------------------------+

   ____      ______    _______   Bits      Symbol    Meaning

   0-2                 Accessibility code (see below).
   3         PM.PUB    Public page.
   4         PM.WRT    Writable page.
   5         PM.KPM    "Keep Me" bit (page should not be cleared on
                       sweeps).
   6         PM.CSH    Page has been cached.
   7         PM.AAB    Access allowed bit, for swapped-out pages.
   8         PM.SPY    Spy privileges are required to access this page.
   9         PM.NIA    No I/O allowed (usually set for high segment
                       pages).
   10        PM.COR    Page is in core.
   11        PM.OIQ    On for in-progress queues.
   12        PM.SSP    Slow swapping space.
   15-35     PM.ADR    Disk or memory address field.  This address is
                       essentially an effective address.  The
                       accessibility code in bits 0-2 (described below)
                       is used to determine the handling of the address,
                       whether immediate or indirect.  If indirect, the
                       address is mapped through the Special Pages Table
                       (SPT).

   The accessibility codes stored in bits 0-2 are:

   ____      ______    _______   Code      Symbol    Meaning

   0         PM.NCD    No access is allowed.
   1         PM.DCD    Immediate page pointer.
   2         PM.SCD    Shared page pointer.
   3         PM.ICD    Indirect page pointer.
   4         PM.ACD    Bit mask for all codes.






                                    287



   126  UUOTAB -- UUO DISPATCH ADDRESS TABLE   126  UUOTAB -- UUO DISPATCH ADDRESS TABLE

   Description:   Contains address of operator-dependent UUO routines.

                  Table is in order of UUO op code,  with  two  addresses
                  per  entry.   Entry n contains entries corresponding to
                  op codes 40 + 2n, 41 + 2n.

                  Entries corresponding to invalid op codes  contain  the
                  address  of  UUOERR.   Some  of  these are reserved for
                  future use  by  DIGITAL,  others  for  customers.   See
                  current listing for specific examples.

   Defined in:    UUOCON

   Used by:       UUOCON

                +-------------------------------------------------------+
                | Addr for op code 40      | Addr for op code 41        |
                |-------------------------------------------------------|
                | Addr for op code 42      | Addr for op code 43        |
                |-------------------------------------------------------|
                /                          .                            /
                /                          .                            /
                |-------------------------------------------------------|
                | Addr for op code 76      |  Addr for op code 77       |
                +-------------------------------------------------------+



























                                    288



   127  WSBTAB -- WORKING SET BIT TABLE   127  WSBTAB -- WORKING SET BIT TABLE

   Description:   This bit table is found in the UPT from location 440 to
                  456.   If  a bit is on in this table, then the relative
|                 page is in core.  Pages  1000(8)  -  1037(8)  represent
|                 funny  space.   See  also  .WSBNZ  for non-zero section
|                 working set bit maps.

   Defined in:    S.MAC

   Used by:       VMSER

                +-------------------------------------+
                |                                     |
                |                                     |
                |                                     |
                |-------------------------------------|
        440     | | | | | |                           |
                |-------------------------------------|
                |                                     | WSBTAB
                |                                     |
                |-------------------------------------|
        456     |                           | | | | | |
                |-------------------------------------|
                |                                     |





























                                    289
